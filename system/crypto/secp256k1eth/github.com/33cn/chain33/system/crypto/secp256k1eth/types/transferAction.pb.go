// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: transferAction.proto

package types

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssetsTransferToExecChain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cointoken string `protobuf:"bytes,1,opt,name=cointoken,proto3" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Note      []byte `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	ExecName  string `protobuf:"bytes,4,opt,name=execName,proto3" json:"execName,omitempty"`
	To        string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AssetsTransferToExecChain33) Reset() {
	*x = AssetsTransferToExecChain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transferAction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsTransferToExecChain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsTransferToExecChain33) ProtoMessage() {}

func (x *AssetsTransferToExecChain33) ProtoReflect() protoreflect.Message {
	mi := &file_transferAction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsTransferToExecChain33.ProtoReflect.Descriptor instead.
func (*AssetsTransferToExecChain33) Descriptor() ([]byte, []int) {
	return file_transferAction_proto_rawDescGZIP(), []int{0}
}

func (x *AssetsTransferToExecChain33) GetCointoken() string {
	if x != nil {
		return x.Cointoken
	}
	return ""
}

func (x *AssetsTransferToExecChain33) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetsTransferToExecChain33) GetNote() []byte {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *AssetsTransferToExecChain33) GetExecName() string {
	if x != nil {
		return x.ExecName
	}
	return ""
}

func (x *AssetsTransferToExecChain33) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type AssetsTransferChain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cointoken string `protobuf:"bytes,1,opt,name=cointoken,proto3" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Note      []byte `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AssetsTransferChain33) Reset() {
	*x = AssetsTransferChain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transferAction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsTransferChain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsTransferChain33) ProtoMessage() {}

func (x *AssetsTransferChain33) ProtoReflect() protoreflect.Message {
	mi := &file_transferAction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsTransferChain33.ProtoReflect.Descriptor instead.
func (*AssetsTransferChain33) Descriptor() ([]byte, []int) {
	return file_transferAction_proto_rawDescGZIP(), []int{1}
}

func (x *AssetsTransferChain33) GetCointoken() string {
	if x != nil {
		return x.Cointoken
	}
	return ""
}

func (x *AssetsTransferChain33) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetsTransferChain33) GetNote() []byte {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *AssetsTransferChain33) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type CoinsActionChain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*CoinsActionChain33_Transfer
	//	*CoinsActionChain33_TransferToExec
	Value isCoinsActionChain33_Value `protobuf_oneof:"value"`
	Ty    int32                      `protobuf:"varint,3,opt,name=ty,proto3" json:"ty,omitempty"`
}

func (x *CoinsActionChain33) Reset() {
	*x = CoinsActionChain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transferAction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinsActionChain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinsActionChain33) ProtoMessage() {}

func (x *CoinsActionChain33) ProtoReflect() protoreflect.Message {
	mi := &file_transferAction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinsActionChain33.ProtoReflect.Descriptor instead.
func (*CoinsActionChain33) Descriptor() ([]byte, []int) {
	return file_transferAction_proto_rawDescGZIP(), []int{2}
}

func (m *CoinsActionChain33) GetValue() isCoinsActionChain33_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *CoinsActionChain33) GetTransfer() *AssetsTransferChain33 {
	if x, ok := x.GetValue().(*CoinsActionChain33_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *CoinsActionChain33) GetTransferToExec() *AssetsTransferToExecChain33 {
	if x, ok := x.GetValue().(*CoinsActionChain33_TransferToExec); ok {
		return x.TransferToExec
	}
	return nil
}

func (x *CoinsActionChain33) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isCoinsActionChain33_Value interface {
	isCoinsActionChain33_Value()
}

type CoinsActionChain33_Transfer struct {
	Transfer *AssetsTransferChain33 `protobuf:"bytes,1,opt,name=transfer,proto3,oneof"`
}

type CoinsActionChain33_TransferToExec struct {
	TransferToExec *AssetsTransferToExecChain33 `protobuf:"bytes,2,opt,name=transferToExec,proto3,oneof"`
}

func (*CoinsActionChain33_Transfer) isCoinsActionChain33_Value() {}

func (*CoinsActionChain33_TransferToExec) isCoinsActionChain33_Value() {}

// 创建/调用合约的请求结构
type EVMAction4Chain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 转账金额
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// 消耗限制，默认为Transaction.Fee
	GasLimit uint64 `protobuf:"varint,2,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	// gas价格，默认为1
	GasPrice uint32 `protobuf:"varint,3,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	// 合约数据
	Code []byte `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	//交易参数
	Para []byte `protobuf:"bytes,5,opt,name=para,proto3" json:"para,omitempty"`
	// 合约别名，方便识别
	Alias string `protobuf:"bytes,6,opt,name=alias,proto3" json:"alias,omitempty"`
	// 交易备注
	Note string `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`
	// 调用合约地址
	ContractAddr string `protobuf:"bytes,8,opt,name=contractAddr,proto3" json:"contractAddr,omitempty"`
}

func (x *EVMAction4Chain33) Reset() {
	*x = EVMAction4Chain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transferAction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVMAction4Chain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVMAction4Chain33) ProtoMessage() {}

func (x *EVMAction4Chain33) ProtoReflect() protoreflect.Message {
	mi := &file_transferAction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVMAction4Chain33.ProtoReflect.Descriptor instead.
func (*EVMAction4Chain33) Descriptor() ([]byte, []int) {
	return file_transferAction_proto_rawDescGZIP(), []int{3}
}

func (x *EVMAction4Chain33) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EVMAction4Chain33) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *EVMAction4Chain33) GetGasPrice() uint32 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *EVMAction4Chain33) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *EVMAction4Chain33) GetPara() []byte {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *EVMAction4Chain33) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *EVMAction4Chain33) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *EVMAction4Chain33) GetContractAddr() string {
	if x != nil {
		return x.ContractAddr
	}
	return ""
}

type TransactionChain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Execer    []byte            `protobuf:"bytes,1,opt,name=execer,proto3" json:"execer,omitempty"`
	Payload   []byte            `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature *SignatureChain33 `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Fee       int64             `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Expire    int64             `protobuf:"varint,5,opt,name=expire,proto3" json:"expire,omitempty"`
	//随机ID，可以防止payload 相同的时候，交易重复
	Nonce int64 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	//对方地址，如果没有对方地址，可以为空
	To         string `protobuf:"bytes,7,opt,name=to,proto3" json:"to,omitempty"`
	GroupCount int32  `protobuf:"varint,8,opt,name=groupCount,proto3" json:"groupCount,omitempty"`
	Header     []byte `protobuf:"bytes,9,opt,name=header,proto3" json:"header,omitempty"`
	Next       []byte `protobuf:"bytes,10,opt,name=next,proto3" json:"next,omitempty"`
	ChainID    int32  `protobuf:"varint,11,opt,name=chainID,proto3" json:"chainID,omitempty"`
}

func (x *TransactionChain33) Reset() {
	*x = TransactionChain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transferAction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionChain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionChain33) ProtoMessage() {}

func (x *TransactionChain33) ProtoReflect() protoreflect.Message {
	mi := &file_transferAction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionChain33.ProtoReflect.Descriptor instead.
func (*TransactionChain33) Descriptor() ([]byte, []int) {
	return file_transferAction_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionChain33) GetExecer() []byte {
	if x != nil {
		return x.Execer
	}
	return nil
}

func (x *TransactionChain33) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TransactionChain33) GetSignature() *SignatureChain33 {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionChain33) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransactionChain33) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *TransactionChain33) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionChain33) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionChain33) GetGroupCount() int32 {
	if x != nil {
		return x.GroupCount
	}
	return 0
}

func (x *TransactionChain33) GetHeader() []byte {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TransactionChain33) GetNext() []byte {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *TransactionChain33) GetChainID() int32 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

type SignatureChain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ty     int32  `protobuf:"varint,1,opt,name=ty,proto3" json:"ty,omitempty"`
	Pubkey []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	//当ty为5时，格式应该用RingSignature去解析
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignatureChain33) Reset() {
	*x = SignatureChain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transferAction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureChain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureChain33) ProtoMessage() {}

func (x *SignatureChain33) ProtoReflect() protoreflect.Message {
	mi := &file_transferAction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureChain33.ProtoReflect.Descriptor instead.
func (*SignatureChain33) Descriptor() ([]byte, []int) {
	return file_transferAction_proto_rawDescGZIP(), []int{5}
}

func (x *SignatureChain33) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *SignatureChain33) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *SignatureChain33) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_transferAction_proto protoreflect.FileDescriptor

var file_transferAction_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x93, 0x01,
	0x0a, 0x1b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x12, 0x3a, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x48, 0x00, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x33, 0x33, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xd9, 0x01, 0x0a, 0x11, 0x45, 0x56, 0x4d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x34, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x72, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x61, 0x72, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0xb3, 0x02, 0x0a,
	0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x33, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x65, 0x63, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33,
	0x33, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x44, 0x22, 0x58, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x3a, 0x5a, 0x38,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x33, 0x33, 0x63, 0x6e, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x65,
	0x74, 0x68, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transferAction_proto_rawDescOnce sync.Once
	file_transferAction_proto_rawDescData = file_transferAction_proto_rawDesc
)

func file_transferAction_proto_rawDescGZIP() []byte {
	file_transferAction_proto_rawDescOnce.Do(func() {
		file_transferAction_proto_rawDescData = protoimpl.X.CompressGZIP(file_transferAction_proto_rawDescData)
	})
	return file_transferAction_proto_rawDescData
}

var file_transferAction_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_transferAction_proto_goTypes = []interface{}{
	(*AssetsTransferToExecChain33)(nil), // 0: types.AssetsTransferToExecChain33
	(*AssetsTransferChain33)(nil),       // 1: types.AssetsTransferChain33
	(*CoinsActionChain33)(nil),          // 2: types.CoinsActionChain33
	(*EVMAction4Chain33)(nil),           // 3: types.EVMAction4Chain33
	(*TransactionChain33)(nil),          // 4: types.TransactionChain33
	(*SignatureChain33)(nil),            // 5: types.SignatureChain33
}
var file_transferAction_proto_depIdxs = []int32{
	1, // 0: types.CoinsActionChain33.transfer:type_name -> types.AssetsTransferChain33
	0, // 1: types.CoinsActionChain33.transferToExec:type_name -> types.AssetsTransferToExecChain33
	5, // 2: types.TransactionChain33.signature:type_name -> types.SignatureChain33
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_transferAction_proto_init() }
func file_transferAction_proto_init() {
	if File_transferAction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transferAction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsTransferToExecChain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transferAction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsTransferChain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transferAction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinsActionChain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transferAction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVMAction4Chain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transferAction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionChain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transferAction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureChain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transferAction_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CoinsActionChain33_Transfer)(nil),
		(*CoinsActionChain33_TransferToExec)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transferAction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transferAction_proto_goTypes,
		DependencyIndexes: file_transferAction_proto_depIdxs,
		MessageInfos:      file_transferAction_proto_msgTypes,
	}.Build()
	File_transferAction_proto = out.File
	file_transferAction_proto_rawDesc = nil
	file_transferAction_proto_goTypes = nil
	file_transferAction_proto_depIdxs = nil
}
