// Code generated by protoc-gen-go. DO NOT EDIT.
// source: none.proto

package types

import (
	fmt "fmt"
	math "math"

	types "github.com/33cn/chain33/types"
	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NoneAction struct {
	// Types that are valid to be assigned to Value:
	//	*NoneAction_CommitDelay
	Value                isNoneAction_Value `protobuf_oneof:"value"`
	Ty                   int32              `protobuf:"varint,2,opt,name=Ty,proto3" json:"Ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NoneAction) Reset()         { *m = NoneAction{} }
func (m *NoneAction) String() string { return proto.CompactTextString(m) }
func (*NoneAction) ProtoMessage()    {}
func (*NoneAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_784bcb57d038eb7f, []int{0}
}

func (m *NoneAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoneAction.Unmarshal(m, b)
}
func (m *NoneAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoneAction.Marshal(b, m, deterministic)
}
func (m *NoneAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoneAction.Merge(m, src)
}
func (m *NoneAction) XXX_Size() int {
	return xxx_messageInfo_NoneAction.Size(m)
}
func (m *NoneAction) XXX_DiscardUnknown() {
	xxx_messageInfo_NoneAction.DiscardUnknown(m)
}

var xxx_messageInfo_NoneAction proto.InternalMessageInfo

type isNoneAction_Value interface {
	isNoneAction_Value()
}

type NoneAction_CommitDelay struct {
	CommitDelay *CommitDelayTx `protobuf:"bytes,1,opt,name=commitDelay,proto3,oneof"`
}

func (*NoneAction_CommitDelay) isNoneAction_Value() {}

func (m *NoneAction) GetValue() isNoneAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *NoneAction) GetCommitDelay() *CommitDelayTx {
	if x, ok := m.GetValue().(*NoneAction_CommitDelay); ok {
		return x.CommitDelay
	}
	return nil
}

func (m *NoneAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NoneAction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NoneAction_CommitDelay)(nil),
	}
}

// 提交延时交易类型
type CommitDelayTx struct {
	DelayTx                *types.Transaction `protobuf:"bytes,1,opt,name=delayTx,proto3" json:"delayTx,omitempty"`
	RelativeDelayTime      int64              `protobuf:"varint,2,opt,name=relativeDelayTime,proto3" json:"relativeDelayTime,omitempty"`
	IsBlockHeightDelayTime bool               `protobuf:"varint,3,opt,name=isBlockHeightDelayTime,proto3" json:"isBlockHeightDelayTime,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}           `json:"-"`
	XXX_unrecognized       []byte             `json:"-"`
	XXX_sizecache          int32              `json:"-"`
}

func (m *CommitDelayTx) Reset()         { *m = CommitDelayTx{} }
func (m *CommitDelayTx) String() string { return proto.CompactTextString(m) }
func (*CommitDelayTx) ProtoMessage()    {}
func (*CommitDelayTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_784bcb57d038eb7f, []int{1}
}

func (m *CommitDelayTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitDelayTx.Unmarshal(m, b)
}
func (m *CommitDelayTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitDelayTx.Marshal(b, m, deterministic)
}
func (m *CommitDelayTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitDelayTx.Merge(m, src)
}
func (m *CommitDelayTx) XXX_Size() int {
	return xxx_messageInfo_CommitDelayTx.Size(m)
}
func (m *CommitDelayTx) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitDelayTx.DiscardUnknown(m)
}

var xxx_messageInfo_CommitDelayTx proto.InternalMessageInfo

func (m *CommitDelayTx) GetDelayTx() *types.Transaction {
	if m != nil {
		return m.DelayTx
	}
	return nil
}

func (m *CommitDelayTx) GetRelativeDelayTime() int64 {
	if m != nil {
		return m.RelativeDelayTime
	}
	return 0
}

func (m *CommitDelayTx) GetIsBlockHeightDelayTime() bool {
	if m != nil {
		return m.IsBlockHeightDelayTime
	}
	return false
}

// 提交延时交易回执
type CommitDelayTxLog struct {
	Submitter            string   `protobuf:"bytes,1,opt,name=submitter,proto3" json:"submitter,omitempty"`
	DelayTxHash          string   `protobuf:"bytes,2,opt,name=delayTxHash,proto3" json:"delayTxHash,omitempty"`
	EndDelayTime         int64    `protobuf:"varint,3,opt,name=endDelayTime,proto3" json:"endDelayTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitDelayTxLog) Reset()         { *m = CommitDelayTxLog{} }
func (m *CommitDelayTxLog) String() string { return proto.CompactTextString(m) }
func (*CommitDelayTxLog) ProtoMessage()    {}
func (*CommitDelayTxLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_784bcb57d038eb7f, []int{2}
}

func (m *CommitDelayTxLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitDelayTxLog.Unmarshal(m, b)
}
func (m *CommitDelayTxLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitDelayTxLog.Marshal(b, m, deterministic)
}
func (m *CommitDelayTxLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitDelayTxLog.Merge(m, src)
}
func (m *CommitDelayTxLog) XXX_Size() int {
	return xxx_messageInfo_CommitDelayTxLog.Size(m)
}
func (m *CommitDelayTxLog) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitDelayTxLog.DiscardUnknown(m)
}

var xxx_messageInfo_CommitDelayTxLog proto.InternalMessageInfo

func (m *CommitDelayTxLog) GetSubmitter() string {
	if m != nil {
		return m.Submitter
	}
	return ""
}

func (m *CommitDelayTxLog) GetDelayTxHash() string {
	if m != nil {
		return m.DelayTxHash
	}
	return ""
}

func (m *CommitDelayTxLog) GetEndDelayTime() int64 {
	if m != nil {
		return m.EndDelayTime
	}
	return 0
}

func init() {
	proto.RegisterType((*NoneAction)(nil), "types.NoneAction")
	proto.RegisterType((*CommitDelayTx)(nil), "types.CommitDelayTx")
	proto.RegisterType((*CommitDelayTxLog)(nil), "types.CommitDelayTxLog")
}

func init() {
	proto.RegisterFile("none.proto", fileDescriptor_784bcb57d038eb7f)
}

var fileDescriptor_784bcb57d038eb7f = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4b, 0xfb, 0x30,
	0x18, 0xc7, 0x7f, 0x6d, 0xe9, 0x6f, 0xeb, 0x53, 0x15, 0xf7, 0x20, 0x32, 0xc4, 0x43, 0xe9, 0xa9,
	0x87, 0x51, 0x41, 0x41, 0xbc, 0x5a, 0x3d, 0xf4, 0x20, 0x1e, 0x42, 0x4f, 0x5e, 0x24, 0xeb, 0x1e,
	0xb6, 0x60, 0x9b, 0x8c, 0x26, 0x2b, 0xf6, 0xf5, 0xf8, 0x46, 0x85, 0xb4, 0xd2, 0x15, 0xf1, 0x16,
	0xbe, 0x7f, 0xf2, 0xfd, 0x84, 0x00, 0x48, 0x25, 0x29, 0xdd, 0x37, 0xca, 0x28, 0xf4, 0x4d, 0xb7,
	0x27, 0x7d, 0xb5, 0x30, 0x0d, 0x97, 0x9a, 0x97, 0x46, 0x28, 0xd9, 0x3b, 0xf1, 0x3b, 0xc0, 0xab,
	0x92, 0xf4, 0x68, 0x35, 0x7c, 0x80, 0xb0, 0x54, 0x75, 0x2d, 0xcc, 0x33, 0x55, 0xbc, 0x5b, 0x3a,
	0x91, 0x93, 0x84, 0xb7, 0x17, 0xa9, 0x6d, 0xa7, 0x4f, 0xa3, 0x53, 0x7c, 0xe6, 0xff, 0xd8, 0x71,
	0x14, 0xcf, 0xc0, 0x2d, 0xba, 0xa5, 0x1b, 0x39, 0x89, 0xcf, 0xdc, 0xa2, 0xcb, 0x66, 0xe0, 0xb7,
	0xbc, 0x3a, 0x50, 0xfc, 0xe5, 0xc0, 0xe9, 0xa4, 0x89, 0x2b, 0x98, 0x6d, 0xfa, 0xe3, 0x30, 0x80,
	0xc3, 0x40, 0x31, 0xd2, 0xb1, 0x9f, 0x08, 0xae, 0x60, 0xd1, 0x50, 0xc5, 0x8d, 0x68, 0xa9, 0xbf,
	0x40, 0xd4, 0x64, 0x77, 0x3c, 0xf6, 0xdb, 0xc0, 0x7b, 0xb8, 0x14, 0x3a, 0xab, 0x54, 0xf9, 0x91,
	0x93, 0xd8, 0xee, 0xcc, 0x58, 0xf1, 0x22, 0x27, 0x99, 0xb3, 0x3f, 0xdc, 0xb8, 0x85, 0xf3, 0x09,
	0xe4, 0x8b, 0xda, 0xe2, 0x35, 0x04, 0xfa, 0xb0, 0xae, 0x85, 0x31, 0xd4, 0x58, 0xd2, 0x80, 0x8d,
	0x02, 0x46, 0x10, 0x0e, 0x88, 0x39, 0xd7, 0x3b, 0x4b, 0x14, 0xb0, 0x63, 0x09, 0x63, 0x38, 0x21,
	0xb9, 0x99, 0x12, 0x78, 0x6c, 0xa2, 0x65, 0xf0, 0x36, 0x4f, 0xd3, 0x1b, 0xfb, 0xfc, 0xf5, 0x7f,
	0xfb, 0x23, 0x77, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x89, 0x85, 0xf8, 0xd7, 0xb9, 0x01, 0x00,
	0x00,
}
