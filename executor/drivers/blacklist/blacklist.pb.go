// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blacklist.proto

/*
Package blacklist is a generated protocol buffer package.

It is generated from these files:
	blacklist.proto

It has these top-level messages:
	BlackAction
	Record
	Org
*/
package blacklist

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlackAction struct {
	// Types that are valid to be assigned to Value:
	//	*BlackAction_Rc
	//	*BlackAction_Or
	Value isBlackAction_Value `protobuf_oneof:"value"`
	Ty    int32               `protobuf:"varint,2,opt,name=ty" json:"ty,omitempty"`
}

func (m *BlackAction) Reset()                    { *m = BlackAction{} }
func (m *BlackAction) String() string            { return proto.CompactTextString(m) }
func (*BlackAction) ProtoMessage()               {}
func (*BlackAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isBlackAction_Value interface {
	isBlackAction_Value()
}

type BlackAction_Rc struct {
	Rc *Record `protobuf:"bytes,1,opt,name=rc,oneof"`
}
type BlackAction_Or struct {
	Or *Org `protobuf:"bytes,3,opt,name=or,oneof"`
}

func (*BlackAction_Rc) isBlackAction_Value() {}
func (*BlackAction_Or) isBlackAction_Value() {}

func (m *BlackAction) GetValue() isBlackAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *BlackAction) GetRc() *Record {
	if x, ok := m.GetValue().(*BlackAction_Rc); ok {
		return x.Rc
	}
	return nil
}

func (m *BlackAction) GetOr() *Org {
	if x, ok := m.GetValue().(*BlackAction_Or); ok {
		return x.Or
	}
	return nil
}

func (m *BlackAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BlackAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BlackAction_OneofMarshaler, _BlackAction_OneofUnmarshaler, _BlackAction_OneofSizer, []interface{}{
		(*BlackAction_Rc)(nil),
		(*BlackAction_Or)(nil),
	}
}

func _BlackAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BlackAction)
	// value
	switch x := m.Value.(type) {
	case *BlackAction_Rc:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rc); err != nil {
			return err
		}
	case *BlackAction_Or:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Or); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BlackAction.Value has unexpected type %T", x)
	}
	return nil
}

func _BlackAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BlackAction)
	switch tag {
	case 1: // value.rc
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Record)
		err := b.DecodeMessage(msg)
		m.Value = &BlackAction_Rc{msg}
		return true, err
	case 3: // value.or
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Org)
		err := b.DecodeMessage(msg)
		m.Value = &BlackAction_Or{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BlackAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BlackAction)
	// value
	switch x := m.Value.(type) {
	case *BlackAction_Rc:
		s := proto.Size(x.Rc)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BlackAction_Or:
		s := proto.Size(x.Or)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Record struct {
	RecordId         string `protobuf:"bytes,1,opt,name=recordId" json:"recordId,omitempty"`
	NegativeType     string `protobuf:"bytes,2,opt,name=negativeType" json:"negativeType,omitempty"`
	NegativeSeverity string `protobuf:"bytes,3,opt,name=negativeSeverity" json:"negativeSeverity,omitempty"`
	NegativeInfo     string `protobuf:"bytes,4,opt,name=negativeInfo" json:"negativeInfo,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Record) GetRecordId() string {
	if m != nil {
		return m.RecordId
	}
	return ""
}

func (m *Record) GetNegativeType() string {
	if m != nil {
		return m.NegativeType
	}
	return ""
}

func (m *Record) GetNegativeSeverity() string {
	if m != nil {
		return m.NegativeSeverity
	}
	return ""
}

func (m *Record) GetNegativeInfo() string {
	if m != nil {
		return m.NegativeInfo
	}
	return ""
}

type Org struct {
	OrgId     string `protobuf:"bytes,1,opt,name=orgId" json:"orgId,omitempty"`
	OrgCredit int64  `protobuf:"varint,2,opt,name=orgCredit" json:"orgCredit,omitempty"`
}

func (m *Org) Reset()                    { *m = Org{} }
func (m *Org) String() string            { return proto.CompactTextString(m) }
func (*Org) ProtoMessage()               {}
func (*Org) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Org) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Org) GetOrgCredit() int64 {
	if m != nil {
		return m.OrgCredit
	}
	return 0
}

func init() {
	proto.RegisterType((*BlackAction)(nil), "BlackAction")
	proto.RegisterType((*Record)(nil), "Record")
	proto.RegisterType((*Org)(nil), "Org")
}

func init() { proto.RegisterFile("blacklist.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x46, 0xcd, 0xa6, 0x69, 0xcd, 0x54, 0x54, 0x16, 0x91, 0x28, 0x1e, 0x4a, 0x4e, 0xc5, 0x43,
	0x0e, 0x7a, 0xf2, 0x68, 0xbd, 0xd8, 0x53, 0x61, 0xf5, 0xe2, 0x31, 0xdd, 0x8c, 0xcb, 0x62, 0xc8,
	0x94, 0x71, 0x0c, 0xec, 0x3f, 0xf1, 0xe7, 0x4a, 0xb6, 0x58, 0x2d, 0xbd, 0xed, 0xf7, 0x16, 0x1e,
	0x8f, 0x81, 0xb3, 0x75, 0x5b, 0xdb, 0x8f, 0xd6, 0x7f, 0x4a, 0xb5, 0x61, 0x12, 0x2a, 0xdf, 0x60,
	0xba, 0x18, 0xd0, 0xa3, 0x15, 0x4f, 0x9d, 0xbe, 0x02, 0xc5, 0xb6, 0x48, 0x66, 0xc9, 0x7c, 0x7a,
	0x37, 0xa9, 0x0c, 0x5a, 0xe2, 0xe6, 0xf9, 0xc8, 0x28, 0xb6, 0xfa, 0x12, 0x14, 0x71, 0x91, 0xc6,
	0xaf, 0x51, 0xb5, 0x62, 0x37, 0x70, 0x62, 0x7d, 0x0a, 0x4a, 0x42, 0xa1, 0x66, 0xc9, 0x3c, 0x33,
	0x4a, 0xc2, 0x62, 0x02, 0x59, 0x5f, 0xb7, 0x5f, 0x58, 0x7e, 0x27, 0x30, 0xde, 0x1a, 0xf4, 0x35,
	0x1c, 0x73, 0x7c, 0x2d, 0x9b, 0x28, 0xcf, 0xcd, 0x6e, 0xeb, 0x12, 0x4e, 0x3a, 0x74, 0xb5, 0xf8,
	0x1e, 0x5f, 0xc3, 0x06, 0xa3, 0x29, 0x37, 0x7b, 0x4c, 0xdf, 0xc2, 0xf9, 0xef, 0x7e, 0xc1, 0x1e,
	0xd9, 0x4b, 0x88, 0x25, 0xb9, 0x39, 0xe0, 0xff, 0x7d, 0xcb, 0xee, 0x9d, 0x8a, 0xd1, 0xbe, 0x6f,
	0x60, 0xe5, 0x03, 0xa4, 0x2b, 0x76, 0xfa, 0x02, 0x32, 0x62, 0xb7, 0x6b, 0xda, 0x0e, 0x7d, 0x03,
	0x39, 0xb1, 0x7b, 0x62, 0x6c, 0xbc, 0xc4, 0x9a, 0xd4, 0xfc, 0x81, 0xf5, 0x38, 0xde, 0xed, 0xfe,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x4b, 0x65, 0x66, 0x4a, 0x01, 0x00, 0x00,
}
