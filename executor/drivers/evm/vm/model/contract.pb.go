// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contract.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	contract.proto

It Has these top-level messages:
	ContractObject
	ContractData
	ContractState
*/
package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 合约对象信息
type ContractObject struct {
	Addr  string         `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Data  *ContractData  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	State *ContractState `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

func (m *ContractObject) Reset()                    { *m = ContractObject{} }
func (m *ContractObject) String() string            { return proto.CompactTextString(m) }
func (*ContractObject) ProtoMessage()               {}
func (*ContractObject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ContractObject) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ContractObject) GetData() *ContractData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ContractObject) GetState() *ContractState {
	if m != nil {
		return m.State
	}
	return nil
}

// 存放合约固定数据
type ContractData struct {
	Code     []byte `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CodeHash []byte `protobuf:"bytes,2,opt,name=codeHash,proto3" json:"codeHash,omitempty"`
}

func (m *ContractData) Reset()                    { *m = ContractData{} }
func (m *ContractData) String() string            { return proto.CompactTextString(m) }
func (*ContractData) ProtoMessage()               {}
func (*ContractData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ContractData) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ContractData) GetCodeHash() []byte {
	if m != nil {
		return m.CodeHash
	}
	return nil
}

// 存放合约变化数据
type ContractState struct {
	Nonce       uint64            `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
	Suicided    bool              `protobuf:"varint,2,opt,name=suicided" json:"suicided,omitempty"`
	StorageHash []byte            `protobuf:"bytes,3,opt,name=storageHash,proto3" json:"storageHash,omitempty"`
	Storage     map[string][]byte `protobuf:"bytes,4,rep,name=storage" json:"storage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *ContractState) Reset()                    { *m = ContractState{} }
func (m *ContractState) String() string            { return proto.CompactTextString(m) }
func (*ContractState) ProtoMessage()               {}
func (*ContractState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ContractState) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ContractState) GetSuicided() bool {
	if m != nil {
		return m.Suicided
	}
	return false
}

func (m *ContractState) GetStorageHash() []byte {
	if m != nil {
		return m.StorageHash
	}
	return nil
}

func (m *ContractState) GetStorage() map[string][]byte {
	if m != nil {
		return m.Storage
	}
	return nil
}

func init() {
	proto.RegisterType((*ContractObject)(nil), "types.ContractObject")
	proto.RegisterType((*ContractData)(nil), "types.ContractData")
	proto.RegisterType((*ContractState)(nil), "types.ContractState")
}

func init() { proto.RegisterFile("contract.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xbf, 0x4e, 0xf3, 0x30,
	0x10, 0x57, 0x9a, 0xe4, 0xfb, 0xca, 0x25, 0x54, 0xc8, 0x74, 0x88, 0x3a, 0x85, 0x2c, 0x44, 0x0c,
	0x19, 0xca, 0x82, 0x8a, 0xc4, 0x02, 0x48, 0x6c, 0x48, 0xee, 0x13, 0x5c, 0x6d, 0x0b, 0x0a, 0x28,
	0xae, 0xe2, 0x2b, 0x52, 0xde, 0x95, 0x87, 0x41, 0x3e, 0xa7, 0x55, 0x40, 0x4c, 0xb9, 0x5f, 0x7e,
	0xff, 0x7c, 0x36, 0xcc, 0x94, 0x6d, 0xa9, 0x43, 0x45, 0xcd, 0xae, 0xb3, 0x64, 0x45, 0x4a, 0xfd,
	0xce, 0xb8, 0xaa, 0x87, 0xd9, 0xfd, 0x40, 0x3c, 0x6f, 0xde, 0x8c, 0x22, 0x21, 0x20, 0x41, 0xad,
	0xbb, 0x22, 0x2a, 0xa3, 0xfa, 0x44, 0xf2, 0x2c, 0x2e, 0x21, 0xd1, 0x48, 0x58, 0x4c, 0xca, 0xa8,
	0xce, 0x96, 0xe7, 0x0d, 0x7b, 0x9b, 0x83, 0xf1, 0x01, 0x09, 0x25, 0x0b, 0xc4, 0x15, 0xa4, 0x8e,
	0x90, 0x4c, 0x11, 0xb3, 0x72, 0xfe, 0x4b, 0xb9, 0xf6, 0x9c, 0x0c, 0x92, 0xea, 0x0e, 0xf2, 0x71,
	0x82, 0x2f, 0x56, 0x56, 0x1b, 0x2e, 0xce, 0x25, 0xcf, 0x62, 0x01, 0x53, 0xff, 0x7d, 0x42, 0xf7,
	0xca, 0xe5, 0xb9, 0x3c, 0xe2, 0xea, 0x2b, 0x82, 0xd3, 0x1f, 0xc1, 0x62, 0x0e, 0x69, 0x6b, 0x5b,
	0x15, 0x22, 0x12, 0x19, 0x80, 0xcf, 0x70, 0xfb, 0xad, 0xda, 0x6a, 0xa3, 0x39, 0x63, 0x2a, 0x8f,
	0x58, 0x94, 0x90, 0x39, 0xb2, 0x1d, 0xbe, 0x84, 0x8a, 0x98, 0x2b, 0xc6, 0xbf, 0xc4, 0x2d, 0xfc,
	0x1f, 0x60, 0x91, 0x94, 0x71, 0x9d, 0x2d, 0x2f, 0xfe, 0xda, 0xa9, 0x59, 0x07, 0xcd, 0x63, 0x4b,
	0x5d, 0x2f, 0x0f, 0x8e, 0xc5, 0x0a, 0xf2, 0x31, 0x21, 0xce, 0x20, 0x7e, 0x37, 0xfd, 0x70, 0xb5,
	0x7e, 0xf4, 0x47, 0xfe, 0xc4, 0x8f, 0xbd, 0x19, 0xb6, 0x0b, 0x60, 0x35, 0xb9, 0x89, 0x36, 0xff,
	0xf8, 0x9d, 0xae, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbe, 0xe7, 0xc6, 0x3f, 0xb9, 0x01, 0x00,
	0x00,
}
