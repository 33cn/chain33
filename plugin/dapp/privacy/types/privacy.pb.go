// Code generated by protoc-gen-go.
// source: privacy.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	privacy.proto

It has these top-level messages:
	PrivacyAction
	Public2Privacy
	Privacy2Privacy
	Privacy2Public
	UTXOGlobalIndex
	KeyInput
	PrivacyInput
	KeyOutput
	PrivacyOutput
	GroupUTXOGlobalIndex
	LocalUTXOItem
	ReqUTXOPubKeys
	PublicKeyData
	GroupUTXOPubKey
	ResUTXOPubKeys
	ReqPrivacyToken
	AmountDetail
	ReplyPrivacyAmounts
	ReplyUTXOsOfAmount
	ReceiptPrivacyOutput
	AmountsOfUTXO
	TokenNamesOfUTXO
	UTXOGlobalIndex4Print
	KeyInput4Print
	KeyOutput4Print
	PrivacyInput4Print
	PrivacyOutput4Print
	Public2Privacy4Print
	Privacy2Privacy4Print
	Privacy2Public4Print
	PrivacyAction4Print
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ////////////////////////////////////////////////////////////////////////////
// message for Privacy start/////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
type PrivacyAction struct {
	// Types that are valid to be assigned to Value:
	//	*PrivacyAction_Public2Privacy
	//	*PrivacyAction_Privacy2Privacy
	//	*PrivacyAction_Privacy2Public
	Value isPrivacyAction_Value `protobuf_oneof:"value"`
	Ty    int32                 `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *PrivacyAction) Reset()                    { *m = PrivacyAction{} }
func (m *PrivacyAction) String() string            { return proto.CompactTextString(m) }
func (*PrivacyAction) ProtoMessage()               {}
func (*PrivacyAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isPrivacyAction_Value interface {
	isPrivacyAction_Value()
}

type PrivacyAction_Public2Privacy struct {
	Public2Privacy *Public2Privacy `protobuf:"bytes,1,opt,name=public2privacy,oneof"`
}
type PrivacyAction_Privacy2Privacy struct {
	Privacy2Privacy *Privacy2Privacy `protobuf:"bytes,2,opt,name=privacy2privacy,oneof"`
}
type PrivacyAction_Privacy2Public struct {
	Privacy2Public *Privacy2Public `protobuf:"bytes,3,opt,name=privacy2public,oneof"`
}

func (*PrivacyAction_Public2Privacy) isPrivacyAction_Value()  {}
func (*PrivacyAction_Privacy2Privacy) isPrivacyAction_Value() {}
func (*PrivacyAction_Privacy2Public) isPrivacyAction_Value()  {}

func (m *PrivacyAction) GetValue() isPrivacyAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PrivacyAction) GetPublic2Privacy() *Public2Privacy {
	if x, ok := m.GetValue().(*PrivacyAction_Public2Privacy); ok {
		return x.Public2Privacy
	}
	return nil
}

func (m *PrivacyAction) GetPrivacy2Privacy() *Privacy2Privacy {
	if x, ok := m.GetValue().(*PrivacyAction_Privacy2Privacy); ok {
		return x.Privacy2Privacy
	}
	return nil
}

func (m *PrivacyAction) GetPrivacy2Public() *Privacy2Public {
	if x, ok := m.GetValue().(*PrivacyAction_Privacy2Public); ok {
		return x.Privacy2Public
	}
	return nil
}

func (m *PrivacyAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PrivacyAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PrivacyAction_OneofMarshaler, _PrivacyAction_OneofUnmarshaler, _PrivacyAction_OneofSizer, []interface{}{
		(*PrivacyAction_Public2Privacy)(nil),
		(*PrivacyAction_Privacy2Privacy)(nil),
		(*PrivacyAction_Privacy2Public)(nil),
	}
}

func _PrivacyAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PrivacyAction)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction_Public2Privacy:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Public2Privacy); err != nil {
			return err
		}
	case *PrivacyAction_Privacy2Privacy:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Privacy); err != nil {
			return err
		}
	case *PrivacyAction_Privacy2Public:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Public); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PrivacyAction.Value has unexpected type %T", x)
	}
	return nil
}

func _PrivacyAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PrivacyAction)
	switch tag {
	case 1: // value.public2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Public2Privacy)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Public2Privacy{msg}
		return true, err
	case 2: // value.privacy2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Privacy)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Privacy2Privacy{msg}
		return true, err
	case 3: // value.privacy2public
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Public)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Privacy2Public{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PrivacyAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PrivacyAction)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction_Public2Privacy:
		s := proto.Size(x.Public2Privacy)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction_Privacy2Privacy:
		s := proto.Size(x.Privacy2Privacy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction_Privacy2Public:
		s := proto.Size(x.Privacy2Public)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Public2Privacy struct {
	Tokenname string         `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string         `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Output    *PrivacyOutput `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Public2Privacy) Reset()                    { *m = Public2Privacy{} }
func (m *Public2Privacy) String() string            { return proto.CompactTextString(m) }
func (*Public2Privacy) ProtoMessage()               {}
func (*Public2Privacy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Public2Privacy) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Public2Privacy) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Public2Privacy) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Public2Privacy) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Privacy struct {
	Tokenname string         `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string         `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput  `protobuf:"bytes,6,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Privacy) Reset()                    { *m = Privacy2Privacy{} }
func (m *Privacy2Privacy) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Privacy) ProtoMessage()               {}
func (*Privacy2Privacy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Privacy2Privacy) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Privacy) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Privacy) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Privacy) GetInput() *PrivacyInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Privacy) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Public struct {
	Tokenname string         `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string         `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput  `protobuf:"bytes,4,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput `protobuf:"bytes,5,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Public) Reset()                    { *m = Privacy2Public{} }
func (m *Privacy2Public) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Public) ProtoMessage()               {}
func (*Privacy2Public) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Privacy2Public) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Public) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Public) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Public) GetInput() *PrivacyInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Public) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type UTXOGlobalIndex struct {
	// 	int64 height   = 1;
	// 	int32 txindex  = 2;
	Txhash   []byte `protobuf:"bytes,3,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Outindex int32  `protobuf:"varint,4,opt,name=outindex" json:"outindex,omitempty"`
}

func (m *UTXOGlobalIndex) Reset()                    { *m = UTXOGlobalIndex{} }
func (m *UTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*UTXOGlobalIndex) ProtoMessage()               {}
func (*UTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UTXOGlobalIndex) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

func (m *UTXOGlobalIndex) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

// privacy input
type KeyInput struct {
	Amount          int64              `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
	KeyImage        []byte             `protobuf:"bytes,3,opt,name=keyImage,proto3" json:"keyImage,omitempty"`
}

func (m *KeyInput) Reset()                    { *m = KeyInput{} }
func (m *KeyInput) String() string            { return proto.CompactTextString(m) }
func (*KeyInput) ProtoMessage()               {}
func (*KeyInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *KeyInput) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyInput) GetUtxoGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

func (m *KeyInput) GetKeyImage() []byte {
	if m != nil {
		return m.KeyImage
	}
	return nil
}

type PrivacyInput struct {
	Keyinput []*KeyInput `protobuf:"bytes,1,rep,name=keyinput" json:"keyinput,omitempty"`
}

func (m *PrivacyInput) Reset()                    { *m = PrivacyInput{} }
func (m *PrivacyInput) String() string            { return proto.CompactTextString(m) }
func (*PrivacyInput) ProtoMessage()               {}
func (*PrivacyInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PrivacyInput) GetKeyinput() []*KeyInput {
	if m != nil {
		return m.Keyinput
	}
	return nil
}

// privacy output
type KeyOutput struct {
	Amount        int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Onetimepubkey []byte `protobuf:"bytes,2,opt,name=onetimepubkey,proto3" json:"onetimepubkey,omitempty"`
}

func (m *KeyOutput) Reset()                    { *m = KeyOutput{} }
func (m *KeyOutput) String() string            { return proto.CompactTextString(m) }
func (*KeyOutput) ProtoMessage()               {}
func (*KeyOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *KeyOutput) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyOutput) GetOnetimepubkey() []byte {
	if m != nil {
		return m.Onetimepubkey
	}
	return nil
}

type PrivacyOutput struct {
	RpubKeytx []byte       `protobuf:"bytes,1,opt,name=RpubKeytx,proto3" json:"RpubKeytx,omitempty"`
	Keyoutput []*KeyOutput `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *PrivacyOutput) Reset()                    { *m = PrivacyOutput{} }
func (m *PrivacyOutput) String() string            { return proto.CompactTextString(m) }
func (*PrivacyOutput) ProtoMessage()               {}
func (*PrivacyOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PrivacyOutput) GetRpubKeytx() []byte {
	if m != nil {
		return m.RpubKeytx
	}
	return nil
}

func (m *PrivacyOutput) GetKeyoutput() []*KeyOutput {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

type GroupUTXOGlobalIndex struct {
	Amount          int64              `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
}

func (m *GroupUTXOGlobalIndex) Reset()                    { *m = GroupUTXOGlobalIndex{} }
func (m *GroupUTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*GroupUTXOGlobalIndex) ProtoMessage()               {}
func (*GroupUTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GroupUTXOGlobalIndex) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GroupUTXOGlobalIndex) GetUtxoGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

type LocalUTXOItem struct {
	Height        int64  `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Txindex       int32  `protobuf:"varint,2,opt,name=txindex" json:"txindex,omitempty"`
	Outindex      int32  `protobuf:"varint,3,opt,name=outindex" json:"outindex,omitempty"`
	Txhash        []byte `protobuf:"bytes,4,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Onetimepubkey []byte `protobuf:"bytes,5,opt,name=onetimepubkey,proto3" json:"onetimepubkey,omitempty"`
}

func (m *LocalUTXOItem) Reset()                    { *m = LocalUTXOItem{} }
func (m *LocalUTXOItem) String() string            { return proto.CompactTextString(m) }
func (*LocalUTXOItem) ProtoMessage()               {}
func (*LocalUTXOItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *LocalUTXOItem) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *LocalUTXOItem) GetTxindex() int32 {
	if m != nil {
		return m.Txindex
	}
	return 0
}

func (m *LocalUTXOItem) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

func (m *LocalUTXOItem) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

func (m *LocalUTXOItem) GetOnetimepubkey() []byte {
	if m != nil {
		return m.Onetimepubkey
	}
	return nil
}

type ReqUTXOPubKeys struct {
	TokenName            string                  `protobuf:"bytes,1,opt,name=tokenName" json:"tokenName,omitempty"`
	GroupUTXOGlobalIndex []*GroupUTXOGlobalIndex `protobuf:"bytes,2,rep,name=groupUTXOGlobalIndex" json:"groupUTXOGlobalIndex,omitempty"`
}

func (m *ReqUTXOPubKeys) Reset()                    { *m = ReqUTXOPubKeys{} }
func (m *ReqUTXOPubKeys) String() string            { return proto.CompactTextString(m) }
func (*ReqUTXOPubKeys) ProtoMessage()               {}
func (*ReqUTXOPubKeys) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReqUTXOPubKeys) GetTokenName() string {
	if m != nil {
		return m.TokenName
	}
	return ""
}

func (m *ReqUTXOPubKeys) GetGroupUTXOGlobalIndex() []*GroupUTXOGlobalIndex {
	if m != nil {
		return m.GroupUTXOGlobalIndex
	}
	return nil
}

// 一个公钥信息
type PublicKeyData struct {
	Data [][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (m *PublicKeyData) Reset()                    { *m = PublicKeyData{} }
func (m *PublicKeyData) String() string            { return proto.CompactTextString(m) }
func (*PublicKeyData) ProtoMessage()               {}
func (*PublicKeyData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PublicKeyData) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GroupUTXOPubKey struct {
	Amount int64 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	// 输出签名的所有公钥
	Pubkey [][]byte `protobuf:"bytes,2,rep,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (m *GroupUTXOPubKey) Reset()                    { *m = GroupUTXOPubKey{} }
func (m *GroupUTXOPubKey) String() string            { return proto.CompactTextString(m) }
func (*GroupUTXOPubKey) ProtoMessage()               {}
func (*GroupUTXOPubKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GroupUTXOPubKey) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GroupUTXOPubKey) GetPubkey() [][]byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

type ResUTXOPubKeys struct {
	GroupUTXOPubKeys []*GroupUTXOPubKey `protobuf:"bytes,1,rep,name=groupUTXOPubKeys" json:"groupUTXOPubKeys,omitempty"`
}

func (m *ResUTXOPubKeys) Reset()                    { *m = ResUTXOPubKeys{} }
func (m *ResUTXOPubKeys) String() string            { return proto.CompactTextString(m) }
func (*ResUTXOPubKeys) ProtoMessage()               {}
func (*ResUTXOPubKeys) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ResUTXOPubKeys) GetGroupUTXOPubKeys() []*GroupUTXOPubKey {
	if m != nil {
		return m.GroupUTXOPubKeys
	}
	return nil
}

type ReqPrivacyToken struct {
	Token  string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Amount int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *ReqPrivacyToken) Reset()                    { *m = ReqPrivacyToken{} }
func (m *ReqPrivacyToken) String() string            { return proto.CompactTextString(m) }
func (*ReqPrivacyToken) ProtoMessage()               {}
func (*ReqPrivacyToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ReqPrivacyToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReqPrivacyToken) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type AmountDetail struct {
	Amount int64 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Count  int64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *AmountDetail) Reset()                    { *m = AmountDetail{} }
func (m *AmountDetail) String() string            { return proto.CompactTextString(m) }
func (*AmountDetail) ProtoMessage()               {}
func (*AmountDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AmountDetail) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AmountDetail) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReplyPrivacyAmounts struct {
	AmountDetail []*AmountDetail `protobuf:"bytes,1,rep,name=amountDetail" json:"amountDetail,omitempty"`
}

func (m *ReplyPrivacyAmounts) Reset()                    { *m = ReplyPrivacyAmounts{} }
func (m *ReplyPrivacyAmounts) String() string            { return proto.CompactTextString(m) }
func (*ReplyPrivacyAmounts) ProtoMessage()               {}
func (*ReplyPrivacyAmounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ReplyPrivacyAmounts) GetAmountDetail() []*AmountDetail {
	if m != nil {
		return m.AmountDetail
	}
	return nil
}

type ReplyUTXOsOfAmount struct {
	LocalUTXOItems []*LocalUTXOItem `protobuf:"bytes,1,rep,name=localUTXOItems" json:"localUTXOItems,omitempty"`
}

func (m *ReplyUTXOsOfAmount) Reset()                    { *m = ReplyUTXOsOfAmount{} }
func (m *ReplyUTXOsOfAmount) String() string            { return proto.CompactTextString(m) }
func (*ReplyUTXOsOfAmount) ProtoMessage()               {}
func (*ReplyUTXOsOfAmount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ReplyUTXOsOfAmount) GetLocalUTXOItems() []*LocalUTXOItem {
	if m != nil {
		return m.LocalUTXOItems
	}
	return nil
}

type ReceiptPrivacyOutput struct {
	Token     string       `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Keyoutput []*KeyOutput `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *ReceiptPrivacyOutput) Reset()                    { *m = ReceiptPrivacyOutput{} }
func (m *ReceiptPrivacyOutput) String() string            { return proto.CompactTextString(m) }
func (*ReceiptPrivacyOutput) ProtoMessage()               {}
func (*ReceiptPrivacyOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ReceiptPrivacyOutput) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReceiptPrivacyOutput) GetKeyoutput() []*KeyOutput {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

// 各种amount额度的UTXO在链上的数量
type AmountsOfUTXO struct {
	AmountMap map[int64]int64 `protobuf:"bytes,1,rep,name=amountMap" json:"amountMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *AmountsOfUTXO) Reset()                    { *m = AmountsOfUTXO{} }
func (m *AmountsOfUTXO) String() string            { return proto.CompactTextString(m) }
func (*AmountsOfUTXO) ProtoMessage()               {}
func (*AmountsOfUTXO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *AmountsOfUTXO) GetAmountMap() map[int64]int64 {
	if m != nil {
		return m.AmountMap
	}
	return nil
}

type TokenNamesOfUTXO struct {
	TokensMap map[string]string `protobuf:"bytes,1,rep,name=tokensMap" json:"tokensMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TokenNamesOfUTXO) Reset()                    { *m = TokenNamesOfUTXO{} }
func (m *TokenNamesOfUTXO) String() string            { return proto.CompactTextString(m) }
func (*TokenNamesOfUTXO) ProtoMessage()               {}
func (*TokenNamesOfUTXO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *TokenNamesOfUTXO) GetTokensMap() map[string]string {
	if m != nil {
		return m.TokensMap
	}
	return nil
}

// 用以转换成json后继续可见的结构
type UTXOGlobalIndex4Print struct {
	Txhash   string `protobuf:"bytes,1,opt,name=txhash" json:"txhash,omitempty"`
	Outindex int32  `protobuf:"varint,2,opt,name=outindex" json:"outindex,omitempty"`
}

func (m *UTXOGlobalIndex4Print) Reset()                    { *m = UTXOGlobalIndex4Print{} }
func (m *UTXOGlobalIndex4Print) String() string            { return proto.CompactTextString(m) }
func (*UTXOGlobalIndex4Print) ProtoMessage()               {}
func (*UTXOGlobalIndex4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *UTXOGlobalIndex4Print) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

func (m *UTXOGlobalIndex4Print) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

type KeyInput4Print struct {
	Amount          int64                    `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex4Print `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
	KeyImage        string                   `protobuf:"bytes,3,opt,name=keyImage" json:"keyImage,omitempty"`
}

func (m *KeyInput4Print) Reset()                    { *m = KeyInput4Print{} }
func (m *KeyInput4Print) String() string            { return proto.CompactTextString(m) }
func (*KeyInput4Print) ProtoMessage()               {}
func (*KeyInput4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *KeyInput4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyInput4Print) GetUtxoGlobalIndex() []*UTXOGlobalIndex4Print {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

func (m *KeyInput4Print) GetKeyImage() string {
	if m != nil {
		return m.KeyImage
	}
	return ""
}

type KeyOutput4Print struct {
	Amount        int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Onetimepubkey string `protobuf:"bytes,2,opt,name=onetimepubkey" json:"onetimepubkey,omitempty"`
}

func (m *KeyOutput4Print) Reset()                    { *m = KeyOutput4Print{} }
func (m *KeyOutput4Print) String() string            { return proto.CompactTextString(m) }
func (*KeyOutput4Print) ProtoMessage()               {}
func (*KeyOutput4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *KeyOutput4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyOutput4Print) GetOnetimepubkey() string {
	if m != nil {
		return m.Onetimepubkey
	}
	return ""
}

type PrivacyInput4Print struct {
	Keyinput []*KeyInput4Print `protobuf:"bytes,1,rep,name=keyinput" json:"keyinput,omitempty"`
}

func (m *PrivacyInput4Print) Reset()                    { *m = PrivacyInput4Print{} }
func (m *PrivacyInput4Print) String() string            { return proto.CompactTextString(m) }
func (*PrivacyInput4Print) ProtoMessage()               {}
func (*PrivacyInput4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *PrivacyInput4Print) GetKeyinput() []*KeyInput4Print {
	if m != nil {
		return m.Keyinput
	}
	return nil
}

type PrivacyOutput4Print struct {
	RpubKeytx string             `protobuf:"bytes,1,opt,name=RpubKeytx" json:"RpubKeytx,omitempty"`
	Keyoutput []*KeyOutput4Print `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *PrivacyOutput4Print) Reset()                    { *m = PrivacyOutput4Print{} }
func (m *PrivacyOutput4Print) String() string            { return proto.CompactTextString(m) }
func (*PrivacyOutput4Print) ProtoMessage()               {}
func (*PrivacyOutput4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *PrivacyOutput4Print) GetRpubKeytx() string {
	if m != nil {
		return m.RpubKeytx
	}
	return ""
}

func (m *PrivacyOutput4Print) GetKeyoutput() []*KeyOutput4Print {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

type Public2Privacy4Print struct {
	Tokenname string               `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64                `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string               `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Output    *PrivacyOutput4Print `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Public2Privacy4Print) Reset()                    { *m = Public2Privacy4Print{} }
func (m *Public2Privacy4Print) String() string            { return proto.CompactTextString(m) }
func (*Public2Privacy4Print) ProtoMessage()               {}
func (*Public2Privacy4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Public2Privacy4Print) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Public2Privacy4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Public2Privacy4Print) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Public2Privacy4Print) GetOutput() *PrivacyOutput4Print {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Privacy4Print struct {
	Tokenname string               `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64                `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string               `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput4Print  `protobuf:"bytes,6,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput4Print `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Privacy4Print) Reset()                    { *m = Privacy2Privacy4Print{} }
func (m *Privacy2Privacy4Print) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Privacy4Print) ProtoMessage()               {}
func (*Privacy2Privacy4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *Privacy2Privacy4Print) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Privacy4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Privacy4Print) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Privacy4Print) GetInput() *PrivacyInput4Print {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Privacy4Print) GetOutput() *PrivacyOutput4Print {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Public4Print struct {
	Tokenname string               `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64                `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string               `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput4Print  `protobuf:"bytes,4,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput4Print `protobuf:"bytes,5,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Public4Print) Reset()                    { *m = Privacy2Public4Print{} }
func (m *Privacy2Public4Print) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Public4Print) ProtoMessage()               {}
func (*Privacy2Public4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Privacy2Public4Print) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Public4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Public4Print) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Public4Print) GetInput() *PrivacyInput4Print {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Public4Print) GetOutput() *PrivacyOutput4Print {
	if m != nil {
		return m.Output
	}
	return nil
}

type PrivacyAction4Print struct {
	// Types that are valid to be assigned to Value:
	//	*PrivacyAction4Print_Public2Privacy
	//	*PrivacyAction4Print_Privacy2Privacy
	//	*PrivacyAction4Print_Privacy2Public
	Value isPrivacyAction4Print_Value `protobuf_oneof:"value"`
	Ty    int32                       `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *PrivacyAction4Print) Reset()                    { *m = PrivacyAction4Print{} }
func (m *PrivacyAction4Print) String() string            { return proto.CompactTextString(m) }
func (*PrivacyAction4Print) ProtoMessage()               {}
func (*PrivacyAction4Print) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

type isPrivacyAction4Print_Value interface {
	isPrivacyAction4Print_Value()
}

type PrivacyAction4Print_Public2Privacy struct {
	Public2Privacy *Public2Privacy4Print `protobuf:"bytes,1,opt,name=public2privacy,oneof"`
}
type PrivacyAction4Print_Privacy2Privacy struct {
	Privacy2Privacy *Privacy2Privacy4Print `protobuf:"bytes,2,opt,name=privacy2privacy,oneof"`
}
type PrivacyAction4Print_Privacy2Public struct {
	Privacy2Public *Privacy2Public4Print `protobuf:"bytes,3,opt,name=privacy2public,oneof"`
}

func (*PrivacyAction4Print_Public2Privacy) isPrivacyAction4Print_Value()  {}
func (*PrivacyAction4Print_Privacy2Privacy) isPrivacyAction4Print_Value() {}
func (*PrivacyAction4Print_Privacy2Public) isPrivacyAction4Print_Value()  {}

func (m *PrivacyAction4Print) GetValue() isPrivacyAction4Print_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PrivacyAction4Print) GetPublic2Privacy() *Public2Privacy4Print {
	if x, ok := m.GetValue().(*PrivacyAction4Print_Public2Privacy); ok {
		return x.Public2Privacy
	}
	return nil
}

func (m *PrivacyAction4Print) GetPrivacy2Privacy() *Privacy2Privacy4Print {
	if x, ok := m.GetValue().(*PrivacyAction4Print_Privacy2Privacy); ok {
		return x.Privacy2Privacy
	}
	return nil
}

func (m *PrivacyAction4Print) GetPrivacy2Public() *Privacy2Public4Print {
	if x, ok := m.GetValue().(*PrivacyAction4Print_Privacy2Public); ok {
		return x.Privacy2Public
	}
	return nil
}

func (m *PrivacyAction4Print) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PrivacyAction4Print) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PrivacyAction4Print_OneofMarshaler, _PrivacyAction4Print_OneofUnmarshaler, _PrivacyAction4Print_OneofSizer, []interface{}{
		(*PrivacyAction4Print_Public2Privacy)(nil),
		(*PrivacyAction4Print_Privacy2Privacy)(nil),
		(*PrivacyAction4Print_Privacy2Public)(nil),
	}
}

func _PrivacyAction4Print_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PrivacyAction4Print)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction4Print_Public2Privacy:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Public2Privacy); err != nil {
			return err
		}
	case *PrivacyAction4Print_Privacy2Privacy:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Privacy); err != nil {
			return err
		}
	case *PrivacyAction4Print_Privacy2Public:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Public); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PrivacyAction4Print.Value has unexpected type %T", x)
	}
	return nil
}

func _PrivacyAction4Print_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PrivacyAction4Print)
	switch tag {
	case 1: // value.public2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Public2Privacy4Print)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction4Print_Public2Privacy{msg}
		return true, err
	case 2: // value.privacy2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Privacy4Print)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction4Print_Privacy2Privacy{msg}
		return true, err
	case 3: // value.privacy2public
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Public4Print)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction4Print_Privacy2Public{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PrivacyAction4Print_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PrivacyAction4Print)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction4Print_Public2Privacy:
		s := proto.Size(x.Public2Privacy)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction4Print_Privacy2Privacy:
		s := proto.Size(x.Privacy2Privacy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction4Print_Privacy2Public:
		s := proto.Size(x.Privacy2Public)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*PrivacyAction)(nil), "types.PrivacyAction")
	proto.RegisterType((*Public2Privacy)(nil), "types.Public2Privacy")
	proto.RegisterType((*Privacy2Privacy)(nil), "types.Privacy2Privacy")
	proto.RegisterType((*Privacy2Public)(nil), "types.Privacy2Public")
	proto.RegisterType((*UTXOGlobalIndex)(nil), "types.UTXOGlobalIndex")
	proto.RegisterType((*KeyInput)(nil), "types.KeyInput")
	proto.RegisterType((*PrivacyInput)(nil), "types.PrivacyInput")
	proto.RegisterType((*KeyOutput)(nil), "types.keyOutput")
	proto.RegisterType((*PrivacyOutput)(nil), "types.PrivacyOutput")
	proto.RegisterType((*GroupUTXOGlobalIndex)(nil), "types.GroupUTXOGlobalIndex")
	proto.RegisterType((*LocalUTXOItem)(nil), "types.LocalUTXOItem")
	proto.RegisterType((*ReqUTXOPubKeys)(nil), "types.ReqUTXOPubKeys")
	proto.RegisterType((*PublicKeyData)(nil), "types.PublicKeyData")
	proto.RegisterType((*GroupUTXOPubKey)(nil), "types.GroupUTXOPubKey")
	proto.RegisterType((*ResUTXOPubKeys)(nil), "types.ResUTXOPubKeys")
	proto.RegisterType((*ReqPrivacyToken)(nil), "types.ReqPrivacyToken")
	proto.RegisterType((*AmountDetail)(nil), "types.AmountDetail")
	proto.RegisterType((*ReplyPrivacyAmounts)(nil), "types.ReplyPrivacyAmounts")
	proto.RegisterType((*ReplyUTXOsOfAmount)(nil), "types.replyUTXOsOfAmount")
	proto.RegisterType((*ReceiptPrivacyOutput)(nil), "types.ReceiptPrivacyOutput")
	proto.RegisterType((*AmountsOfUTXO)(nil), "types.AmountsOfUTXO")
	proto.RegisterType((*TokenNamesOfUTXO)(nil), "types.TokenNamesOfUTXO")
	proto.RegisterType((*UTXOGlobalIndex4Print)(nil), "types.UTXOGlobalIndex4Print")
	proto.RegisterType((*KeyInput4Print)(nil), "types.KeyInput4Print")
	proto.RegisterType((*KeyOutput4Print)(nil), "types.keyOutput4Print")
	proto.RegisterType((*PrivacyInput4Print)(nil), "types.PrivacyInput4Print")
	proto.RegisterType((*PrivacyOutput4Print)(nil), "types.PrivacyOutput4Print")
	proto.RegisterType((*Public2Privacy4Print)(nil), "types.Public2Privacy4Print")
	proto.RegisterType((*Privacy2Privacy4Print)(nil), "types.Privacy2Privacy4Print")
	proto.RegisterType((*Privacy2Public4Print)(nil), "types.Privacy2Public4Print")
	proto.RegisterType((*PrivacyAction4Print)(nil), "types.PrivacyAction4Print")
}

func init() { proto.RegisterFile("privacy.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1066 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x57, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x66, 0x6c, 0x8f, 0xb3, 0x53, 0xf8, 0x27, 0xea, 0x38, 0x96, 0x49, 0x72, 0x88, 0x7a, 0x11,
	0x5a, 0x04, 0x0a, 0x22, 0xac, 0x04, 0x82, 0x48, 0x4b, 0xa2, 0x84, 0xac, 0x15, 0x76, 0x1d, 0xb5,
	0x82, 0xc4, 0x01, 0x0e, 0x63, 0x6f, 0x6f, 0x32, 0x8a, 0xed, 0x99, 0xb5, 0x7b, 0x56, 0x9e, 0x13,
	0x9c, 0x10, 0x07, 0x0e, 0x1c, 0x10, 0x17, 0x1e, 0x03, 0x5e, 0x01, 0x1e, 0x87, 0x67, 0x40, 0xdd,
	0x5d, 0xf3, 0xd3, 0xe3, 0xb6, 0x92, 0x40, 0xb8, 0x4d, 0x75, 0x57, 0x57, 0x7d, 0xf5, 0x4d, 0x55,
	0x57, 0x17, 0x34, 0xa3, 0x59, 0xf0, 0xda, 0x1f, 0x25, 0x7b, 0xd1, 0x2c, 0x14, 0x21, 0x71, 0x45,
	0x12, 0xf1, 0x39, 0xfd, 0xdb, 0x81, 0xe6, 0xb9, 0xde, 0x38, 0x1c, 0x89, 0x20, 0x9c, 0x92, 0x27,
	0xd0, 0x8a, 0xe2, 0xe1, 0x38, 0x18, 0xed, 0xe3, 0x81, 0x9e, 0xb3, 0xeb, 0x3c, 0x7a, 0x73, 0x7f,
	0x73, 0x4f, 0x9d, 0xd8, 0x3b, 0xd7, 0x9b, 0x78, 0xe8, 0xe9, 0x1b, 0xac, 0xa4, 0x4e, 0x8e, 0xa0,
	0x8d, 0x9f, 0x99, 0x85, 0x8a, 0xb2, 0xd0, 0x4d, 0x2d, 0xe0, 0x6e, 0x6e, 0xa2, 0x7c, 0x40, 0x81,
	0x48, 0x97, 0x94, 0xf5, 0x5e, 0xd5, 0x04, 0x91, 0x9a, 0x50, 0x9b, 0x0a, 0x84, 0xa1, 0x4e, 0x5a,
	0x50, 0x11, 0x49, 0xaf, 0xb6, 0xeb, 0x3c, 0x72, 0x59, 0x45, 0x24, 0x47, 0x6b, 0xe0, 0xbe, 0xf6,
	0xc7, 0x31, 0xa7, 0x3f, 0x3a, 0xd0, 0x32, 0x43, 0x20, 0x3b, 0xe0, 0x89, 0xf0, 0x9a, 0x4f, 0xa7,
	0xfe, 0x84, 0xab, 0x60, 0x3d, 0x96, 0x2f, 0x90, 0x2e, 0xd4, 0xfd, 0x49, 0x18, 0x4f, 0x85, 0x8a,
	0xa2, 0xca, 0x50, 0x22, 0x04, 0x6a, 0xd3, 0x50, 0xf0, 0x9e, 0xab, 0x0e, 0xa8, 0x6f, 0xf2, 0x3e,
	0xd4, 0xc3, 0x58, 0x44, 0xb1, 0xe8, 0xad, 0x29, 0xb8, 0x1d, 0x13, 0xee, 0x40, 0xed, 0x31, 0xd4,
	0xa1, 0x7f, 0x38, 0xd0, 0x2e, 0x71, 0x71, 0x8f, 0x58, 0xde, 0x05, 0x37, 0x98, 0x4a, 0x28, 0x75,
	0x05, 0x65, 0xc3, 0x84, 0xd2, 0x97, 0x5b, 0x4c, 0x6b, 0xdc, 0x11, 0xf6, 0xef, 0x92, 0x41, 0x83,
	0xff, 0xff, 0x88, 0xba, 0x6a, 0x43, 0x5d, 0xbb, 0x03, 0x6a, 0xf7, 0x16, 0xa8, 0x4f, 0xa0, 0xfd,
	0xd5, 0xc5, 0xd7, 0x83, 0xd3, 0x71, 0x38, 0xf4, 0xc7, 0xfd, 0xe9, 0x0b, 0xbe, 0x90, 0xb8, 0xc4,
	0xe2, 0xca, 0x9f, 0x5f, 0x29, 0x04, 0x0d, 0x86, 0x12, 0xd9, 0x82, 0x07, 0x61, 0x2c, 0x02, 0xa9,
	0x83, 0x19, 0x94, 0xc9, 0xf4, 0x7b, 0x07, 0x1e, 0x9c, 0x71, 0x0d, 0xa4, 0x10, 0x98, 0x63, 0x04,
	0xf6, 0x39, 0xb4, 0x63, 0xb1, 0x08, 0x0b, 0xbe, 0x7a, 0x95, 0xdd, 0x6a, 0xa1, 0x02, 0x4a, 0x48,
	0x58, 0x59, 0x5d, 0x42, 0xb8, 0xe6, 0x49, 0x7f, 0xe2, 0x5f, 0x72, 0x04, 0x97, 0xc9, 0xf4, 0x33,
	0x68, 0x14, 0xe9, 0x20, 0xef, 0x29, 0x5d, 0xcd, 0x9a, 0xa3, 0xdc, 0xb4, 0xd1, 0x4d, 0x0a, 0x94,
	0x65, 0x0a, 0xb4, 0x0f, 0xde, 0x35, 0x47, 0x6e, 0x56, 0xe2, 0x7f, 0x1b, 0x9a, 0xe1, 0x94, 0x8b,
	0x60, 0xc2, 0xa3, 0x78, 0x78, 0xcd, 0x75, 0xfd, 0x36, 0x98, 0xb9, 0x48, 0xbf, 0xcd, 0x6e, 0x0e,
	0x34, 0xb7, 0x03, 0x1e, 0x8b, 0xe2, 0xe1, 0x19, 0x4f, 0xc4, 0x42, 0x59, 0x6c, 0xb0, 0x7c, 0x81,
	0xec, 0x29, 0xcf, 0xf8, 0xc7, 0x34, 0x1d, 0xeb, 0x88, 0x33, 0x43, 0xc4, 0x72, 0x15, 0x1a, 0x41,
	0xe7, 0x74, 0x16, 0xc6, 0x91, 0xe5, 0xaf, 0xfd, 0x3f, 0xa4, 0xd3, 0xdf, 0x1c, 0x68, 0x7e, 0x19,
	0x8e, 0xfc, 0xb1, 0xd4, 0xec, 0x0b, 0x3e, 0x91, 0xbe, 0xae, 0x78, 0x70, 0x79, 0x95, 0xf9, 0xd2,
	0x12, 0xe9, 0xc1, 0x9a, 0x58, 0x04, 0xe8, 0x43, 0x26, 0x48, 0x2a, 0x1a, 0xb9, 0x53, 0x35, 0x73,
	0xa7, 0x90, 0x6f, 0x35, 0x23, 0xdf, 0x96, 0xe8, 0x76, 0x6d, 0x74, 0x7f, 0x07, 0x2d, 0xc6, 0x5f,
	0x49, 0x68, 0xe7, 0x8a, 0xd2, 0x79, 0x56, 0x75, 0xcf, 0xcb, 0x55, 0x27, 0x17, 0xc8, 0x00, 0x3a,
	0x97, 0x16, 0xfe, 0x90, 0x94, 0x6d, 0x24, 0xc5, 0x46, 0x31, 0xb3, 0x1e, 0xa4, 0x0f, 0xa1, 0xa9,
	0xcb, 0xfd, 0x8c, 0x27, 0xc7, 0xbe, 0xf0, 0x65, 0xfd, 0xbe, 0xf0, 0x85, 0xaf, 0x92, 0xae, 0xc1,
	0xd4, 0x37, 0x3d, 0x84, 0x76, 0x66, 0x52, 0xe3, 0x5c, 0xf9, 0xc3, 0xba, 0x50, 0xcf, 0xd2, 0x4b,
	0x1a, 0x40, 0x89, 0x5e, 0xc8, 0x40, 0xe7, 0xc5, 0x40, 0x8f, 0x60, 0xfd, 0xd2, 0x34, 0x3a, 0xc7,
	0x4c, 0xef, 0x96, 0xc3, 0xd0, 0xdb, 0x6c, 0x49, 0x9f, 0x3e, 0x81, 0x36, 0xe3, 0xaf, 0x30, 0x61,
	0x2f, 0x24, 0x4b, 0xa4, 0x03, 0xae, 0xa2, 0x0b, 0xb9, 0xd3, 0xc2, 0xaa, 0xdb, 0x8a, 0x1e, 0x40,
	0xe3, 0x50, 0x7d, 0x1d, 0x73, 0xe1, 0x07, 0xe3, 0x95, 0x61, 0x75, 0xc0, 0x1d, 0x15, 0x8e, 0x6b,
	0x81, 0x3e, 0x87, 0x0d, 0xc6, 0xa3, 0x71, 0x92, 0xf6, 0x5a, 0xa5, 0x3b, 0x27, 0x1f, 0x43, 0xc3,
	0x2f, 0x18, 0xc5, 0xa8, 0xd2, 0x5b, 0xaf, 0xe8, 0x8f, 0x19, 0x8a, 0x94, 0x01, 0x99, 0x49, 0x7b,
	0x32, 0xc4, 0xf9, 0xe0, 0xa5, 0xd6, 0x24, 0x07, 0xd0, 0x1a, 0x17, 0x13, 0x38, 0xa5, 0x29, 0xbd,
	0x1a, 0x8d, 0xec, 0x66, 0x25, 0x5d, 0xfa, 0x0d, 0x74, 0x18, 0x1f, 0xf1, 0x20, 0x12, 0x66, 0x5d,
	0xdb, 0x79, 0xba, 0x6b, 0x3d, 0xff, 0xec, 0x40, 0x13, 0xc3, 0x1e, 0xbc, 0x94, 0x4e, 0xc9, 0x21,
	0x78, 0x3a, 0xa6, 0x67, 0x7e, 0x84, 0x40, 0x1f, 0x1a, 0x91, 0xa3, 0x22, 0x4a, 0xcf, 0xfc, 0xe8,
	0x64, 0x2a, 0x66, 0x09, 0xcb, 0x4f, 0x6d, 0x1d, 0x40, 0xcb, 0xdc, 0x24, 0xeb, 0x50, 0x95, 0x29,
	0xa5, 0xff, 0x89, 0xfc, 0x94, 0xf0, 0x55, 0xeb, 0x4f, 0x7f, 0x88, 0x12, 0x3e, 0xad, 0x7c, 0xe2,
	0xd0, 0x5f, 0x1d, 0x58, 0xbf, 0x48, 0x0b, 0x26, 0x45, 0x75, 0x8c, 0x55, 0x35, 0xcf, 0x51, 0xbd,
	0x83, 0xa8, 0xca, 0xba, 0x7a, 0x61, 0x9e, 0x03, 0xcb, 0x0e, 0x4a, 0x60, 0xe6, 0x66, 0x11, 0x98,
	0x67, 0x01, 0xe6, 0x15, 0x81, 0x9d, 0xc1, 0x66, 0xa9, 0xfa, 0x1e, 0x9f, 0xcf, 0x02, 0x5d, 0x33,
	0x78, 0x85, 0x68, 0x3b, 0xb6, 0x96, 0x55, 0x29, 0xb5, 0xac, 0x9f, 0x1c, 0x68, 0xa5, 0x9d, 0x20,
	0x37, 0x63, 0xcd, 0xdd, 0x2f, 0x56, 0xdd, 0xa1, 0x3b, 0xf6, 0x3b, 0x54, 0x9b, 0xbb, 0xb9, 0x7d,
	0x79, 0x85, 0xf6, 0x35, 0x80, 0x76, 0x96, 0x1f, 0x37, 0xc0, 0xb1, 0xf6, 0x21, 0xaf, 0x7c, 0x31,
	0x9e, 0x02, 0x29, 0xf6, 0x43, 0xb4, 0xf9, 0xe1, 0x52, 0x57, 0xdc, 0x2c, 0x75, 0x45, 0x04, 0x9f,
	0xf7, 0xc6, 0x00, 0x36, 0x8c, 0xc4, 0x47, 0x4b, 0x4b, 0x6d, 0xcd, 0x2b, 0xb6, 0xb5, 0xc7, 0xcb,
	0x65, 0xd0, 0x2d, 0x97, 0x01, 0x7a, 0x2a, 0x14, 0xc3, 0x2f, 0x0e, 0x74, 0xcc, 0x57, 0x68, 0xee,
	0xec, 0x9e, 0xde, 0x7f, 0xfb, 0xa5, 0x47, 0xdd, 0x96, 0xed, 0x79, 0x84, 0xc8, 0xd2, 0x47, 0xd2,
	0x5f, 0x0e, 0x6c, 0x96, 0x5e, 0xa4, 0xf7, 0x8e, 0xeb, 0x03, 0xf3, 0x5d, 0xfa, 0x96, 0xe5, 0x85,
	0x87, 0xa8, 0xf0, 0x9d, 0xf7, 0x6f, 0x02, 0xf9, 0x53, 0xf2, 0x6b, 0xbc, 0x51, 0xef, 0x25, 0x8e,
	0xaa, 0x2d, 0x8e, 0xda, 0x9d, 0xe3, 0x70, 0x6f, 0x1d, 0xc7, 0x0f, 0x95, 0x2c, 0x27, 0xf5, 0x78,
	0x86, 0x61, 0x9c, 0xac, 0x18, 0xd2, 0xb6, 0xad, 0x43, 0x9a, 0x3e, 0x64, 0x19, 0xd5, 0x9e, 0xae,
	0x1a, 0xd5, 0x76, 0xec, 0xa3, 0x5a, 0x66, 0x68, 0x69, 0x60, 0x3b, 0x59, 0x31, 0xb0, 0x6d, 0x5b,
	0x07, 0xb6, 0x02, 0xa0, 0xdb, 0x8d, 0x6d, 0xc3, 0xba, 0x9a, 0x5a, 0x3f, 0xfa, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x65, 0x27, 0x13, 0x7c, 0xc6, 0x0e, 0x00, 0x00,
}
