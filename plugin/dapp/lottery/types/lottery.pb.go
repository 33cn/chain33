// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lottery.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	lottery.proto

It has these top-level messages:
	PurchaseRecord
	PurchaseRecords
	Lottery
	MissingRecord
	LotteryAction
	LotteryCreate
	LotteryBuy
	LotteryDraw
	LotteryClose
	ReceiptLottery
	ReqLotteryInfo
	ReqLotteryBuyInfo
	ReqLotteryBuyHistory
	ReqLotteryLuckyInfo
	ReqLotteryLuckyHistory
	ReplyLotteryNormalInfo
	ReplyLotteryCurrentInfo
	ReplyLotteryHistoryLuckyNumber
	ReplyLotteryShowInfo
	LotteryNumberRecord
	LotteryBuyRecord
	LotteryBuyRecords
	LotteryDrawRecord
	LotteryDrawRecords
	LotteryUpdateRec
	LotteryUpdateRecs
	LotteryUpdateBuyInfo
	ReplyLotteryPurchaseAddr
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PurchaseRecord struct {
	Amount int64 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Number int64 `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	Index  int64 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	Way    int64 `protobuf:"varint,4,opt,name=way" json:"way,omitempty"`
}

func (m *PurchaseRecord) Reset()                    { *m = PurchaseRecord{} }
func (m *PurchaseRecord) String() string            { return proto.CompactTextString(m) }
func (*PurchaseRecord) ProtoMessage()               {}
func (*PurchaseRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PurchaseRecord) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PurchaseRecord) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *PurchaseRecord) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PurchaseRecord) GetWay() int64 {
	if m != nil {
		return m.Way
	}
	return 0
}

type PurchaseRecords struct {
	Record         []*PurchaseRecord `protobuf:"bytes,1,rep,name=record" json:"record,omitempty"`
	FundWin        int64             `protobuf:"varint,2,opt,name=fundWin" json:"fundWin,omitempty"`
	AmountOneRound int64             `protobuf:"varint,3,opt,name=amountOneRound" json:"amountOneRound,omitempty"`
}

func (m *PurchaseRecords) Reset()                    { *m = PurchaseRecords{} }
func (m *PurchaseRecords) String() string            { return proto.CompactTextString(m) }
func (*PurchaseRecords) ProtoMessage()               {}
func (*PurchaseRecords) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PurchaseRecords) GetRecord() []*PurchaseRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *PurchaseRecords) GetFundWin() int64 {
	if m != nil {
		return m.FundWin
	}
	return 0
}

func (m *PurchaseRecords) GetAmountOneRound() int64 {
	if m != nil {
		return m.AmountOneRound
	}
	return 0
}

type Lottery struct {
	LotteryId                  string                      `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
	Status                     int32                       `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	CreateHeight               int64                       `protobuf:"varint,3,opt,name=createHeight" json:"createHeight,omitempty"`
	Fund                       int64                       `protobuf:"varint,4,opt,name=fund" json:"fund,omitempty"`
	PurBlockNum                int64                       `protobuf:"varint,5,opt,name=purBlockNum" json:"purBlockNum,omitempty"`
	DrawBlockNum               int64                       `protobuf:"varint,6,opt,name=drawBlockNum" json:"drawBlockNum,omitempty"`
	LastTransToPurState        int64                       `protobuf:"varint,7,opt,name=lastTransToPurState" json:"lastTransToPurState,omitempty"`
	LastTransToDrawState       int64                       `protobuf:"varint,8,opt,name=lastTransToDrawState" json:"lastTransToDrawState,omitempty"`
	Records                    map[string]*PurchaseRecords `protobuf:"bytes,9,rep,name=records" json:"records,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TotalPurchasedTxNum        int64                       `protobuf:"varint,10,opt,name=totalPurchasedTxNum" json:"totalPurchasedTxNum,omitempty"`
	CreateAddr                 string                      `protobuf:"bytes,11,opt,name=createAddr" json:"createAddr,omitempty"`
	Round                      int64                       `protobuf:"varint,12,opt,name=round" json:"round,omitempty"`
	LuckyNumber                int64                       `protobuf:"varint,13,opt,name=luckyNumber" json:"luckyNumber,omitempty"`
	CreateOnMain               int64                       `protobuf:"varint,14,opt,name=createOnMain" json:"createOnMain,omitempty"`
	LastTransToPurStateOnMain  int64                       `protobuf:"varint,15,opt,name=lastTransToPurStateOnMain" json:"lastTransToPurStateOnMain,omitempty"`
	LastTransToDrawStateOnMain int64                       `protobuf:"varint,16,opt,name=lastTransToDrawStateOnMain" json:"lastTransToDrawStateOnMain,omitempty"`
	MissingRecords             []*MissingRecord            `protobuf:"bytes,17,rep,name=missingRecords" json:"missingRecords,omitempty"`
}

func (m *Lottery) Reset()                    { *m = Lottery{} }
func (m *Lottery) String() string            { return proto.CompactTextString(m) }
func (*Lottery) ProtoMessage()               {}
func (*Lottery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Lottery) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

func (m *Lottery) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Lottery) GetCreateHeight() int64 {
	if m != nil {
		return m.CreateHeight
	}
	return 0
}

func (m *Lottery) GetFund() int64 {
	if m != nil {
		return m.Fund
	}
	return 0
}

func (m *Lottery) GetPurBlockNum() int64 {
	if m != nil {
		return m.PurBlockNum
	}
	return 0
}

func (m *Lottery) GetDrawBlockNum() int64 {
	if m != nil {
		return m.DrawBlockNum
	}
	return 0
}

func (m *Lottery) GetLastTransToPurState() int64 {
	if m != nil {
		return m.LastTransToPurState
	}
	return 0
}

func (m *Lottery) GetLastTransToDrawState() int64 {
	if m != nil {
		return m.LastTransToDrawState
	}
	return 0
}

func (m *Lottery) GetRecords() map[string]*PurchaseRecords {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *Lottery) GetTotalPurchasedTxNum() int64 {
	if m != nil {
		return m.TotalPurchasedTxNum
	}
	return 0
}

func (m *Lottery) GetCreateAddr() string {
	if m != nil {
		return m.CreateAddr
	}
	return ""
}

func (m *Lottery) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Lottery) GetLuckyNumber() int64 {
	if m != nil {
		return m.LuckyNumber
	}
	return 0
}

func (m *Lottery) GetCreateOnMain() int64 {
	if m != nil {
		return m.CreateOnMain
	}
	return 0
}

func (m *Lottery) GetLastTransToPurStateOnMain() int64 {
	if m != nil {
		return m.LastTransToPurStateOnMain
	}
	return 0
}

func (m *Lottery) GetLastTransToDrawStateOnMain() int64 {
	if m != nil {
		return m.LastTransToDrawStateOnMain
	}
	return 0
}

func (m *Lottery) GetMissingRecords() []*MissingRecord {
	if m != nil {
		return m.MissingRecords
	}
	return nil
}

type MissingRecord struct {
	Times []int32 `protobuf:"varint,1,rep,packed,name=times" json:"times,omitempty"`
}

func (m *MissingRecord) Reset()                    { *m = MissingRecord{} }
func (m *MissingRecord) String() string            { return proto.CompactTextString(m) }
func (*MissingRecord) ProtoMessage()               {}
func (*MissingRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MissingRecord) GetTimes() []int32 {
	if m != nil {
		return m.Times
	}
	return nil
}

type LotteryAction struct {
	// Types that are valid to be assigned to Value:
	//	*LotteryAction_Create
	//	*LotteryAction_Buy
	//	*LotteryAction_Draw
	//	*LotteryAction_Close
	Value isLotteryAction_Value `protobuf_oneof:"value"`
	Ty    int32                 `protobuf:"varint,10,opt,name=ty" json:"ty,omitempty"`
}

func (m *LotteryAction) Reset()                    { *m = LotteryAction{} }
func (m *LotteryAction) String() string            { return proto.CompactTextString(m) }
func (*LotteryAction) ProtoMessage()               {}
func (*LotteryAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isLotteryAction_Value interface {
	isLotteryAction_Value()
}

type LotteryAction_Create struct {
	Create *LotteryCreate `protobuf:"bytes,1,opt,name=create,oneof"`
}
type LotteryAction_Buy struct {
	Buy *LotteryBuy `protobuf:"bytes,2,opt,name=buy,oneof"`
}
type LotteryAction_Draw struct {
	Draw *LotteryDraw `protobuf:"bytes,3,opt,name=draw,oneof"`
}
type LotteryAction_Close struct {
	Close *LotteryClose `protobuf:"bytes,4,opt,name=close,oneof"`
}

func (*LotteryAction_Create) isLotteryAction_Value() {}
func (*LotteryAction_Buy) isLotteryAction_Value()    {}
func (*LotteryAction_Draw) isLotteryAction_Value()   {}
func (*LotteryAction_Close) isLotteryAction_Value()  {}

func (m *LotteryAction) GetValue() isLotteryAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *LotteryAction) GetCreate() *LotteryCreate {
	if x, ok := m.GetValue().(*LotteryAction_Create); ok {
		return x.Create
	}
	return nil
}

func (m *LotteryAction) GetBuy() *LotteryBuy {
	if x, ok := m.GetValue().(*LotteryAction_Buy); ok {
		return x.Buy
	}
	return nil
}

func (m *LotteryAction) GetDraw() *LotteryDraw {
	if x, ok := m.GetValue().(*LotteryAction_Draw); ok {
		return x.Draw
	}
	return nil
}

func (m *LotteryAction) GetClose() *LotteryClose {
	if x, ok := m.GetValue().(*LotteryAction_Close); ok {
		return x.Close
	}
	return nil
}

func (m *LotteryAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LotteryAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LotteryAction_OneofMarshaler, _LotteryAction_OneofUnmarshaler, _LotteryAction_OneofSizer, []interface{}{
		(*LotteryAction_Create)(nil),
		(*LotteryAction_Buy)(nil),
		(*LotteryAction_Draw)(nil),
		(*LotteryAction_Close)(nil),
	}
}

func _LotteryAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LotteryAction)
	// value
	switch x := m.Value.(type) {
	case *LotteryAction_Create:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Create); err != nil {
			return err
		}
	case *LotteryAction_Buy:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Buy); err != nil {
			return err
		}
	case *LotteryAction_Draw:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Draw); err != nil {
			return err
		}
	case *LotteryAction_Close:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Close); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("LotteryAction.Value has unexpected type %T", x)
	}
	return nil
}

func _LotteryAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LotteryAction)
	switch tag {
	case 1: // value.create
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LotteryCreate)
		err := b.DecodeMessage(msg)
		m.Value = &LotteryAction_Create{msg}
		return true, err
	case 2: // value.buy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LotteryBuy)
		err := b.DecodeMessage(msg)
		m.Value = &LotteryAction_Buy{msg}
		return true, err
	case 3: // value.draw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LotteryDraw)
		err := b.DecodeMessage(msg)
		m.Value = &LotteryAction_Draw{msg}
		return true, err
	case 4: // value.close
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LotteryClose)
		err := b.DecodeMessage(msg)
		m.Value = &LotteryAction_Close{msg}
		return true, err
	default:
		return false, nil
	}
}

func _LotteryAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LotteryAction)
	// value
	switch x := m.Value.(type) {
	case *LotteryAction_Create:
		s := proto.Size(x.Create)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LotteryAction_Buy:
		s := proto.Size(x.Buy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LotteryAction_Draw:
		s := proto.Size(x.Draw)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LotteryAction_Close:
		s := proto.Size(x.Close)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type LotteryCreate struct {
	PurBlockNum  int64 `protobuf:"varint,1,opt,name=purBlockNum" json:"purBlockNum,omitempty"`
	DrawBlockNum int64 `protobuf:"varint,2,opt,name=drawBlockNum" json:"drawBlockNum,omitempty"`
}

func (m *LotteryCreate) Reset()                    { *m = LotteryCreate{} }
func (m *LotteryCreate) String() string            { return proto.CompactTextString(m) }
func (*LotteryCreate) ProtoMessage()               {}
func (*LotteryCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LotteryCreate) GetPurBlockNum() int64 {
	if m != nil {
		return m.PurBlockNum
	}
	return 0
}

func (m *LotteryCreate) GetDrawBlockNum() int64 {
	if m != nil {
		return m.DrawBlockNum
	}
	return 0
}

type LotteryBuy struct {
	LotteryId string `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Number    int64  `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
	Way       int64  `protobuf:"varint,4,opt,name=way" json:"way,omitempty"`
}

func (m *LotteryBuy) Reset()                    { *m = LotteryBuy{} }
func (m *LotteryBuy) String() string            { return proto.CompactTextString(m) }
func (*LotteryBuy) ProtoMessage()               {}
func (*LotteryBuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LotteryBuy) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

func (m *LotteryBuy) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *LotteryBuy) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *LotteryBuy) GetWay() int64 {
	if m != nil {
		return m.Way
	}
	return 0
}

type LotteryDraw struct {
	LotteryId string `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
}

func (m *LotteryDraw) Reset()                    { *m = LotteryDraw{} }
func (m *LotteryDraw) String() string            { return proto.CompactTextString(m) }
func (*LotteryDraw) ProtoMessage()               {}
func (*LotteryDraw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LotteryDraw) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

type LotteryClose struct {
	LotteryId string `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
}

func (m *LotteryClose) Reset()                    { *m = LotteryClose{} }
func (m *LotteryClose) String() string            { return proto.CompactTextString(m) }
func (*LotteryClose) ProtoMessage()               {}
func (*LotteryClose) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *LotteryClose) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

type ReceiptLottery struct {
	LotteryId   string                `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
	Status      int32                 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	PrevStatus  int32                 `protobuf:"varint,3,opt,name=prevStatus" json:"prevStatus,omitempty"`
	Addr        string                `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
	Round       int64                 `protobuf:"varint,5,opt,name=round" json:"round,omitempty"`
	Number      int64                 `protobuf:"varint,6,opt,name=number" json:"number,omitempty"`
	Amount      int64                 `protobuf:"varint,7,opt,name=amount" json:"amount,omitempty"`
	LuckyNumber int64                 `protobuf:"varint,8,opt,name=luckyNumber" json:"luckyNumber,omitempty"`
	Time        int64                 `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
	TxHash      string                `protobuf:"bytes,10,opt,name=txHash" json:"txHash,omitempty"`
	UpdateInfo  *LotteryUpdateBuyInfo `protobuf:"bytes,11,opt,name=updateInfo" json:"updateInfo,omitempty"`
	Way         int64                 `protobuf:"varint,12,opt,name=way" json:"way,omitempty"`
	Index       int64                 `protobuf:"varint,13,opt,name=index" json:"index,omitempty"`
}

func (m *ReceiptLottery) Reset()                    { *m = ReceiptLottery{} }
func (m *ReceiptLottery) String() string            { return proto.CompactTextString(m) }
func (*ReceiptLottery) ProtoMessage()               {}
func (*ReceiptLottery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ReceiptLottery) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

func (m *ReceiptLottery) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptLottery) GetPrevStatus() int32 {
	if m != nil {
		return m.PrevStatus
	}
	return 0
}

func (m *ReceiptLottery) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReceiptLottery) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *ReceiptLottery) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ReceiptLottery) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReceiptLottery) GetLuckyNumber() int64 {
	if m != nil {
		return m.LuckyNumber
	}
	return 0
}

func (m *ReceiptLottery) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ReceiptLottery) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ReceiptLottery) GetUpdateInfo() *LotteryUpdateBuyInfo {
	if m != nil {
		return m.UpdateInfo
	}
	return nil
}

func (m *ReceiptLottery) GetWay() int64 {
	if m != nil {
		return m.Way
	}
	return 0
}

func (m *ReceiptLottery) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ReqLotteryInfo struct {
	LotteryId string `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
}

func (m *ReqLotteryInfo) Reset()                    { *m = ReqLotteryInfo{} }
func (m *ReqLotteryInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqLotteryInfo) ProtoMessage()               {}
func (*ReqLotteryInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReqLotteryInfo) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

type ReqLotteryBuyInfo struct {
	LotteryId string `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
	Addr      string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	Round     int64  `protobuf:"varint,3,opt,name=round" json:"round,omitempty"`
}

func (m *ReqLotteryBuyInfo) Reset()                    { *m = ReqLotteryBuyInfo{} }
func (m *ReqLotteryBuyInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqLotteryBuyInfo) ProtoMessage()               {}
func (*ReqLotteryBuyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReqLotteryBuyInfo) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

func (m *ReqLotteryBuyInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqLotteryBuyInfo) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

type ReqLotteryBuyHistory struct {
	LotteryId string `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
	Addr      string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	Round     int64  `protobuf:"varint,3,opt,name=round" json:"round,omitempty"`
	Count     int32  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Direction int32  `protobuf:"varint,5,opt,name=direction" json:"direction,omitempty"`
	Index     int64  `protobuf:"varint,6,opt,name=index" json:"index,omitempty"`
}

func (m *ReqLotteryBuyHistory) Reset()                    { *m = ReqLotteryBuyHistory{} }
func (m *ReqLotteryBuyHistory) String() string            { return proto.CompactTextString(m) }
func (*ReqLotteryBuyHistory) ProtoMessage()               {}
func (*ReqLotteryBuyHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ReqLotteryBuyHistory) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

func (m *ReqLotteryBuyHistory) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqLotteryBuyHistory) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *ReqLotteryBuyHistory) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqLotteryBuyHistory) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqLotteryBuyHistory) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ReqLotteryLuckyInfo struct {
	LotteryId string  `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
	Round     []int64 `protobuf:"varint,2,rep,packed,name=round" json:"round,omitempty"`
}

func (m *ReqLotteryLuckyInfo) Reset()                    { *m = ReqLotteryLuckyInfo{} }
func (m *ReqLotteryLuckyInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqLotteryLuckyInfo) ProtoMessage()               {}
func (*ReqLotteryLuckyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ReqLotteryLuckyInfo) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

func (m *ReqLotteryLuckyInfo) GetRound() []int64 {
	if m != nil {
		return m.Round
	}
	return nil
}

type ReqLotteryLuckyHistory struct {
	LotteryId string `protobuf:"bytes,1,opt,name=lotteryId" json:"lotteryId,omitempty"`
	Round     int64  `protobuf:"varint,2,opt,name=round" json:"round,omitempty"`
	Count     int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Direction int32  `protobuf:"varint,4,opt,name=direction" json:"direction,omitempty"`
}

func (m *ReqLotteryLuckyHistory) Reset()                    { *m = ReqLotteryLuckyHistory{} }
func (m *ReqLotteryLuckyHistory) String() string            { return proto.CompactTextString(m) }
func (*ReqLotteryLuckyHistory) ProtoMessage()               {}
func (*ReqLotteryLuckyHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReqLotteryLuckyHistory) GetLotteryId() string {
	if m != nil {
		return m.LotteryId
	}
	return ""
}

func (m *ReqLotteryLuckyHistory) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *ReqLotteryLuckyHistory) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqLotteryLuckyHistory) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type ReplyLotteryNormalInfo struct {
	CreateHeight int64  `protobuf:"varint,1,opt,name=createHeight" json:"createHeight,omitempty"`
	PurBlockNum  int64  `protobuf:"varint,2,opt,name=purBlockNum" json:"purBlockNum,omitempty"`
	DrawBlockNum int64  `protobuf:"varint,3,opt,name=drawBlockNum" json:"drawBlockNum,omitempty"`
	CreateAddr   string `protobuf:"bytes,4,opt,name=createAddr" json:"createAddr,omitempty"`
}

func (m *ReplyLotteryNormalInfo) Reset()                    { *m = ReplyLotteryNormalInfo{} }
func (m *ReplyLotteryNormalInfo) String() string            { return proto.CompactTextString(m) }
func (*ReplyLotteryNormalInfo) ProtoMessage()               {}
func (*ReplyLotteryNormalInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ReplyLotteryNormalInfo) GetCreateHeight() int64 {
	if m != nil {
		return m.CreateHeight
	}
	return 0
}

func (m *ReplyLotteryNormalInfo) GetPurBlockNum() int64 {
	if m != nil {
		return m.PurBlockNum
	}
	return 0
}

func (m *ReplyLotteryNormalInfo) GetDrawBlockNum() int64 {
	if m != nil {
		return m.DrawBlockNum
	}
	return 0
}

func (m *ReplyLotteryNormalInfo) GetCreateAddr() string {
	if m != nil {
		return m.CreateAddr
	}
	return ""
}

type ReplyLotteryCurrentInfo struct {
	Status                     int32            `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Fund                       int64            `protobuf:"varint,2,opt,name=fund" json:"fund,omitempty"`
	LastTransToPurState        int64            `protobuf:"varint,3,opt,name=lastTransToPurState" json:"lastTransToPurState,omitempty"`
	LastTransToDrawState       int64            `protobuf:"varint,4,opt,name=lastTransToDrawState" json:"lastTransToDrawState,omitempty"`
	TotalPurchasedTxNum        int64            `protobuf:"varint,5,opt,name=totalPurchasedTxNum" json:"totalPurchasedTxNum,omitempty"`
	Round                      int64            `protobuf:"varint,6,opt,name=round" json:"round,omitempty"`
	LuckyNumber                int64            `protobuf:"varint,7,opt,name=luckyNumber" json:"luckyNumber,omitempty"`
	LastTransToPurStateOnMain  int64            `protobuf:"varint,8,opt,name=lastTransToPurStateOnMain" json:"lastTransToPurStateOnMain,omitempty"`
	LastTransToDrawStateOnMain int64            `protobuf:"varint,9,opt,name=lastTransToDrawStateOnMain" json:"lastTransToDrawStateOnMain,omitempty"`
	PurBlockNum                int64            `protobuf:"varint,10,opt,name=purBlockNum" json:"purBlockNum,omitempty"`
	DrawBlockNum               int64            `protobuf:"varint,11,opt,name=drawBlockNum" json:"drawBlockNum,omitempty"`
	MissingRecords             []*MissingRecord `protobuf:"bytes,12,rep,name=missingRecords" json:"missingRecords,omitempty"`
}

func (m *ReplyLotteryCurrentInfo) Reset()                    { *m = ReplyLotteryCurrentInfo{} }
func (m *ReplyLotteryCurrentInfo) String() string            { return proto.CompactTextString(m) }
func (*ReplyLotteryCurrentInfo) ProtoMessage()               {}
func (*ReplyLotteryCurrentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ReplyLotteryCurrentInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetFund() int64 {
	if m != nil {
		return m.Fund
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetLastTransToPurState() int64 {
	if m != nil {
		return m.LastTransToPurState
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetLastTransToDrawState() int64 {
	if m != nil {
		return m.LastTransToDrawState
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetTotalPurchasedTxNum() int64 {
	if m != nil {
		return m.TotalPurchasedTxNum
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetLuckyNumber() int64 {
	if m != nil {
		return m.LuckyNumber
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetLastTransToPurStateOnMain() int64 {
	if m != nil {
		return m.LastTransToPurStateOnMain
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetLastTransToDrawStateOnMain() int64 {
	if m != nil {
		return m.LastTransToDrawStateOnMain
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetPurBlockNum() int64 {
	if m != nil {
		return m.PurBlockNum
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetDrawBlockNum() int64 {
	if m != nil {
		return m.DrawBlockNum
	}
	return 0
}

func (m *ReplyLotteryCurrentInfo) GetMissingRecords() []*MissingRecord {
	if m != nil {
		return m.MissingRecords
	}
	return nil
}

type ReplyLotteryHistoryLuckyNumber struct {
	LuckyNumber []int64 `protobuf:"varint,1,rep,packed,name=luckyNumber" json:"luckyNumber,omitempty"`
}

func (m *ReplyLotteryHistoryLuckyNumber) Reset()                    { *m = ReplyLotteryHistoryLuckyNumber{} }
func (m *ReplyLotteryHistoryLuckyNumber) String() string            { return proto.CompactTextString(m) }
func (*ReplyLotteryHistoryLuckyNumber) ProtoMessage()               {}
func (*ReplyLotteryHistoryLuckyNumber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ReplyLotteryHistoryLuckyNumber) GetLuckyNumber() []int64 {
	if m != nil {
		return m.LuckyNumber
	}
	return nil
}

type ReplyLotteryShowInfo struct {
	Records []*LotteryBuyRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *ReplyLotteryShowInfo) Reset()                    { *m = ReplyLotteryShowInfo{} }
func (m *ReplyLotteryShowInfo) String() string            { return proto.CompactTextString(m) }
func (*ReplyLotteryShowInfo) ProtoMessage()               {}
func (*ReplyLotteryShowInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ReplyLotteryShowInfo) GetRecords() []*LotteryBuyRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type LotteryNumberRecord struct {
	Number int64 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *LotteryNumberRecord) Reset()                    { *m = LotteryNumberRecord{} }
func (m *LotteryNumberRecord) String() string            { return proto.CompactTextString(m) }
func (*LotteryNumberRecord) ProtoMessage()               {}
func (*LotteryNumberRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *LotteryNumberRecord) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *LotteryNumberRecord) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// used for execlocal
type LotteryBuyRecord struct {
	Number int64  `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Amount int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Round  int64  `protobuf:"varint,3,opt,name=round" json:"round,omitempty"`
	Type   int64  `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	Way    int64  `protobuf:"varint,5,opt,name=way" json:"way,omitempty"`
	Index  int64  `protobuf:"varint,6,opt,name=index" json:"index,omitempty"`
	Time   int64  `protobuf:"varint,7,opt,name=time" json:"time,omitempty"`
	TxHash string `protobuf:"bytes,8,opt,name=txHash" json:"txHash,omitempty"`
}

func (m *LotteryBuyRecord) Reset()                    { *m = LotteryBuyRecord{} }
func (m *LotteryBuyRecord) String() string            { return proto.CompactTextString(m) }
func (*LotteryBuyRecord) ProtoMessage()               {}
func (*LotteryBuyRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *LotteryBuyRecord) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *LotteryBuyRecord) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *LotteryBuyRecord) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *LotteryBuyRecord) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LotteryBuyRecord) GetWay() int64 {
	if m != nil {
		return m.Way
	}
	return 0
}

func (m *LotteryBuyRecord) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LotteryBuyRecord) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *LotteryBuyRecord) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type LotteryBuyRecords struct {
	Records []*LotteryBuyRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *LotteryBuyRecords) Reset()                    { *m = LotteryBuyRecords{} }
func (m *LotteryBuyRecords) String() string            { return proto.CompactTextString(m) }
func (*LotteryBuyRecords) ProtoMessage()               {}
func (*LotteryBuyRecords) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *LotteryBuyRecords) GetRecords() []*LotteryBuyRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type LotteryDrawRecord struct {
	Number int64  `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Round  int64  `protobuf:"varint,2,opt,name=round" json:"round,omitempty"`
	Time   int64  `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	TxHash string `protobuf:"bytes,4,opt,name=txHash" json:"txHash,omitempty"`
}

func (m *LotteryDrawRecord) Reset()                    { *m = LotteryDrawRecord{} }
func (m *LotteryDrawRecord) String() string            { return proto.CompactTextString(m) }
func (*LotteryDrawRecord) ProtoMessage()               {}
func (*LotteryDrawRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *LotteryDrawRecord) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *LotteryDrawRecord) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *LotteryDrawRecord) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *LotteryDrawRecord) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type LotteryDrawRecords struct {
	Records []*LotteryDrawRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *LotteryDrawRecords) Reset()                    { *m = LotteryDrawRecords{} }
func (m *LotteryDrawRecords) String() string            { return proto.CompactTextString(m) }
func (*LotteryDrawRecords) ProtoMessage()               {}
func (*LotteryDrawRecords) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *LotteryDrawRecords) GetRecords() []*LotteryDrawRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type LotteryUpdateRec struct {
	Index int64 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Type  int64 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
}

func (m *LotteryUpdateRec) Reset()                    { *m = LotteryUpdateRec{} }
func (m *LotteryUpdateRec) String() string            { return proto.CompactTextString(m) }
func (*LotteryUpdateRec) ProtoMessage()               {}
func (*LotteryUpdateRec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *LotteryUpdateRec) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LotteryUpdateRec) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type LotteryUpdateRecs struct {
	Records []*LotteryUpdateRec `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *LotteryUpdateRecs) Reset()                    { *m = LotteryUpdateRecs{} }
func (m *LotteryUpdateRecs) String() string            { return proto.CompactTextString(m) }
func (*LotteryUpdateRecs) ProtoMessage()               {}
func (*LotteryUpdateRecs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *LotteryUpdateRecs) GetRecords() []*LotteryUpdateRec {
	if m != nil {
		return m.Records
	}
	return nil
}

type LotteryUpdateBuyInfo struct {
	BuyInfo map[string]*LotteryUpdateRecs `protobuf:"bytes,1,rep,name=buyInfo" json:"buyInfo,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *LotteryUpdateBuyInfo) Reset()                    { *m = LotteryUpdateBuyInfo{} }
func (m *LotteryUpdateBuyInfo) String() string            { return proto.CompactTextString(m) }
func (*LotteryUpdateBuyInfo) ProtoMessage()               {}
func (*LotteryUpdateBuyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *LotteryUpdateBuyInfo) GetBuyInfo() map[string]*LotteryUpdateRecs {
	if m != nil {
		return m.BuyInfo
	}
	return nil
}

type ReplyLotteryPurchaseAddr struct {
	Address []string `protobuf:"bytes,1,rep,name=address" json:"address,omitempty"`
}

func (m *ReplyLotteryPurchaseAddr) Reset()                    { *m = ReplyLotteryPurchaseAddr{} }
func (m *ReplyLotteryPurchaseAddr) String() string            { return proto.CompactTextString(m) }
func (*ReplyLotteryPurchaseAddr) ProtoMessage()               {}
func (*ReplyLotteryPurchaseAddr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ReplyLotteryPurchaseAddr) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

func init() {
	proto.RegisterType((*PurchaseRecord)(nil), "types.PurchaseRecord")
	proto.RegisterType((*PurchaseRecords)(nil), "types.PurchaseRecords")
	proto.RegisterType((*Lottery)(nil), "types.Lottery")
	proto.RegisterType((*MissingRecord)(nil), "types.MissingRecord")
	proto.RegisterType((*LotteryAction)(nil), "types.LotteryAction")
	proto.RegisterType((*LotteryCreate)(nil), "types.LotteryCreate")
	proto.RegisterType((*LotteryBuy)(nil), "types.LotteryBuy")
	proto.RegisterType((*LotteryDraw)(nil), "types.LotteryDraw")
	proto.RegisterType((*LotteryClose)(nil), "types.LotteryClose")
	proto.RegisterType((*ReceiptLottery)(nil), "types.ReceiptLottery")
	proto.RegisterType((*ReqLotteryInfo)(nil), "types.ReqLotteryInfo")
	proto.RegisterType((*ReqLotteryBuyInfo)(nil), "types.ReqLotteryBuyInfo")
	proto.RegisterType((*ReqLotteryBuyHistory)(nil), "types.ReqLotteryBuyHistory")
	proto.RegisterType((*ReqLotteryLuckyInfo)(nil), "types.ReqLotteryLuckyInfo")
	proto.RegisterType((*ReqLotteryLuckyHistory)(nil), "types.ReqLotteryLuckyHistory")
	proto.RegisterType((*ReplyLotteryNormalInfo)(nil), "types.ReplyLotteryNormalInfo")
	proto.RegisterType((*ReplyLotteryCurrentInfo)(nil), "types.ReplyLotteryCurrentInfo")
	proto.RegisterType((*ReplyLotteryHistoryLuckyNumber)(nil), "types.ReplyLotteryHistoryLuckyNumber")
	proto.RegisterType((*ReplyLotteryShowInfo)(nil), "types.ReplyLotteryShowInfo")
	proto.RegisterType((*LotteryNumberRecord)(nil), "types.LotteryNumberRecord")
	proto.RegisterType((*LotteryBuyRecord)(nil), "types.LotteryBuyRecord")
	proto.RegisterType((*LotteryBuyRecords)(nil), "types.LotteryBuyRecords")
	proto.RegisterType((*LotteryDrawRecord)(nil), "types.LotteryDrawRecord")
	proto.RegisterType((*LotteryDrawRecords)(nil), "types.LotteryDrawRecords")
	proto.RegisterType((*LotteryUpdateRec)(nil), "types.LotteryUpdateRec")
	proto.RegisterType((*LotteryUpdateRecs)(nil), "types.LotteryUpdateRecs")
	proto.RegisterType((*LotteryUpdateBuyInfo)(nil), "types.LotteryUpdateBuyInfo")
	proto.RegisterType((*ReplyLotteryPurchaseAddr)(nil), "types.ReplyLotteryPurchaseAddr")
}

func init() { proto.RegisterFile("lottery.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0x5f, 0x6f, 0xe3, 0x44,
	0x10, 0xaf, 0xed, 0x38, 0x69, 0x26, 0x69, 0xee, 0xba, 0x2d, 0x3d, 0x53, 0x50, 0x55, 0x59, 0x3a,
	0x54, 0xe9, 0x8e, 0x08, 0x02, 0x48, 0x08, 0x2a, 0xa4, 0xcb, 0x71, 0x28, 0x95, 0x7a, 0xbd, 0xd3,
	0xb6, 0x27, 0x1e, 0x78, 0x72, 0xe3, 0xbd, 0xab, 0xd5, 0xc4, 0x0e, 0xf6, 0xfa, 0x5a, 0xbf, 0x21,
	0xbe, 0x04, 0x3c, 0xf3, 0xc4, 0x23, 0x1f, 0x81, 0x4f, 0xc1, 0x17, 0xe1, 0x0b, 0xa0, 0x9d, 0x5d,
	0xc7, 0x6b, 0xc7, 0x49, 0x7a, 0xdc, 0x53, 0x76, 0x67, 0x67, 0x67, 0x67, 0x7e, 0xf3, 0xd7, 0x81,
	0xad, 0x49, 0xc4, 0x39, 0x8b, 0xb3, 0xfe, 0x2c, 0x8e, 0x78, 0x44, 0x6c, 0x9e, 0xcd, 0x58, 0xe2,
	0x5e, 0x41, 0xef, 0x65, 0x1a, 0x8f, 0xaf, 0xbc, 0x84, 0x51, 0x36, 0x8e, 0x62, 0x9f, 0xec, 0x41,
	0xd3, 0x9b, 0x46, 0x69, 0xc8, 0x1d, 0xe3, 0xd0, 0x38, 0xb2, 0xa8, 0xda, 0x09, 0x7a, 0x98, 0x4e,
	0x2f, 0x59, 0xec, 0x98, 0x92, 0x2e, 0x77, 0x64, 0x17, 0xec, 0x20, 0xf4, 0xd9, 0xad, 0x63, 0x21,
	0x59, 0x6e, 0xc8, 0x7d, 0xb0, 0x6e, 0xbc, 0xcc, 0x69, 0x20, 0x4d, 0x2c, 0xdd, 0x5f, 0x0d, 0xb8,
	0x57, 0x7e, 0x2a, 0x21, 0x9f, 0x42, 0x33, 0xc6, 0xa5, 0x63, 0x1c, 0x5a, 0x47, 0x9d, 0xc1, 0x07,
	0x7d, 0xd4, 0xaa, 0x5f, 0xe6, 0xa3, 0x8a, 0x89, 0x38, 0xd0, 0x7a, 0x9d, 0x86, 0xfe, 0x8f, 0x41,
	0xa8, 0x74, 0xc8, 0xb7, 0xe4, 0x13, 0xe8, 0x49, 0x35, 0x5f, 0x84, 0x8c, 0x46, 0x69, 0xe8, 0x2b,
	0x6d, 0x2a, 0x54, 0xf7, 0xf7, 0x26, 0xb4, 0x4e, 0x25, 0x0e, 0xe4, 0x63, 0x68, 0x2b, 0x48, 0x4e,
	0x7c, 0xb4, 0xb5, 0x4d, 0x0b, 0x82, 0x30, 0x37, 0xe1, 0x1e, 0x4f, 0x13, 0x7c, 0xca, 0xa6, 0x6a,
	0x47, 0x5c, 0xe8, 0x8e, 0x63, 0xe6, 0x71, 0x36, 0x62, 0xc1, 0x9b, 0x2b, 0xae, 0xde, 0x29, 0xd1,
	0x08, 0x81, 0x86, 0x50, 0x4c, 0x59, 0x8f, 0x6b, 0x72, 0x08, 0x9d, 0x59, 0x1a, 0x0f, 0x27, 0xd1,
	0xf8, 0xfa, 0x2c, 0x9d, 0x3a, 0x36, 0x1e, 0xe9, 0x24, 0x21, 0xd9, 0x8f, 0xbd, 0x9b, 0x39, 0x4b,
	0x53, 0x4a, 0xd6, 0x69, 0xe4, 0x33, 0xd8, 0x99, 0x78, 0x09, 0xbf, 0x88, 0xbd, 0x30, 0xb9, 0x88,
	0x5e, 0xa6, 0xf1, 0x39, 0xf7, 0x38, 0x73, 0x5a, 0xc8, 0x5a, 0x77, 0x44, 0x06, 0xb0, 0xab, 0x91,
	0xbf, 0x8f, 0xbd, 0x1b, 0x79, 0x65, 0x13, 0xaf, 0xd4, 0x9e, 0x91, 0xaf, 0xa0, 0x25, 0x11, 0x4f,
	0x9c, 0x36, 0xfa, 0xe5, 0x23, 0xe5, 0x17, 0x05, 0x5d, 0x5f, 0xf9, 0xef, 0x59, 0xc8, 0xe3, 0x8c,
	0xe6, 0xbc, 0x42, 0x39, 0x1e, 0x71, 0x6f, 0x92, 0x7b, 0xcf, 0xbf, 0xb8, 0x15, 0x76, 0x80, 0x54,
	0xae, 0xe6, 0x88, 0x1c, 0x00, 0x48, 0xe0, 0x9e, 0xf8, 0x7e, 0xec, 0x74, 0xd0, 0x07, 0x1a, 0x45,
	0xc4, 0x56, 0x8c, 0xde, 0xec, 0xca, 0xd8, 0xc2, 0x8d, 0x80, 0x72, 0x92, 0x8e, 0xaf, 0xb3, 0x33,
	0x19, 0x8e, 0x5b, 0x12, 0x4a, 0x8d, 0x54, 0x38, 0xe9, 0x45, 0xf8, 0xdc, 0x0b, 0x42, 0xa7, 0xa7,
	0x3b, 0x49, 0xd2, 0xc8, 0x31, 0x7c, 0x58, 0x83, 0x97, 0xba, 0x70, 0x0f, 0x2f, 0x2c, 0x67, 0x20,
	0xdf, 0xc1, 0x7e, 0x1d, 0x74, 0xea, 0xfa, 0x7d, 0xbc, 0xbe, 0x82, 0x83, 0x1c, 0x43, 0x6f, 0x1a,
	0x24, 0x49, 0x10, 0xbe, 0x51, 0x58, 0x3a, 0xdb, 0x88, 0xf4, 0xae, 0x42, 0xfa, 0xb9, 0x7e, 0x48,
	0x2b, 0xbc, 0xfb, 0x14, 0xba, 0xba, 0x0b, 0x44, 0xb6, 0x5d, 0xb3, 0x4c, 0x05, 0xb1, 0x58, 0x92,
	0xc7, 0x60, 0xbf, 0xf5, 0x26, 0x29, 0xc3, 0xe8, 0xed, 0x0c, 0xf6, 0x6a, 0x13, 0x2b, 0xa1, 0x92,
	0xe9, 0x1b, 0xf3, 0x6b, 0xc3, 0x7d, 0x08, 0x5b, 0xa5, 0x47, 0x05, 0xf8, 0x3c, 0x98, 0xb2, 0x04,
	0x73, 0xd3, 0xa6, 0x72, 0xe3, 0xfe, 0x63, 0xc0, 0x96, 0x0a, 0x83, 0x27, 0x63, 0x1e, 0x44, 0x21,
	0xe9, 0x43, 0x53, 0x02, 0x8b, 0xef, 0x17, 0x26, 0x28, 0xae, 0xa7, 0x32, 0x33, 0x36, 0xa8, 0xe2,
	0x22, 0x0f, 0xc1, 0xba, 0x4c, 0x33, 0xa5, 0xd8, 0x76, 0x99, 0x79, 0x98, 0x66, 0xa3, 0x0d, 0x2a,
	0xce, 0xc9, 0x11, 0x34, 0x44, 0xe8, 0x63, 0x82, 0x75, 0x06, 0xa4, 0xcc, 0x27, 0xe0, 0x1c, 0x6d,
	0x50, 0xe4, 0x20, 0x8f, 0xc0, 0x1e, 0x4f, 0xa2, 0x84, 0x61, 0xbe, 0x75, 0x06, 0x3b, 0x95, 0xf7,
	0xc5, 0xd1, 0x68, 0x83, 0x4a, 0x1e, 0xd2, 0x03, 0x93, 0x67, 0x18, 0x93, 0x36, 0x35, 0x79, 0x36,
	0x6c, 0x29, 0xa0, 0xdc, 0x57, 0x73, 0xbb, 0xa4, 0xc6, 0xd5, 0x8c, 0x35, 0xd6, 0x67, 0xac, 0xb9,
	0x98, 0xb1, 0xee, 0x04, 0xa0, 0xb0, 0x6d, 0x7d, 0xcd, 0x51, 0xa5, 0xd7, 0x5c, 0x52, 0x7a, 0xad,
	0x52, 0xe9, 0x5d, 0x2c, 0xb2, 0x8f, 0xa0, 0xa3, 0x21, 0xb4, 0xfa, 0x39, 0xf7, 0x31, 0x74, 0x75,
	0x8c, 0xd6, 0x70, 0xff, 0x6b, 0x42, 0x8f, 0xb2, 0x31, 0x0b, 0x66, 0xfc, 0xfd, 0x2a, 0xe8, 0x01,
	0xc0, 0x2c, 0x66, 0x6f, 0xcf, 0xe5, 0x99, 0x85, 0x67, 0x1a, 0x45, 0x54, 0x4f, 0x4f, 0x94, 0x83,
	0x06, 0x0a, 0xc4, 0x75, 0x51, 0x08, 0x6c, 0xbd, 0x10, 0x14, 0xb8, 0x34, 0x4b, 0xb8, 0x14, 0x38,
	0xb6, 0x4a, 0x38, 0x56, 0x0a, 0xc7, 0xe6, 0x62, 0xe1, 0x20, 0xd0, 0x10, 0x61, 0xee, 0xb4, 0x65,
	0xe5, 0x16, 0x6b, 0x21, 0x8d, 0xdf, 0x8e, 0xbc, 0xe4, 0x0a, 0xa3, 0xa6, 0x4d, 0xd5, 0x8e, 0x7c,
	0x0b, 0x90, 0xce, 0x7c, 0x8f, 0xb3, 0x93, 0xf0, 0x75, 0x84, 0xc5, 0x6b, 0xa1, 0x50, 0xbe, 0xc2,
	0xf3, 0x61, 0x9a, 0x09, 0x16, 0xaa, 0xb1, 0xe7, 0xae, 0xeb, 0xce, 0x5d, 0x57, 0xf4, 0xd1, 0x2d,
	0xad, 0x8f, 0xba, 0x7d, 0x01, 0xfa, 0xcf, 0x4a, 0x1c, 0xde, 0x5c, 0xed, 0xa5, 0x9f, 0x60, 0xbb,
	0xe0, 0x57, 0x0f, 0xaf, 0xf1, 0x53, 0x8e, 0xb7, 0x59, 0x87, 0xb7, 0xa5, 0xe1, 0xed, 0xfe, 0x69,
	0xc0, 0x6e, 0x49, 0xfa, 0x28, 0x48, 0x78, 0xb4, 0x36, 0x10, 0xee, 0xfc, 0x80, 0xa0, 0x8e, 0xd1,
	0x6f, 0x0d, 0x8c, 0x0a, 0xb9, 0x11, 0xd2, 0xfd, 0x20, 0x66, 0x58, 0x6d, 0x30, 0x00, 0x6c, 0x5a,
	0x10, 0x0a, 0xdc, 0x9a, 0x3a, 0x6e, 0x27, 0xb0, 0x53, 0x68, 0x7a, 0x2a, 0x3c, 0x7c, 0x07, 0x24,
	0xe6, 0x4a, 0x99, 0x87, 0x56, 0x61, 0xf5, 0x2f, 0x06, 0xec, 0x55, 0x64, 0xdd, 0xcd, 0x6e, 0x4d,
	0x5c, 0x9d, 0x8d, 0xd6, 0x52, 0x1b, 0x1b, 0x15, 0x1b, 0xdd, 0x3f, 0x50, 0x85, 0xd9, 0x24, 0x53,
	0x4a, 0x9c, 0x45, 0xf1, 0xd4, 0x9b, 0xa0, 0x45, 0xd5, 0x79, 0xc4, 0xa8, 0x99, 0x47, 0x2a, 0x95,
	0xcc, 0x5c, 0x5f, 0xc9, 0xac, 0x9a, 0xd9, 0xa3, 0xdc, 0xac, 0x1b, 0xd5, 0x66, 0xed, 0xfe, 0xd6,
	0x80, 0x07, 0xba, 0x92, 0x4f, 0xd3, 0x38, 0x66, 0x21, 0x47, 0x2d, 0x8b, 0x5a, 0x60, 0x94, 0x6a,
	0x41, 0x3e, 0x29, 0x99, 0xda, 0xa4, 0xb4, 0x64, 0xc6, 0xb1, 0xde, 0x7d, 0xc6, 0x69, 0xac, 0x98,
	0x71, 0x96, 0x0c, 0x2b, 0xf6, 0xf2, 0x61, 0x65, 0xee, 0xce, 0xe6, 0x8a, 0x61, 0xa4, 0xb5, 0x58,
	0x53, 0x56, 0x0e, 0x1a, 0x9b, 0xef, 0x37, 0x68, 0xb4, 0xd7, 0x0e, 0x1a, 0x15, 0xdf, 0xc3, 0x7a,
	0xdf, 0x77, 0x6a, 0x7c, 0xbf, 0x38, 0xae, 0x74, 0xef, 0x3e, 0xae, 0xb8, 0x43, 0x38, 0xd0, 0x03,
	0x43, 0x65, 0xcf, 0xa9, 0x86, 0x51, 0x05, 0x45, 0x03, 0xf3, 0x4f, 0x27, 0xb9, 0x27, 0xa2, 0xf4,
	0x14, 0x32, 0xce, 0xaf, 0xa2, 0x1b, 0x8c, 0xac, 0xcf, 0x8b, 0x59, 0x55, 0x7e, 0x43, 0x3c, 0x58,
	0x98, 0x28, 0x94, 0x56, 0x39, 0x9f, 0xfb, 0x0c, 0x76, 0xf2, 0x3c, 0x42, 0xd9, 0xc5, 0x87, 0x4f,
	0x98, 0x3f, 0x5f, 0xdf, 0x4d, 0x4a, 0x5d, 0xd9, 0xfd, 0xdb, 0x80, 0xfb, 0xd5, 0x47, 0xde, 0x55,
	0xc8, 0x92, 0x3a, 0x28, 0xda, 0x50, 0x36, 0xcb, 0x03, 0x18, 0xd7, 0x79, 0xc7, 0xb0, 0x6b, 0x3a,
	0x86, 0x5e, 0xf9, 0xe6, 0x2d, 0xac, 0x55, 0xdb, 0xc2, 0x36, 0xf5, 0x16, 0xe6, 0xfe, 0x00, 0xdb,
	0x55, 0x0b, 0x92, 0xff, 0x83, 0xe8, 0x74, 0x2e, 0x47, 0x84, 0xdf, 0x1a, 0x28, 0xea, 0xcb, 0x62,
	0xae, 0xb6, 0x55, 0xab, 0x76, 0xa3, 0xa4, 0xf6, 0x08, 0xc8, 0xc2, 0x73, 0x09, 0x19, 0x54, 0xf5,
	0x76, 0x16, 0x67, 0xc6, 0xaa, 0xe2, 0xc7, 0x73, 0x17, 0xca, 0x56, 0x4d, 0xd9, 0xb8, 0x80, 0xd5,
	0xa8, 0xc2, 0x2a, 0x5c, 0x62, 0x16, 0x2e, 0xd1, 0xe0, 0x9b, 0xdf, 0x5e, 0x0f, 0xdf, 0x9c, 0xb5,
	0xd0, 0xe2, 0x2f, 0x03, 0x76, 0xeb, 0x26, 0x06, 0x32, 0x84, 0xd6, 0xa5, 0x5c, 0x2a, 0x59, 0x47,
	0x2b, 0xe6, 0x8b, 0xbe, 0xfa, 0x55, 0x5f, 0x65, 0xea, 0xe2, 0xfe, 0x05, 0x74, 0xf5, 0x83, 0x9a,
	0x6f, 0x85, 0x7e, 0xf9, 0x5b, 0xc1, 0x59, 0xa2, 0x6f, 0xe9, 0x6b, 0xe1, 0x4b, 0x70, 0xf4, 0x74,
	0xcc, 0x4b, 0x25, 0x7e, 0xb5, 0x39, 0xd0, 0x12, 0x3d, 0x9e, 0x25, 0x12, 0x81, 0x36, 0xcd, 0xb7,
	0x97, 0x4d, 0xfc, 0xef, 0xe1, 0x8b, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x56, 0x83, 0xf5,
	0x8c, 0x10, 0x00, 0x00,
}
