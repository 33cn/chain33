// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authority.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReqAuthGetUser struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ReqAuthGetUser) Reset()                    { *m = ReqAuthGetUser{} }
func (m *ReqAuthGetUser) String() string            { return proto.CompactTextString(m) }
func (*ReqAuthGetUser) ProtoMessage()               {}
func (*ReqAuthGetUser) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ReqAuthGetUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ReplyAuthGetUser struct {
	Cert []byte `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key  []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *ReplyAuthGetUser) Reset()                    { *m = ReplyAuthGetUser{} }
func (m *ReplyAuthGetUser) String() string            { return proto.CompactTextString(m) }
func (*ReplyAuthGetUser) ProtoMessage()               {}
func (*ReplyAuthGetUser) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ReplyAuthGetUser) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *ReplyAuthGetUser) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type ReqAuthCheckCert struct {
	Sig *Signature `protobuf:"bytes,1,opt,name=sig" json:"sig,omitempty"`
}

func (m *ReqAuthCheckCert) Reset()                    { *m = ReqAuthCheckCert{} }
func (m *ReqAuthCheckCert) String() string            { return proto.CompactTextString(m) }
func (*ReqAuthCheckCert) ProtoMessage()               {}
func (*ReqAuthCheckCert) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ReqAuthCheckCert) GetSig() *Signature {
	if m != nil {
		return m.Sig
	}
	return nil
}

type ReplyAuthCheckCert struct {
	Result bool `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *ReplyAuthCheckCert) Reset()                    { *m = ReplyAuthCheckCert{} }
func (m *ReplyAuthCheckCert) String() string            { return proto.CompactTextString(m) }
func (*ReplyAuthCheckCert) ProtoMessage()               {}
func (*ReplyAuthCheckCert) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ReplyAuthCheckCert) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ReqAuthCheckCerts struct {
	Sig []*Signature `protobuf:"bytes,1,rep,name=sig" json:"sig,omitempty"`
}

func (m *ReqAuthCheckCerts) Reset()                    { *m = ReqAuthCheckCerts{} }
func (m *ReqAuthCheckCerts) String() string            { return proto.CompactTextString(m) }
func (*ReqAuthCheckCerts) ProtoMessage()               {}
func (*ReqAuthCheckCerts) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ReqAuthCheckCerts) GetSig() []*Signature {
	if m != nil {
		return m.Sig
	}
	return nil
}

type ReplyAuthCheckCerts struct {
	Result bool `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *ReplyAuthCheckCerts) Reset()                    { *m = ReplyAuthCheckCerts{} }
func (m *ReplyAuthCheckCerts) String() string            { return proto.CompactTextString(m) }
func (*ReplyAuthCheckCerts) ProtoMessage()               {}
func (*ReplyAuthCheckCerts) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ReplyAuthCheckCerts) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*ReqAuthGetUser)(nil), "types.ReqAuthGetUser")
	proto.RegisterType((*ReplyAuthGetUser)(nil), "types.ReplyAuthGetUser")
	proto.RegisterType((*ReqAuthCheckCert)(nil), "types.ReqAuthCheckCert")
	proto.RegisterType((*ReplyAuthCheckCert)(nil), "types.ReplyAuthCheckCert")
	proto.RegisterType((*ReqAuthCheckCerts)(nil), "types.ReqAuthCheckCerts")
	proto.RegisterType((*ReplyAuthCheckCerts)(nil), "types.ReplyAuthCheckCerts")
}

func init() { proto.RegisterFile("authority.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x59, 0xab, 0x8b, 0x8e, 0xa2, 0xdd, 0x08, 0xb2, 0x78, 0x92, 0xe0, 0xc1, 0x83, 0xf6,
	0xa0, 0xa0, 0x5e, 0x65, 0x0f, 0xde, 0x23, 0xfe, 0x80, 0x58, 0x86, 0x36, 0xb4, 0x26, 0x35, 0x99,
	0x1c, 0xf2, 0xef, 0x25, 0x53, 0xb1, 0xd0, 0xa5, 0xb7, 0x97, 0xbc, 0xf7, 0xe6, 0x1b, 0x06, 0x2e,
	0x74, 0xa4, 0xd6, 0x79, 0x43, 0xa9, 0x1a, 0xbc, 0x23, 0x27, 0x8e, 0x28, 0x0d, 0x18, 0xae, 0x37,
	0xe4, 0xb5, 0x0d, 0xba, 0x26, 0xe3, 0xec, 0xe8, 0xc8, 0x5b, 0x38, 0x57, 0xf8, 0xf3, 0x16, 0xa9,
	0x7d, 0x47, 0xfa, 0x0c, 0xe8, 0x85, 0x80, 0x43, 0xab, 0xbf, 0x71, 0xbb, 0xba, 0x59, 0xdd, 0x9d,
	0x28, 0xd6, 0xf2, 0x15, 0x4a, 0x85, 0x43, 0x9f, 0x66, 0xb9, 0x1a, 0x3d, 0x71, 0xee, 0x4c, 0xb1,
	0x16, 0x25, 0x14, 0x1d, 0xa6, 0xed, 0x01, 0x7f, 0x65, 0x29, 0x9f, 0x73, 0x93, 0xe7, 0xef, 0x5a,
	0xac, 0xbb, 0x5d, 0x4e, 0x49, 0x28, 0x82, 0x69, 0xb8, 0x78, 0xfa, 0x58, 0x56, 0xbc, 0x5b, 0xf5,
	0x61, 0x1a, 0xab, 0x29, 0x7a, 0x54, 0xd9, 0x94, 0xf7, 0x20, 0xfe, 0x89, 0x53, 0xf3, 0x0a, 0xd6,
	0x1e, 0x43, 0xec, 0x47, 0xea, 0xb1, 0xfa, 0x7b, 0xc9, 0x17, 0xd8, 0xcc, 0x29, 0x61, 0xc2, 0x14,
	0xcb, 0x98, 0x07, 0xb8, 0xdc, 0xc7, 0x84, 0x25, 0xce, 0xd7, 0x9a, 0x8f, 0xf6, 0xf4, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0x28, 0x13, 0x17, 0xc2, 0x61, 0x01, 0x00, 0x00,
}
