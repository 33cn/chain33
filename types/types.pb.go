// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Config struct {
	Title           string      `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Loglevel        string      `protobuf:"bytes,2,opt,name=loglevel" json:"loglevel,omitempty"`
	LogConsoleLevel string      `protobuf:"bytes,10,opt,name=logConsoleLevel" json:"logConsoleLevel,omitempty"`
	LogFile         string      `protobuf:"bytes,9,opt,name=logFile" json:"logFile,omitempty"`
	Store           *Store      `protobuf:"bytes,3,opt,name=store" json:"store,omitempty"`
	LocalStore      *LocalStore `protobuf:"bytes,11,opt,name=localStore" json:"localStore,omitempty"`
	Consensus       *Consensus  `protobuf:"bytes,4,opt,name=consensus" json:"consensus,omitempty"`
	MemPool         *MemPool    `protobuf:"bytes,5,opt,name=memPool" json:"memPool,omitempty"`
	BlockChain      *BlockChain `protobuf:"bytes,6,opt,name=blockChain" json:"blockChain,omitempty"`
	Wallet          *Wallet     `protobuf:"bytes,7,opt,name=wallet" json:"wallet,omitempty"`
	P2P             *P2P        `protobuf:"bytes,8,opt,name=p2p" json:"p2p,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Config) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Config) GetLoglevel() string {
	if m != nil {
		return m.Loglevel
	}
	return ""
}

func (m *Config) GetLogConsoleLevel() string {
	if m != nil {
		return m.LogConsoleLevel
	}
	return ""
}

func (m *Config) GetLogFile() string {
	if m != nil {
		return m.LogFile
	}
	return ""
}

func (m *Config) GetStore() *Store {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *Config) GetLocalStore() *LocalStore {
	if m != nil {
		return m.LocalStore
	}
	return nil
}

func (m *Config) GetConsensus() *Consensus {
	if m != nil {
		return m.Consensus
	}
	return nil
}

func (m *Config) GetMemPool() *MemPool {
	if m != nil {
		return m.MemPool
	}
	return nil
}

func (m *Config) GetBlockChain() *BlockChain {
	if m != nil {
		return m.BlockChain
	}
	return nil
}

func (m *Config) GetWallet() *Wallet {
	if m != nil {
		return m.Wallet
	}
	return nil
}

func (m *Config) GetP2P() *P2P {
	if m != nil {
		return m.P2P
	}
	return nil
}

type MemPool struct {
	PoolCacheSize int64 `protobuf:"varint,1,opt,name=poolCacheSize" json:"poolCacheSize,omitempty"`
	MinTxFee      int64 `protobuf:"varint,2,opt,name=minTxFee" json:"minTxFee,omitempty"`
}

func (m *MemPool) Reset()                    { *m = MemPool{} }
func (m *MemPool) String() string            { return proto.CompactTextString(m) }
func (*MemPool) ProtoMessage()               {}
func (*MemPool) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *MemPool) GetPoolCacheSize() int64 {
	if m != nil {
		return m.PoolCacheSize
	}
	return 0
}

func (m *MemPool) GetMinTxFee() int64 {
	if m != nil {
		return m.MinTxFee
	}
	return 0
}

type MempoolSize struct {
	Size int64 `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
}

func (m *MempoolSize) Reset()                    { *m = MempoolSize{} }
func (m *MempoolSize) String() string            { return proto.CompactTextString(m) }
func (*MempoolSize) ProtoMessage()               {}
func (*MempoolSize) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *MempoolSize) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type Consensus struct {
	Name             string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Genesis          string `protobuf:"bytes,2,opt,name=genesis" json:"genesis,omitempty"`
	Minerstart       bool   `protobuf:"varint,3,opt,name=minerstart" json:"minerstart,omitempty"`
	GenesisBlockTime int64  `protobuf:"varint,4,opt,name=genesisBlockTime" json:"genesisBlockTime,omitempty"`
	HotkeyAddr       string `protobuf:"bytes,5,opt,name=hotkeyAddr" json:"hotkeyAddr,omitempty"`
}

func (m *Consensus) Reset()                    { *m = Consensus{} }
func (m *Consensus) String() string            { return proto.CompactTextString(m) }
func (*Consensus) ProtoMessage()               {}
func (*Consensus) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *Consensus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Consensus) GetGenesis() string {
	if m != nil {
		return m.Genesis
	}
	return ""
}

func (m *Consensus) GetMinerstart() bool {
	if m != nil {
		return m.Minerstart
	}
	return false
}

func (m *Consensus) GetGenesisBlockTime() int64 {
	if m != nil {
		return m.GenesisBlockTime
	}
	return 0
}

func (m *Consensus) GetHotkeyAddr() string {
	if m != nil {
		return m.HotkeyAddr
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "types.Config")
	proto.RegisterType((*MemPool)(nil), "types.MemPool")
	proto.RegisterType((*MempoolSize)(nil), "types.MempoolSize")
	proto.RegisterType((*Consensus)(nil), "types.Consensus")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x86, 0x55, 0xb2, 0x7e, 0xe4, 0x74, 0x83, 0x62, 0x71, 0x61, 0x55, 0x08, 0x8d, 0x08, 0xa4,
	0x8a, 0x8b, 0x4a, 0x94, 0x5f, 0x00, 0x91, 0x76, 0xc3, 0x26, 0x55, 0xde, 0x24, 0xae, 0xd3, 0xf4,
	0x90, 0x5a, 0x73, 0x7c, 0xa2, 0xd8, 0x7c, 0x8c, 0xff, 0x83, 0xf8, 0x9b, 0xc8, 0x27, 0x4e, 0xd6,
	0xc2, 0x9d, 0xdf, 0xe7, 0x3c, 0xb1, 0x1c, 0xbf, 0x86, 0xb9, 0x7f, 0x68, 0xd0, 0xad, 0x9b, 0x96,
	0x3c, 0x89, 0x31, 0x87, 0x65, 0xda, 0x6c, 0x9a, 0x8e, 0x2c, 0xcf, 0x7f, 0x14, 0xc6, 0xa0, 0x8f,
	0x69, 0xb1, 0x33, 0x54, 0xde, 0x97, 0x87, 0x42, 0xdb, 0x48, 0x66, 0xfb, 0x5d, 0xb7, 0xca, 0xfe,
	0x24, 0x30, 0xc9, 0xc9, 0x7e, 0xd5, 0x95, 0x78, 0x01, 0x63, 0xaf, 0xbd, 0x41, 0x39, 0xba, 0x1c,
	0xad, 0x52, 0xd5, 0x05, 0xb1, 0x84, 0x99, 0xa1, 0xca, 0xe0, 0x77, 0x34, 0xf2, 0x09, 0x0f, 0x86,
	0x2c, 0x56, 0xf0, 0xcc, 0x50, 0x95, 0x93, 0x75, 0x64, 0xf0, 0x9a, 0x15, 0x60, 0xe5, 0x5f, 0x2c,
	0x24, 0x4c, 0x0d, 0x55, 0x57, 0xda, 0xa0, 0x4c, 0xd9, 0xe8, 0xa3, 0xc8, 0x60, 0xec, 0x3c, 0xb5,
	0x28, 0x93, 0xcb, 0xd1, 0x6a, 0xbe, 0x39, 0x5f, 0x77, 0x7f, 0x76, 0x1b, 0x98, 0xea, 0x46, 0xe2,
	0x3d, 0x80, 0xa1, 0xb2, 0x30, 0x0c, 0xe5, 0x9c, 0xc5, 0xe7, 0x51, 0xbc, 0x1e, 0x06, 0xea, 0x48,
	0x12, 0x6b, 0x48, 0x4b, 0xb2, 0x0e, 0xad, 0xfb, 0xe6, 0xe4, 0x19, 0x7f, 0xb1, 0x88, 0x5f, 0xe4,
	0x3d, 0x57, 0x8f, 0x8a, 0x58, 0xc1, 0xb4, 0xc6, 0x7a, 0x4b, 0x64, 0xe4, 0x98, 0xed, 0xa7, 0xd1,
	0xbe, 0xe9, 0xa8, 0xea, 0xc7, 0xe1, 0x30, 0x7c, 0x9f, 0x79, 0xb8, 0x4f, 0x39, 0x39, 0x39, 0xcc,
	0xa7, 0x61, 0xa0, 0x8e, 0x24, 0xf1, 0x16, 0x26, 0x5d, 0x21, 0x72, 0xca, 0xfa, 0x45, 0xd4, 0xbf,
	0x30, 0x54, 0x71, 0x28, 0x5e, 0x42, 0xd2, 0x6c, 0x1a, 0x39, 0x63, 0x07, 0xa2, 0xb3, 0xdd, 0x6c,
	0x55, 0xc0, 0xd9, 0x67, 0x98, 0xc6, 0xb3, 0x88, 0x37, 0x70, 0xd1, 0x10, 0x99, 0xbc, 0x28, 0x0f,
	0x78, 0xab, 0x7f, 0x75, 0x8d, 0x25, 0xea, 0x14, 0x86, 0xe6, 0x6a, 0x6d, 0xef, 0x7e, 0x5e, 0x21,
	0x72, 0x73, 0x89, 0x1a, 0x72, 0xf6, 0x1a, 0xe6, 0x37, 0x58, 0x07, 0x9f, 0x55, 0x01, 0x67, 0xee,
	0x71, 0x1f, 0x5e, 0x67, 0xbf, 0x47, 0x90, 0x0e, 0x57, 0x15, 0x0c, 0x5b, 0xd4, 0xfd, 0xdb, 0xe0,
	0x75, 0x28, 0xb5, 0x42, 0x8b, 0x4e, 0xbb, 0xf8, 0x32, 0xfa, 0x28, 0x5e, 0x01, 0xd4, 0xda, 0x62,
	0xeb, 0x7c, 0xd1, 0x7a, 0x6e, 0x76, 0xa6, 0x8e, 0x88, 0x78, 0x07, 0x8b, 0xa8, 0xf2, 0x8d, 0xdd,
	0xe9, 0x1a, 0xb9, 0xa4, 0x44, 0xfd, 0xc7, 0xc3, 0x5e, 0x07, 0xf2, 0xf7, 0xf8, 0xf0, 0x71, 0xbf,
	0x6f, 0xb9, 0x9c, 0x54, 0x1d, 0x91, 0xdd, 0x84, 0x1f, 0xf2, 0x87, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x9b, 0x0e, 0x88, 0xb1, 0x13, 0x03, 0x00, 0x00,
}
