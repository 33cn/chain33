// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Reply struct {
	IsOk bool   `protobuf:"varint,1,opt,name=isOk" json:"isOk,omitempty"`
	Msg  []byte `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Reply) GetIsOk() bool {
	if m != nil {
		return m.IsOk
	}
	return false
}

func (m *Reply) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type ReqString struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *ReqString) Reset()                    { *m = ReqString{} }
func (m *ReqString) String() string            { return proto.CompactTextString(m) }
func (*ReqString) ProtoMessage()               {}
func (*ReqString) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ReqString) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReplyString struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *ReplyString) Reset()                    { *m = ReplyString{} }
func (m *ReplyString) String() string            { return proto.CompactTextString(m) }
func (*ReplyString) ProtoMessage()               {}
func (*ReplyString) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ReplyString) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReplyStrings struct {
	Datas []string `protobuf:"bytes,1,rep,name=datas" json:"datas,omitempty"`
}

func (m *ReplyStrings) Reset()                    { *m = ReplyStrings{} }
func (m *ReplyStrings) String() string            { return proto.CompactTextString(m) }
func (*ReplyStrings) ProtoMessage()               {}
func (*ReplyStrings) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ReplyStrings) GetDatas() []string {
	if m != nil {
		return m.Datas
	}
	return nil
}

type ReqInt struct {
	Height int64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *ReqInt) Reset()                    { *m = ReqInt{} }
func (m *ReqInt) String() string            { return proto.CompactTextString(m) }
func (*ReqInt) ProtoMessage()               {}
func (*ReqInt) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ReqInt) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Int64 struct {
	Data int64 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *Int64) Reset()                    { *m = Int64{} }
func (m *Int64) String() string            { return proto.CompactTextString(m) }
func (*Int64) ProtoMessage()               {}
func (*Int64) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Int64) GetData() int64 {
	if m != nil {
		return m.Data
	}
	return 0
}

type ReqHash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *ReqHash) Reset()                    { *m = ReqHash{} }
func (m *ReqHash) String() string            { return proto.CompactTextString(m) }
func (*ReqHash) ProtoMessage()               {}
func (*ReqHash) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ReqHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type ReplyHash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *ReplyHash) Reset()                    { *m = ReplyHash{} }
func (m *ReplyHash) String() string            { return proto.CompactTextString(m) }
func (*ReplyHash) ProtoMessage()               {}
func (*ReplyHash) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *ReplyHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type ReqNil struct {
}

func (m *ReqNil) Reset()                    { *m = ReqNil{} }
func (m *ReqNil) String() string            { return proto.CompactTextString(m) }
func (*ReqNil) ProtoMessage()               {}
func (*ReqNil) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

type ReqHashes struct {
	Hashes [][]byte `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (m *ReqHashes) Reset()                    { *m = ReqHashes{} }
func (m *ReqHashes) String() string            { return proto.CompactTextString(m) }
func (*ReqHashes) ProtoMessage()               {}
func (*ReqHashes) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *ReqHashes) GetHashes() [][]byte {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type ReplyHashes struct {
	Hashes [][]byte `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (m *ReplyHashes) Reset()                    { *m = ReplyHashes{} }
func (m *ReplyHashes) String() string            { return proto.CompactTextString(m) }
func (*ReplyHashes) ProtoMessage()               {}
func (*ReplyHashes) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *ReplyHashes) GetHashes() [][]byte {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type KeyValue struct {
	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *KeyValue) Reset()                    { *m = KeyValue{} }
func (m *KeyValue) String() string            { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()               {}
func (*KeyValue) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type TxHash struct {
	Hash string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
}

func (m *TxHash) Reset()                    { *m = TxHash{} }
func (m *TxHash) String() string            { return proto.CompactTextString(m) }
func (*TxHash) ProtoMessage()               {}
func (*TxHash) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *TxHash) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type TimeStatus struct {
	NtpTime   string `protobuf:"bytes,1,opt,name=ntpTime" json:"ntpTime,omitempty"`
	LocalTime string `protobuf:"bytes,2,opt,name=localTime" json:"localTime,omitempty"`
	Diff      int64  `protobuf:"varint,3,opt,name=diff" json:"diff,omitempty"`
}

func (m *TimeStatus) Reset()                    { *m = TimeStatus{} }
func (m *TimeStatus) String() string            { return proto.CompactTextString(m) }
func (*TimeStatus) ProtoMessage()               {}
func (*TimeStatus) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *TimeStatus) GetNtpTime() string {
	if m != nil {
		return m.NtpTime
	}
	return ""
}

func (m *TimeStatus) GetLocalTime() string {
	if m != nil {
		return m.LocalTime
	}
	return ""
}

func (m *TimeStatus) GetDiff() int64 {
	if m != nil {
		return m.Diff
	}
	return 0
}

type ReqKey struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *ReqKey) Reset()                    { *m = ReqKey{} }
func (m *ReqKey) String() string            { return proto.CompactTextString(m) }
func (*ReqKey) ProtoMessage()               {}
func (*ReqKey) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *ReqKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type PrunData struct {
	// 对应keyHash下的区块高度
	Height int64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	// hash+prefix的长度
	Lenth int32 `protobuf:"varint,2,opt,name=lenth" json:"lenth,omitempty"`
}

func (m *PrunData) Reset()                    { *m = PrunData{} }
func (m *PrunData) String() string            { return proto.CompactTextString(m) }
func (*PrunData) ProtoMessage()               {}
func (*PrunData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *PrunData) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PrunData) GetLenth() int32 {
	if m != nil {
		return m.Lenth
	}
	return 0
}

func init() {
	proto.RegisterType((*Reply)(nil), "types.Reply")
	proto.RegisterType((*ReqString)(nil), "types.ReqString")
	proto.RegisterType((*ReplyString)(nil), "types.ReplyString")
	proto.RegisterType((*ReplyStrings)(nil), "types.ReplyStrings")
	proto.RegisterType((*ReqInt)(nil), "types.ReqInt")
	proto.RegisterType((*Int64)(nil), "types.Int64")
	proto.RegisterType((*ReqHash)(nil), "types.ReqHash")
	proto.RegisterType((*ReplyHash)(nil), "types.ReplyHash")
	proto.RegisterType((*ReqNil)(nil), "types.ReqNil")
	proto.RegisterType((*ReqHashes)(nil), "types.ReqHashes")
	proto.RegisterType((*ReplyHashes)(nil), "types.ReplyHashes")
	proto.RegisterType((*KeyValue)(nil), "types.KeyValue")
	proto.RegisterType((*TxHash)(nil), "types.TxHash")
	proto.RegisterType((*TimeStatus)(nil), "types.TimeStatus")
	proto.RegisterType((*ReqKey)(nil), "types.ReqKey")
	proto.RegisterType((*PrunData)(nil), "types.PrunData")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x5f, 0xeb, 0xd3, 0x30,
	0x14, 0xa5, 0xbf, 0xda, 0xae, 0xbd, 0xf6, 0x41, 0x82, 0x48, 0xd1, 0x89, 0x35, 0x4e, 0xd8, 0x8b,
	0x13, 0xac, 0x88, 0xcf, 0xe2, 0x83, 0x63, 0xa0, 0x92, 0x0d, 0x11, 0xdf, 0xb2, 0x9a, 0xb6, 0x61,
	0x69, 0xda, 0x2d, 0x99, 0xd8, 0x6f, 0x2f, 0xb9, 0x8d, 0xff, 0x18, 0xd3, 0xa7, 0x9e, 0x73, 0xef,
	0x49, 0xee, 0xb9, 0xa7, 0x81, 0xac, 0xea, 0xbb, 0xae, 0xd7, 0xab, 0xe1, 0xd4, 0xdb, 0x9e, 0x44,
	0x76, 0x1c, 0x84, 0xa1, 0xcf, 0x20, 0x62, 0x62, 0x50, 0x23, 0x21, 0x70, 0x4b, 0x9a, 0x0f, 0x87,
	0x3c, 0x28, 0x82, 0x65, 0xc2, 0x10, 0x93, 0x3b, 0x10, 0x76, 0xa6, 0xc9, 0x6f, 0x8a, 0x60, 0x99,
	0x31, 0x07, 0xe9, 0x23, 0x48, 0x99, 0x38, 0x6e, 0xed, 0x49, 0xea, 0xc6, 0x1d, 0xf9, 0xca, 0x2d,
	0xc7, 0x23, 0x29, 0x43, 0x4c, 0x1f, 0xc3, 0x6d, 0xbc, 0xef, 0x1f, 0x92, 0x05, 0x64, 0x7f, 0x48,
	0x0c, 0xb9, 0x0b, 0x91, 0xab, 0x9b, 0x3c, 0x28, 0xc2, 0x65, 0xca, 0x26, 0x42, 0x0b, 0x88, 0x99,
	0x38, 0xae, 0xb5, 0x25, 0xf7, 0x20, 0x6e, 0x85, 0x6c, 0x5a, 0x8b, 0xb7, 0x84, 0xcc, 0x33, 0xfa,
	0x00, 0xa2, 0xb5, 0xb6, 0xaf, 0x5e, 0xfe, 0x35, 0x24, 0xf4, 0x43, 0x1e, 0xc2, 0x8c, 0x89, 0xe3,
	0x3b, 0x6e, 0x5a, 0xd7, 0x6e, 0xb9, 0x69, 0xb1, 0x9d, 0x31, 0xc4, 0xd3, 0x1e, 0x83, 0x1a, 0xaf,
	0x0a, 0x12, 0x1c, 0xff, 0x5e, 0x2a, 0xfa, 0x04, 0x57, 0x76, 0x42, 0x61, 0xd0, 0x0b, 0x22, 0x34,
	0x9b, 0x31, 0xcf, 0xe8, 0x53, 0xbf, 0xf6, 0x7f, 0x64, 0x2f, 0x20, 0xd9, 0x88, 0xf1, 0x13, 0x57,
	0x67, 0xe1, 0xc2, 0x3d, 0x88, 0xd1, 0x0f, 0x75, 0xd0, 0x05, 0xf1, 0xcd, 0xb5, 0x7c, 0xe0, 0x13,
	0xa1, 0x73, 0x88, 0x77, 0xdf, 0x2f, 0x7c, 0xa6, 0xde, 0xe7, 0x67, 0x80, 0x9d, 0xec, 0xc4, 0xd6,
	0x72, 0x7b, 0x36, 0x24, 0x87, 0x99, 0xb6, 0x83, 0x2b, 0x78, 0xd1, 0x4f, 0x4a, 0xe6, 0x90, 0xaa,
	0xbe, 0xe2, 0x0a, 0x7b, 0x37, 0xd8, 0xfb, 0x5d, 0xc0, 0x04, 0x65, 0x5d, 0xe7, 0xa1, 0x4f, 0x50,
	0xd6, 0x35, 0xbd, 0x8f, 0x09, 0x6c, 0xc4, 0x78, 0xe9, 0x94, 0xbe, 0x86, 0xe4, 0xe3, 0xe9, 0xac,
	0xdf, 0x72, 0xcb, 0xaf, 0xfd, 0x1e, 0xb7, 0x8d, 0x12, 0xda, 0xb6, 0x38, 0x2d, 0x62, 0x13, 0x79,
	0xb3, 0xf8, 0x42, 0x1b, 0x69, 0x15, 0xdf, 0xaf, 0xca, 0x72, 0x55, 0xe9, 0xe7, 0x55, 0xcb, 0xa5,
	0x2e, 0xcb, 0x5f, 0x5f, 0x7c, 0x95, 0xfb, 0x18, 0xdf, 0x68, 0xf9, 0x23, 0x00, 0x00, 0xff, 0xff,
	0x8e, 0x08, 0xdf, 0x06, 0xb3, 0x02, 0x00, 0x00,
}
