syntax = "proto3";

package types;

message Trade {
	oneof value {
		TradeForSell              tokensell            = 1;
		TradeForBuy               tokenbuy             = 2;
		TradeForRevokeSell        tokenrevokesell      = 3;
		TradeForBuyLimit          tokenbuylimit        = 5;
		TradeForSellMarket        tokensellmarket      = 6;
		TradeForRevokeBuy         tokenrevokebuy       = 7;
	}
	int32 ty = 4;
}

//创建众筹交易,确定一手交易的token的数量，单价以及总共有多少手token可以进行众筹
message TradeForSell {
	string tokensymbol          = 1;
	//每一手出售的token的数量
	int64 amountperboardlot     = 2;
	//起卖手数,必须达到这个门槛才允许进行交易
	int64 minboardlot           = 3;
	//每一手token的价格
	int64 priceperboardlot      = 4;
	int64 totalboardlot         = 5;
	//此次出售的起始时间，如果非众筹则可以忽略此时间
	int64  starttime            = 6;
	int64  stoptime             = 7;
	bool   crowdfund            = 8;
}

message SellOrder {
	string tokensymbol          = 1;
	string address              = 2;
	//每一手出售的token的数量
	int64 amountperboardlot     = 3;
    int64 minboardlot           = 4;
	//每一手token的价格
	int64 priceperboardlot      = 5;
	int64 totalboardlot         = 6;
	int64 soldboardlot          = 7;
	//此次出售的起始时间，如果非众筹则可以忽略此时间
	int64  starttime            = 8;
	int64  stoptime             = 9;
	bool   crowdfund            = 10;
	//此处使用tx的hash来指定
	string  sellid              = 11;
	int32  status               = 12;
	int64  height               = 13;
}

message SellOrderReceipt {
	string sellid = 1;
}

message ReqAddrTokens{
	string addr           = 1;
	int32  status         = 2;
	repeated string token = 3;
	int32 pageNumber      = 4;
	int32 pageSize        = 5;
}

message ReplySellOrders {
	repeated SellOrder selloders = 1;
}

//购买者发起交易用来购买token持有者之前挂单出售的token
//其中的hash为token出售者发起出售交易的hash
message TradeForBuy {
	string sellid      = 1;
	int64 boardlotcnt  = 2;
}

//允许token的持有者撤销之前未成交出售token的挂单
message TradeForRevokeSell {
	string sellid      = 1;
}

// 限价买单构造请求
message TradeForBuyLimit {
	string tokenSymbol          = 1;
	int64 amountPerBoardlot     = 2;
	int64 minBoardlot           = 3;
	int64 pricePerBoardlot      = 4;
	int64 totalBoardlot         = 5;
}

// 限价买单数据库记录
message BuyLimitOrder {
	string tokenSymbol          = 1;
	string address              = 2;
	int64 amountPerBoardlot     = 3;
    int64 minBoardlot           = 4;
	int64 pricePerBoardlot      = 5;
	int64 totalBoardlot         = 6;
	int64 boughtBoardlot          = 7;
	string  buyid               = 8;
	int32  status               = 9;
	int64  height               = 10;
}

// 限价买单请求回执
message BuyLimitOrderReceipt {
	string buyid = 1;
}

// 现价卖单
message TradeForSellMarket {
    string buyid = 1;
    int64 boardlotCnt = 2;
}

// 撤销买单
message TradeForRevokeBuy {
    string buyid = 1;
}

message ReceiptBuyBase {
	string tokenSymbol          = 1;
	string owner                = 2;
    string amountPerBoardlot    = 3;
	int64 minBoardlot           = 4;
    string pricePerBoardlot     = 5;
	int64 totalBoardlot         = 6;
	int64 boughtBoardlot        = 7;
	string  buyid               = 8;
    string  status              = 9;
    string  sellid              = 10;
    string  txhash              = 11;
    int64 height                = 12;
}

message ReceiptTradeBuyLimit {
	ReceiptBuyBase base = 1;
}

message ReceiptTradeBuyRevoke {
	ReceiptBuyBase base = 1;
}

message ReceiptTradeBase {
	string tokensymbol          = 1;
	string owner                = 2;
	//每一手出售的token的数量
    string amountperboardlot    = 3;
	int64 minboardlot           = 4;
	//每一手token的价格
    string priceperboardlot     = 5;
	int64 totalboardlot         = 6;
	int64 soldboardlot          = 7;
	//此次出售的起始时间，如果非众筹则可以忽略此时间
	int64  starttime            = 8;
	int64  stoptime             = 9;
	bool   crowdfund            = 10;
	//此处使用tx的hash来指定
	string  sellid              = 11;
    string  status              = 12;
    // buyid
    string  buyid               = 13;
    string  txhash              = 14;
    int64 height                = 15;
}

message ReceiptTradeSell {
	ReceiptTradeBase base = 1;
}

message ReceiptTradeBuy {
	string buyeraddr             = 1;
	string sellid                = 2;
	string token                 = 3;
	int64 boardlotcnt            = 4;
	string amountperboardlot     = 5;
	string priceperboardlot      = 6;
    string buytxhash             = 7;
}

message ReceiptTradeRevoke {
	ReceiptTradeBase base = 1;
}

message TradeBuyDone {
	string token                 = 1;
	int64  boardlotcnt           = 2;
	string amountperboardlot     = 3;
    string priceperboardlot      = 4;
   	string buytxhash             = 5;
   	int64  height                = 6;
}

message ReplyTradeBuyOrders {
	repeated TradeBuyDone tradebuydones = 1;
}

message ReplyBuyLimitOrders {
	repeated BuyLimitOrder buyOrders = 1;
}

// 获取Token未完成卖单的交易列表
// 	 fromSellId : 第一次传参为空，获取卖单单价最低的列表。 当要获得下一页时， 传当前页最后一个；当要获得上一页时， 传当前页第一个。
// 	 count :获取交易列表的个数。
// 	 direction :查找方式；0，上一页；1，下一页。  越靠后的也单价越贵
message ReqTokenSellOrder {
	string tokenSymbol = 1;
	string fromSellId  = 2;
	int32 count        = 3;
	int32 direction    = 4;
	int32 status       = 5;
}

message ReqTokenBuyLimitOrder {
	string tokenSymbol = 1;
	string fromBuyId   = 2;
	int32 count        = 3;
	int32 direction    = 4;
	int32 status       = 5;
}

message ReplyBuyOrder {
	string tokenSymbol          = 1;
	string owner                = 2;
    string amountPerBoardlot    = 3;
	int64 minBoardlot           = 4;
    string pricePerBoardlot     = 5;
	int64 totalBoardlot         = 6;
	int64 boughtBoardlot        = 7;
	string  buyid               = 8;
    string  status              = 9;
    string  sellid              = 10;
    string  txhash              = 11;
    int64 height                = 12;
    string key                  = 13;
}

message ReplySellOrder {
	string tokenSymbol          = 1;
	string owner                = 2;
    string amountPerBoardlot    = 3;
	int64 minBoardlot           = 4;
    string pricePerBoardlot     = 5;
	int64 totalBoardlot         = 6;
	int64 boughtBoardlot        = 7;
	string  buyid               = 8;
    string  status              = 9;
    string  sellid              = 10;
    string  txhash              = 11;
    int64 height                = 12;
    string key                  = 13;
}

