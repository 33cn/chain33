// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	account.proto
	blockchain.proto
	common.proto
	db.proto
	executor.proto
	p2p.proto
	rpc.proto
	transaction.proto
	types.proto
	wallet.proto

It has these top-level messages:
	Accounts
	Account
	ReceiptExecAccount
	Header
	Block
	Blocks
	TransactionDetail
	TransactionDetails
	BlockDetails
	Headers
	BlockOverview
	ReceiptLog
	Receipt
	ReceiptData
	BlockDetail
	Receipts
	ReceiptCheckTxList
	ChainStatus
	BlockChain
	Reply
	KeyValue
	Int64
	LeafNode
	InnerNode
	MAVLProof
	StoreNode
	LocalDBSet
	LocalDBList
	LocalDBGet
	LocalReplyValue
	LocalStore
	StoreSet
	StoreGet
	StoreReplyValue
	Store
	Genesis
	CoinsAction
	CoinsGenesis
	CoinsTransfer
	CoinsWithdraw
	Hashlock
	HashlockAction
	HashlockLock
	HashlockUnlock
	HashlockSend
	Ticket
	TicketAction
	TicketMiner
	TicketBind
	TicketOpen
	TicketGenesis
	TicketClose
	TicketList
	TicketInfos
	ReplyTicketList
	ReplyWalletTickets
	ReceiptTicket
	ReceiptTicketBind
	ExecTxList
	ReqString
	ReplyString
	ReplyStrings
	P2P
	P2PGetPeerInfo
	P2PPeerInfo
	P2PVersion
	P2PVerAck
	P2PPing
	P2PPong
	P2PGetAddr
	P2PAddr
	P2PExternalInfo
	P2PGetBlocks
	P2PGetMempool
	P2PInv
	Inventory
	P2PGetData
	P2PTx
	P2PBlock
	BroadCastData
	P2PGetHeaders
	P2PHeaders
	InvData
	InvDatas
	ReqNil
	GenSeedLang
	GetSeedByPw
	SaveSeedByPw
	ReplySeed
	ReqBalance
	ReplyBlockHeight
	ReqTxList
	ReplyTxList
	TxHashList
	TxResult
	ReplyTxInfos
	MinerFlag
	ReqNewAccount
	ReqWalletTransactionList
	ReqWalletImportPrivKey
	ReqWalletSendToAddress
	ReqWalletSetFee
	ReqWalletSetLabel
	ReqWalletMergeBalance
	ReplyHashes
	ReqWalletSetPasswd
	WalletUnLock
	Query
	ReqHash
	HexTx
	ReqInt
	ReqAddr
	ReqHashes
	ReplyHash
	AddrOverview
	ReplyTxInfo
	ReqBlocks
	Peer
	PeerList
	CreateTx
	UnsignTx
	SignedTx
	Transaction
	Signature
	Config
	MemPool
	MempoolSize
	Consensus
	Wallet
	WalletTxDetail
	WalletTxDetails
	WalletAccountStore
	WalletPwHash
	WalletStatus
	WalletAccounts
	WalletAccount
	ReceiptBalance
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// currency = 0 -> origin account
type Accounts struct {
	Acc []*Account `protobuf:"bytes,1,rep,name=acc" json:"acc,omitempty"`
}

func (m *Accounts) Reset()                    { *m = Accounts{} }
func (m *Accounts) String() string            { return proto.CompactTextString(m) }
func (*Accounts) ProtoMessage()               {}
func (*Accounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Accounts) GetAcc() []*Account {
	if m != nil {
		return m.Acc
	}
	return nil
}

type Account struct {
	Currency int32  `protobuf:"varint,1,opt,name=currency" json:"currency,omitempty"`
	Balance  int64  `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
	Frozen   int64  `protobuf:"varint,3,opt,name=frozen" json:"frozen,omitempty"`
	Addr     string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Account) GetCurrency() int32 {
	if m != nil {
		return m.Currency
	}
	return 0
}

func (m *Account) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetFrozen() int64 {
	if m != nil {
		return m.Frozen
	}
	return 0
}

func (m *Account) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReceiptExecAccount struct {
	ExecAddr string   `protobuf:"bytes,1,opt,name=execAddr" json:"execAddr,omitempty"`
	Prev     *Account `protobuf:"bytes,2,opt,name=prev" json:"prev,omitempty"`
	Current  *Account `protobuf:"bytes,3,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptExecAccount) Reset()                    { *m = ReceiptExecAccount{} }
func (m *ReceiptExecAccount) String() string            { return proto.CompactTextString(m) }
func (*ReceiptExecAccount) ProtoMessage()               {}
func (*ReceiptExecAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReceiptExecAccount) GetExecAddr() string {
	if m != nil {
		return m.ExecAddr
	}
	return ""
}

func (m *ReceiptExecAccount) GetPrev() *Account {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptExecAccount) GetCurrent() *Account {
	if m != nil {
		return m.Current
	}
	return nil
}

func init() {
	proto.RegisterType((*Accounts)(nil), "types.Accounts")
	proto.RegisterType((*Account)(nil), "types.Account")
	proto.RegisterType((*ReceiptExecAccount)(nil), "types.ReceiptExecAccount")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x40, 0x89, 0xd9, 0xbb, 0x3d, 0x47, 0xb4, 0x98, 0x42, 0x82, 0x55, 0x48, 0x95, 0x42, 0xb6,
	0xd0, 0x2f, 0xb0, 0xf0, 0x07, 0xf2, 0x07, 0xb9, 0xb9, 0x11, 0x44, 0x49, 0x42, 0x2e, 0x27, 0x9e,
	0x85, 0xdf, 0x2e, 0x3b, 0xb7, 0xbb, 0x08, 0xdb, 0xe5, 0xe5, 0x3d, 0x98, 0x49, 0xe0, 0x36, 0x12,
	0xe5, 0x53, 0x6a, 0x43, 0xa9, 0xb9, 0x65, 0xdc, 0xb4, 0x73, 0xe1, 0xa3, 0x7b, 0x84, 0xdd, 0xcb,
	0xe5, 0xfe, 0x88, 0x16, 0x74, 0x24, 0x32, 0xca, 0x6a, 0x7f, 0xf3, 0x74, 0x37, 0x48, 0x30, 0x4c,
	0x36, 0x8c, 0xca, 0x7d, 0x40, 0x3f, 0x31, 0x3e, 0xc0, 0x8e, 0x4e, 0xb5, 0x72, 0xa2, 0xb3, 0x51,
	0x56, 0xf9, 0x4d, 0x58, 0x18, 0x0d, 0xf4, 0xfb, 0xf8, 0x19, 0x13, 0xb1, 0xb9, 0xb2, 0xca, 0xeb,
	0x30, 0x23, 0xde, 0xc3, 0xf6, 0xad, 0xe6, 0x1f, 0x4e, 0x46, 0x8b, 0x98, 0x08, 0x11, 0xba, 0x78,
	0x38, 0x54, 0xd3, 0x59, 0xe5, 0xaf, 0x83, 0x9c, 0xdd, 0x2f, 0x60, 0x60, 0xe2, 0xf7, 0xd2, 0x5e,
	0xbf, 0x99, 0xfe, 0xcd, 0xe5, 0x11, 0xc7, 0x5a, 0x49, 0xbd, 0x30, 0x3a, 0xe8, 0x4a, 0xe5, 0x2f,
	0x19, 0xba, 0x7e, 0x81, 0x38, 0xf4, 0xd0, 0x5f, 0xf6, 0x6c, 0xb2, 0xc2, 0x3a, 0x9b, 0xf5, 0x7e,
	0x2b, 0x1f, 0xf5, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x71, 0x2f, 0x39, 0xea, 0x39, 0x01, 0x00,
	0x00,
}
