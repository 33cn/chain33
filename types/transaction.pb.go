// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.9.1
// source: transaction.proto

package types

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// assert transfer struct
type AssetsGenesis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount        int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ReturnAddress string `protobuf:"bytes,3,opt,name=returnAddress,proto3" json:"returnAddress,omitempty"`
}

func (x *AssetsGenesis) Reset() {
	*x = AssetsGenesis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsGenesis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsGenesis) ProtoMessage() {}

func (x *AssetsGenesis) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsGenesis.ProtoReflect.Descriptor instead.
func (*AssetsGenesis) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *AssetsGenesis) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetsGenesis) GetReturnAddress() string {
	if x != nil {
		return x.ReturnAddress
	}
	return ""
}

type AssetsTransferToExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cointoken string `protobuf:"bytes,1,opt,name=cointoken,proto3" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Note      []byte `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	ExecName  string `protobuf:"bytes,4,opt,name=execName,proto3" json:"execName,omitempty"`
	To        string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AssetsTransferToExec) Reset() {
	*x = AssetsTransferToExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsTransferToExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsTransferToExec) ProtoMessage() {}

func (x *AssetsTransferToExec) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsTransferToExec.ProtoReflect.Descriptor instead.
func (*AssetsTransferToExec) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *AssetsTransferToExec) GetCointoken() string {
	if x != nil {
		return x.Cointoken
	}
	return ""
}

func (x *AssetsTransferToExec) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetsTransferToExec) GetNote() []byte {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *AssetsTransferToExec) GetExecName() string {
	if x != nil {
		return x.ExecName
	}
	return ""
}

func (x *AssetsTransferToExec) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type AssetsWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cointoken string `protobuf:"bytes,1,opt,name=cointoken,proto3" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Note      []byte `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	ExecName  string `protobuf:"bytes,4,opt,name=execName,proto3" json:"execName,omitempty"`
	To        string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AssetsWithdraw) Reset() {
	*x = AssetsWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsWithdraw) ProtoMessage() {}

func (x *AssetsWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsWithdraw.ProtoReflect.Descriptor instead.
func (*AssetsWithdraw) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *AssetsWithdraw) GetCointoken() string {
	if x != nil {
		return x.Cointoken
	}
	return ""
}

func (x *AssetsWithdraw) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetsWithdraw) GetNote() []byte {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *AssetsWithdraw) GetExecName() string {
	if x != nil {
		return x.ExecName
	}
	return ""
}

func (x *AssetsWithdraw) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type AssetsTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cointoken string `protobuf:"bytes,1,opt,name=cointoken,proto3" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Note      []byte `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AssetsTransfer) Reset() {
	*x = AssetsTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsTransfer) ProtoMessage() {}

func (x *AssetsTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsTransfer.ProtoReflect.Descriptor instead.
func (*AssetsTransfer) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *AssetsTransfer) GetCointoken() string {
	if x != nil {
		return x.Cointoken
	}
	return ""
}

func (x *AssetsTransfer) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetsTransfer) GetNote() []byte {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *AssetsTransfer) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec   string `protobuf:"bytes,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *Asset) GetExec() string {
	if x != nil {
		return x.Exec
	}
	return ""
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Asset) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To          string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount      int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee         int64  `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	Note        []byte `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	IsWithdraw  bool   `protobuf:"varint,5,opt,name=isWithdraw,proto3" json:"isWithdraw,omitempty"`
	IsToken     bool   `protobuf:"varint,6,opt,name=isToken,proto3" json:"isToken,omitempty"`
	TokenSymbol string `protobuf:"bytes,7,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	ExecName    string `protobuf:"bytes,8,opt,name=execName,proto3" json:"execName,omitempty"`
	Execer      string `protobuf:"bytes,9,opt,name=execer,proto3" json:"execer,omitempty"`
}

func (x *CreateTx) Reset() {
	*x = CreateTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTx) ProtoMessage() {}

func (x *CreateTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTx.ProtoReflect.Descriptor instead.
func (*CreateTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTx) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreateTx) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateTx) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *CreateTx) GetNote() []byte {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *CreateTx) GetIsWithdraw() bool {
	if x != nil {
		return x.IsWithdraw
	}
	return false
}

func (x *CreateTx) GetIsToken() bool {
	if x != nil {
		return x.IsToken
	}
	return false
}

func (x *CreateTx) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *CreateTx) GetExecName() string {
	if x != nil {
		return x.ExecName
	}
	return ""
}

func (x *CreateTx) GetExecer() string {
	if x != nil {
		return x.Execer
	}
	return ""
}

type ReWriteRawTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx string `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	// bytes  execer = 2;
	To     string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Expire string `protobuf:"bytes,4,opt,name=expire,proto3" json:"expire,omitempty"`
	Fee    int64  `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Index  int32  `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReWriteRawTx) Reset() {
	*x = ReWriteRawTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReWriteRawTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReWriteRawTx) ProtoMessage() {}

func (x *ReWriteRawTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReWriteRawTx.ProtoReflect.Descriptor instead.
func (*ReWriteRawTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *ReWriteRawTx) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *ReWriteRawTx) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReWriteRawTx) GetExpire() string {
	if x != nil {
		return x.Expire
	}
	return ""
}

func (x *ReWriteRawTx) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *ReWriteRawTx) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type CreateTransactionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []string `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *CreateTransactionGroup) Reset() {
	*x = CreateTransactionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionGroup) ProtoMessage() {}

func (x *CreateTransactionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionGroup.ProtoReflect.Descriptor instead.
func (*CreateTransactionGroup) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTransactionGroup) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

type UnsignTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UnsignTx) Reset() {
	*x = UnsignTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsignTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignTx) ProtoMessage() {}

func (x *UnsignTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignTx.ProtoReflect.Descriptor instead.
func (*UnsignTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *UnsignTx) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 支持构造多笔nobalance的交易 payAddr 可以支持 1. 地址 2. 私钥
type NoBalanceTxs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHexs  []string `protobuf:"bytes,1,rep,name=txHexs,proto3" json:"txHexs,omitempty"`
	PayAddr string   `protobuf:"bytes,2,opt,name=payAddr,proto3" json:"payAddr,omitempty"`
	Privkey string   `protobuf:"bytes,3,opt,name=privkey,proto3" json:"privkey,omitempty"`
	Expire  string   `protobuf:"bytes,4,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *NoBalanceTxs) Reset() {
	*x = NoBalanceTxs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoBalanceTxs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoBalanceTxs) ProtoMessage() {}

func (x *NoBalanceTxs) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoBalanceTxs.ProtoReflect.Descriptor instead.
func (*NoBalanceTxs) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *NoBalanceTxs) GetTxHexs() []string {
	if x != nil {
		return x.TxHexs
	}
	return nil
}

func (x *NoBalanceTxs) GetPayAddr() string {
	if x != nil {
		return x.PayAddr
	}
	return ""
}

func (x *NoBalanceTxs) GetPrivkey() string {
	if x != nil {
		return x.Privkey
	}
	return ""
}

func (x *NoBalanceTxs) GetExpire() string {
	if x != nil {
		return x.Expire
	}
	return ""
}

// payAddr 可以支持 1. 地址 2. 私钥
type NoBalanceTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHex   string `protobuf:"bytes,1,opt,name=txHex,proto3" json:"txHex,omitempty"`
	PayAddr string `protobuf:"bytes,2,opt,name=payAddr,proto3" json:"payAddr,omitempty"`
	Privkey string `protobuf:"bytes,3,opt,name=privkey,proto3" json:"privkey,omitempty"`
	Expire  string `protobuf:"bytes,4,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *NoBalanceTx) Reset() {
	*x = NoBalanceTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoBalanceTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoBalanceTx) ProtoMessage() {}

func (x *NoBalanceTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoBalanceTx.ProtoReflect.Descriptor instead.
func (*NoBalanceTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *NoBalanceTx) GetTxHex() string {
	if x != nil {
		return x.TxHex
	}
	return ""
}

func (x *NoBalanceTx) GetPayAddr() string {
	if x != nil {
		return x.PayAddr
	}
	return ""
}

func (x *NoBalanceTx) GetPrivkey() string {
	if x != nil {
		return x.Privkey
	}
	return ""
}

func (x *NoBalanceTx) GetExpire() string {
	if x != nil {
		return x.Expire
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Execer    []byte     `protobuf:"bytes,1,opt,name=execer,proto3" json:"execer,omitempty"`
	Payload   []byte     `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature *Signature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Fee       int64      `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Expire    int64      `protobuf:"varint,5,opt,name=expire,proto3" json:"expire,omitempty"`
	//随机ID，可以防止payload 相同的时候，交易重复
	Nonce int64 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	//对方地址，如果没有对方地址，可以为空
	To         string `protobuf:"bytes,7,opt,name=to,proto3" json:"to,omitempty"`
	GroupCount int32  `protobuf:"varint,8,opt,name=groupCount,proto3" json:"groupCount,omitempty"`
	Header     []byte `protobuf:"bytes,9,opt,name=header,proto3" json:"header,omitempty"`
	Next       []byte `protobuf:"bytes,10,opt,name=next,proto3" json:"next,omitempty"`
	ChainID    int32  `protobuf:"varint,11,opt,name=chainID,proto3" json:"chainID,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *Transaction) GetExecer() []byte {
	if x != nil {
		return x.Execer
	}
	return nil
}

func (x *Transaction) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Transaction) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Transaction) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *Transaction) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Transaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction) GetGroupCount() int32 {
	if x != nil {
		return x.GroupCount
	}
	return 0
}

func (x *Transaction) GetHeader() []byte {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Transaction) GetNext() []byte {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *Transaction) GetChainID() int32 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

type Transactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *Transactions) Reset() {
	*x = Transactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transactions) ProtoMessage() {}

func (x *Transactions) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transactions.ProtoReflect.Descriptor instead.
func (*Transactions) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *Transactions) GetTxs() []*Transaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

// 环签名类型时，签名字段存储的环签名信息
type RingSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RingSignatureItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RingSignature) Reset() {
	*x = RingSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingSignature) ProtoMessage() {}

func (x *RingSignature) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingSignature.ProtoReflect.Descriptor instead.
func (*RingSignature) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *RingSignature) GetItems() []*RingSignatureItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 环签名中的一组签名数据
type RingSignatureItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey    [][]byte `protobuf:"bytes,1,rep,name=pubkey,proto3" json:"pubkey,omitempty"`
	Signature [][]byte `protobuf:"bytes,2,rep,name=signature,proto3" json:"signature,omitempty"`
}

func (x *RingSignatureItem) Reset() {
	*x = RingSignatureItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingSignatureItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingSignatureItem) ProtoMessage() {}

func (x *RingSignatureItem) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingSignatureItem.ProtoReflect.Descriptor instead.
func (*RingSignatureItem) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *RingSignatureItem) GetPubkey() [][]byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *RingSignatureItem) GetSignature() [][]byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

//对于一个交易组中的交易，要么全部成功，要么全部失败
//这个要好好设计一下
//最好交易构成一个链条[prevhash].独立的交易构成链条
//只要这个组中有一个执行是出错的，那么就执行不成功
//三种签名支持
// ty = 1 -> secp256k1
// ty = 2 -> ed25519
// ty = 3 -> sm2
// ty = 4 -> OnetimeED25519
// ty = 5 -> RingBaseonED25519
type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ty     int32  `protobuf:"varint,1,opt,name=ty,proto3" json:"ty,omitempty"`
	Pubkey []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	//当ty为5时，格式应该用RingSignature去解析
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *Signature) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *Signature) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AddrOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reciver int64 `protobuf:"varint,1,opt,name=reciver,proto3" json:"reciver,omitempty"`
	Balance int64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	TxCount int64 `protobuf:"varint,3,opt,name=txCount,proto3" json:"txCount,omitempty"`
}

func (x *AddrOverview) Reset() {
	*x = AddrOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrOverview) ProtoMessage() {}

func (x *AddrOverview) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrOverview.ProtoReflect.Descriptor instead.
func (*AddrOverview) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *AddrOverview) GetReciver() int64 {
	if x != nil {
		return x.Reciver
	}
	return 0
}

func (x *AddrOverview) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AddrOverview) GetTxCount() int64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

type ReqAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	//表示取所有/from/to/其他的hash列表
	Flag      int32 `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	Count     int32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Direction int32 `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	// height start
	Height    int64 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Index     int64 `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	HeightEnd int64 `protobuf:"varint,7,opt,name=heightEnd,proto3" json:"heightEnd,omitempty"`
}

func (x *ReqAddr) Reset() {
	*x = ReqAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddr) ProtoMessage() {}

func (x *ReqAddr) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddr.ProtoReflect.Descriptor instead.
func (*ReqAddr) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *ReqAddr) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReqAddr) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *ReqAddr) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqAddr) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *ReqAddr) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ReqAddr) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ReqAddr) GetHeightEnd() int64 {
	if x != nil {
		return x.HeightEnd
	}
	return 0
}

type HexTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx string `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *HexTx) Reset() {
	*x = HexTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HexTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HexTx) ProtoMessage() {}

func (x *HexTx) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HexTx.ProtoReflect.Descriptor instead.
func (*HexTx) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *HexTx) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

type ReplyTxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash   []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height int64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Index  int64    `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Assets []*Asset `protobuf:"bytes,4,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *ReplyTxInfo) Reset() {
	*x = ReplyTxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTxInfo) ProtoMessage() {}

func (x *ReplyTxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTxInfo.ProtoReflect.Descriptor instead.
func (*ReplyTxInfo) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{19}
}

func (x *ReplyTxInfo) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ReplyTxInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ReplyTxInfo) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ReplyTxInfo) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type ReqTxList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReqTxList) Reset() {
	*x = ReqTxList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTxList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTxList) ProtoMessage() {}

func (x *ReqTxList) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTxList.ProtoReflect.Descriptor instead.
func (*ReqTxList) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{20}
}

func (x *ReqTxList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReplyTxList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *ReplyTxList) Reset() {
	*x = ReplyTxList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTxList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTxList) ProtoMessage() {}

func (x *ReplyTxList) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTxList.ProtoReflect.Descriptor instead.
func (*ReplyTxList) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{21}
}

func (x *ReplyTxList) GetTxs() []*Transaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

type ReqGetMempool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAll bool `protobuf:"varint,1,opt,name=isAll,proto3" json:"isAll,omitempty"`
}

func (x *ReqGetMempool) Reset() {
	*x = ReqGetMempool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetMempool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetMempool) ProtoMessage() {}

func (x *ReqGetMempool) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetMempool.ProtoReflect.Descriptor instead.
func (*ReqGetMempool) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{22}
}

func (x *ReqGetMempool) GetIsAll() bool {
	if x != nil {
		return x.IsAll
	}
	return false
}

type ReqProperFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxCount int32 `protobuf:"varint,1,opt,name=txCount,proto3" json:"txCount,omitempty"`
	TxSize  int32 `protobuf:"varint,2,opt,name=txSize,proto3" json:"txSize,omitempty"`
}

func (x *ReqProperFee) Reset() {
	*x = ReqProperFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqProperFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqProperFee) ProtoMessage() {}

func (x *ReqProperFee) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqProperFee.ProtoReflect.Descriptor instead.
func (*ReqProperFee) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{23}
}

func (x *ReqProperFee) GetTxCount() int32 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *ReqProperFee) GetTxSize() int32 {
	if x != nil {
		return x.TxSize
	}
	return 0
}

type ReplyProperFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProperFee int64 `protobuf:"varint,1,opt,name=properFee,proto3" json:"properFee,omitempty"`
}

func (x *ReplyProperFee) Reset() {
	*x = ReplyProperFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyProperFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyProperFee) ProtoMessage() {}

func (x *ReplyProperFee) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyProperFee.ProtoReflect.Descriptor instead.
func (*ReplyProperFee) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{24}
}

func (x *ReplyProperFee) GetProperFee() int64 {
	if x != nil {
		return x.ProperFee
	}
	return 0
}

type TxHashList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashes [][]byte `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
	Count  int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Expire []int64  `protobuf:"varint,3,rep,packed,name=expire,proto3" json:"expire,omitempty"`
}

func (x *TxHashList) Reset() {
	*x = TxHashList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxHashList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHashList) ProtoMessage() {}

func (x *TxHashList) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHashList.ProtoReflect.Descriptor instead.
func (*TxHashList) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{25}
}

func (x *TxHashList) GetHashes() [][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *TxHashList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TxHashList) GetExpire() []int64 {
	if x != nil {
		return x.Expire
	}
	return nil
}

type ReplyTxInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxInfos []*ReplyTxInfo `protobuf:"bytes,1,rep,name=txInfos,proto3" json:"txInfos,omitempty"`
}

func (x *ReplyTxInfos) Reset() {
	*x = ReplyTxInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTxInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTxInfos) ProtoMessage() {}

func (x *ReplyTxInfos) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTxInfos.ProtoReflect.Descriptor instead.
func (*ReplyTxInfos) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{26}
}

func (x *ReplyTxInfos) GetTxInfos() []*ReplyTxInfo {
	if x != nil {
		return x.TxInfos
	}
	return nil
}

//根据Addr查询和此Addr相关的交易费交易记录
type AddrTxFeeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddr string `protobuf:"bytes,1,opt,name=fromAddr,proto3" json:"fromAddr,omitempty"`
	ToAddr   string `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	TxHash   string `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Exec     string `protobuf:"bytes,4,opt,name=exec,proto3" json:"exec,omitempty"`
	Fee      int64  `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Height   int64  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Index    int64  `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`
	TxStatus int32  `protobuf:"varint,8,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
}

func (x *AddrTxFeeInfo) Reset() {
	*x = AddrTxFeeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrTxFeeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrTxFeeInfo) ProtoMessage() {}

func (x *AddrTxFeeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrTxFeeInfo.ProtoReflect.Descriptor instead.
func (*AddrTxFeeInfo) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{27}
}

func (x *AddrTxFeeInfo) GetFromAddr() string {
	if x != nil {
		return x.FromAddr
	}
	return ""
}

func (x *AddrTxFeeInfo) GetToAddr() string {
	if x != nil {
		return x.ToAddr
	}
	return ""
}

func (x *AddrTxFeeInfo) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *AddrTxFeeInfo) GetExec() string {
	if x != nil {
		return x.Exec
	}
	return ""
}

func (x *AddrTxFeeInfo) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AddrTxFeeInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AddrTxFeeInfo) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *AddrTxFeeInfo) GetTxStatus() int32 {
	if x != nil {
		return x.TxStatus
	}
	return 0
}

type AddrTxFeeInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxInfos []*AddrTxFeeInfo `protobuf:"bytes,1,rep,name=txInfos,proto3" json:"txInfos,omitempty"`
}

func (x *AddrTxFeeInfos) Reset() {
	*x = AddrTxFeeInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrTxFeeInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrTxFeeInfos) ProtoMessage() {}

func (x *AddrTxFeeInfos) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrTxFeeInfos.ProtoReflect.Descriptor instead.
func (*AddrTxFeeInfos) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{28}
}

func (x *AddrTxFeeInfos) GetTxInfos() []*AddrTxFeeInfo {
	if x != nil {
		return x.TxInfos
	}
	return nil
}

type ReceiptLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ty  int32  `protobuf:"varint,1,opt,name=ty,proto3" json:"ty,omitempty"`
	Log []byte `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *ReceiptLog) Reset() {
	*x = ReceiptLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptLog) ProtoMessage() {}

func (x *ReceiptLog) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptLog.ProtoReflect.Descriptor instead.
func (*ReceiptLog) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{29}
}

func (x *ReceiptLog) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *ReceiptLog) GetLog() []byte {
	if x != nil {
		return x.Log
	}
	return nil
}

// ty = 0 -> error Receipt
// ty = 1 -> CutFee //cut fee ,bug exec not ok
// ty = 2 -> exec ok
type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ty   int32         `protobuf:"varint,1,opt,name=ty,proto3" json:"ty,omitempty"`
	KV   []*KeyValue   `protobuf:"bytes,2,rep,name=KV,proto3" json:"KV,omitempty"`
	Logs []*ReceiptLog `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{30}
}

func (x *Receipt) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *Receipt) GetKV() []*KeyValue {
	if x != nil {
		return x.KV
	}
	return nil
}

func (x *Receipt) GetLogs() []*ReceiptLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ReceiptData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ty   int32         `protobuf:"varint,1,opt,name=ty,proto3" json:"ty,omitempty"`
	Logs []*ReceiptLog `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ReceiptData) Reset() {
	*x = ReceiptData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptData) ProtoMessage() {}

func (x *ReceiptData) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptData.ProtoReflect.Descriptor instead.
func (*ReceiptData) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{31}
}

func (x *ReceiptData) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *ReceiptData) GetLogs() []*ReceiptLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type TxResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height      int64        `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Index       int32        `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Tx          *Transaction `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
	Receiptdate *ReceiptData `protobuf:"bytes,4,opt,name=receiptdate,proto3" json:"receiptdate,omitempty"`
	Blocktime   int64        `protobuf:"varint,5,opt,name=blocktime,proto3" json:"blocktime,omitempty"`
	ActionName  string       `protobuf:"bytes,6,opt,name=actionName,proto3" json:"actionName,omitempty"`
}

func (x *TxResult) Reset() {
	*x = TxResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxResult) ProtoMessage() {}

func (x *TxResult) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxResult.ProtoReflect.Descriptor instead.
func (*TxResult) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{32}
}

func (x *TxResult) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TxResult) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TxResult) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TxResult) GetReceiptdate() *ReceiptData {
	if x != nil {
		return x.Receiptdate
	}
	return nil
}

func (x *TxResult) GetBlocktime() int64 {
	if x != nil {
		return x.Blocktime
	}
	return 0
}

func (x *TxResult) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

type TransactionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx         *Transaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Receipt    *ReceiptData `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	Proofs     [][]byte     `protobuf:"bytes,3,rep,name=proofs,proto3" json:"proofs,omitempty"`
	Height     int64        `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Index      int64        `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	Blocktime  int64        `protobuf:"varint,6,opt,name=blocktime,proto3" json:"blocktime,omitempty"`
	Amount     int64        `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Fromaddr   string       `protobuf:"bytes,8,opt,name=fromaddr,proto3" json:"fromaddr,omitempty"`
	ActionName string       `protobuf:"bytes,9,opt,name=actionName,proto3" json:"actionName,omitempty"`
	Assets     []*Asset     `protobuf:"bytes,10,rep,name=assets,proto3" json:"assets,omitempty"`
	TxProofs   []*TxProof   `protobuf:"bytes,11,rep,name=txProofs,proto3" json:"txProofs,omitempty"`
	FullHash   []byte       `protobuf:"bytes,12,opt,name=fullHash,proto3" json:"fullHash,omitempty"`
}

func (x *TransactionDetail) Reset() {
	*x = TransactionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetail) ProtoMessage() {}

func (x *TransactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetail.ProtoReflect.Descriptor instead.
func (*TransactionDetail) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{33}
}

func (x *TransactionDetail) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TransactionDetail) GetReceipt() *ReceiptData {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *TransactionDetail) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

func (x *TransactionDetail) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TransactionDetail) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionDetail) GetBlocktime() int64 {
	if x != nil {
		return x.Blocktime
	}
	return 0
}

func (x *TransactionDetail) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionDetail) GetFromaddr() string {
	if x != nil {
		return x.Fromaddr
	}
	return ""
}

func (x *TransactionDetail) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *TransactionDetail) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *TransactionDetail) GetTxProofs() []*TxProof {
	if x != nil {
		return x.TxProofs
	}
	return nil
}

func (x *TransactionDetail) GetFullHash() []byte {
	if x != nil {
		return x.FullHash
	}
	return nil
}

type TransactionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*TransactionDetail `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *TransactionDetails) Reset() {
	*x = TransactionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails) ProtoMessage() {}

func (x *TransactionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails.ProtoReflect.Descriptor instead.
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{34}
}

func (x *TransactionDetails) GetTxs() []*TransactionDetail {
	if x != nil {
		return x.Txs
	}
	return nil
}

type ReqAddrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs []string `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
}

func (x *ReqAddrs) Reset() {
	*x = ReqAddrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddrs) ProtoMessage() {}

func (x *ReqAddrs) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddrs.ProtoReflect.Descriptor instead.
func (*ReqAddrs) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{35}
}

func (x *ReqAddrs) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type ReqDecodeRawTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHex string `protobuf:"bytes,1,opt,name=txHex,proto3" json:"txHex,omitempty"`
}

func (x *ReqDecodeRawTransaction) Reset() {
	*x = ReqDecodeRawTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDecodeRawTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDecodeRawTransaction) ProtoMessage() {}

func (x *ReqDecodeRawTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDecodeRawTransaction.ProtoReflect.Descriptor instead.
func (*ReqDecodeRawTransaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{36}
}

func (x *ReqDecodeRawTransaction) GetTxHex() string {
	if x != nil {
		return x.TxHex
	}
	return ""
}

type UserWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic   string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UserWrite) Reset() {
	*x = UserWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWrite) ProtoMessage() {}

func (x *UserWrite) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWrite.ProtoReflect.Descriptor instead.
func (*UserWrite) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{37}
}

func (x *UserWrite) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *UserWrite) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpgradeMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Starting bool   `protobuf:"varint,1,opt,name=starting,proto3" json:"starting,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Height   int64  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *UpgradeMeta) Reset() {
	*x = UpgradeMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeMeta) ProtoMessage() {}

func (x *UpgradeMeta) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeMeta.ProtoReflect.Descriptor instead.
func (*UpgradeMeta) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{38}
}

func (x *UpgradeMeta) GetStarting() bool {
	if x != nil {
		return x.Starting
	}
	return false
}

func (x *UpgradeMeta) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpgradeMeta) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

//通过交易hash获取交易列表，需要区分是短hash还是全hash值
type ReqTxHashList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashes      []string `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
	IsShortHash bool     `protobuf:"varint,2,opt,name=isShortHash,proto3" json:"isShortHash,omitempty"`
}

func (x *ReqTxHashList) Reset() {
	*x = ReqTxHashList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTxHashList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTxHashList) ProtoMessage() {}

func (x *ReqTxHashList) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTxHashList.ProtoReflect.Descriptor instead.
func (*ReqTxHashList) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{39}
}

func (x *ReqTxHashList) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *ReqTxHashList) GetIsShortHash() bool {
	if x != nil {
		return x.IsShortHash
	}
	return false
}

//使用多层merkle树之后的proof证明结构体
type TxProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proofs   [][]byte `protobuf:"bytes,1,rep,name=proofs,proto3" json:"proofs,omitempty"`
	Index    uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	RootHash []byte   `protobuf:"bytes,3,opt,name=rootHash,proto3" json:"rootHash,omitempty"`
}

func (x *TxProof) Reset() {
	*x = TxProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxProof) ProtoMessage() {}

func (x *TxProof) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxProof.ProtoReflect.Descriptor instead.
func (*TxProof) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{40}
}

func (x *TxProof) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

func (x *TxProof) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TxProof) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

// 指定交易哈希，查找是否存在
type ReqCheckTxsExist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHashes [][]byte `protobuf:"bytes,1,rep,name=txHashes,proto3" json:"txHashes,omitempty"`
}

func (x *ReqCheckTxsExist) Reset() {
	*x = ReqCheckTxsExist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCheckTxsExist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCheckTxsExist) ProtoMessage() {}

func (x *ReqCheckTxsExist) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCheckTxsExist.ProtoReflect.Descriptor instead.
func (*ReqCheckTxsExist) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{41}
}

func (x *ReqCheckTxsExist) GetTxHashes() [][]byte {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

type ReplyCheckTxsExist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//对应请求序列存在标识数组，存在则true，否则false
	ExistFlags []bool `protobuf:"varint,1,rep,packed,name=existFlags,proto3" json:"existFlags,omitempty"`
	//存在情况的总个数
	ExistCount uint32 `protobuf:"varint,2,opt,name=existCount,proto3" json:"existCount,omitempty"`
}

func (x *ReplyCheckTxsExist) Reset() {
	*x = ReplyCheckTxsExist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyCheckTxsExist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCheckTxsExist) ProtoMessage() {}

func (x *ReplyCheckTxsExist) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCheckTxsExist.ProtoReflect.Descriptor instead.
func (*ReplyCheckTxsExist) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{42}
}

func (x *ReplyCheckTxsExist) GetExistFlags() []bool {
	if x != nil {
		return x.ExistFlags
	}
	return nil
}

func (x *ReplyCheckTxsExist) GetExistCount() uint32 {
	if x != nil {
		return x.ExistCount
	}
	return 0
}

var File_transaction_proto protoreflect.FileDescriptor

var file_transaction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x69,
	0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22,
	0x6a, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x05, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x08, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x65, 0x63, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x65,
	0x63, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x0c, 0x52, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x61,
	0x77, 0x54, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x2a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22,
	0x1e, 0x0a, 0x08, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x72, 0x0a, 0x0c, 0x4e, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x78, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x65, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x78, 0x48, 0x65, 0x78, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x22, 0x6f, 0x0a, 0x0b, 0x4e, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x48, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x78, 0x48, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x65, 0x63, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x03,
	0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74,
	0x78, 0x73, 0x22, 0x3f, 0x0a, 0x0d, 0x52, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x52, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x51,
	0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x5c, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63, 0x69, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xb1, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45,
	0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x45, 0x6e, 0x64, 0x22, 0x17, 0x0a, 0x05, 0x48, 0x65, 0x78, 0x54, 0x78, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x78, 0x22, 0x75, 0x0a, 0x0b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x22, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x41, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41,
	0x6c, 0x6c, 0x22, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x78,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x2e, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x46, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x22, 0x52, 0x0a, 0x0a, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x78, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x54,
	0x78, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x78, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x54, 0x78, 0x46, 0x65,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x54, 0x78, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x2e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x61, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74,
	0x79, 0x12, 0x1f, 0x0a, 0x02, 0x4b, 0x56, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02,
	0x4b, 0x56, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x44, 0x0a, 0x0b, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22,
	0xd0, 0x01, 0x0a, 0x08, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x12, 0x34,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x8b, 0x03, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x12, 0x2c, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x61, 0x64,
	0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x78, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x08, 0x74, 0x78, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x40, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x03, 0x74,
	0x78, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x64, 0x64, 0x72, 0x73, 0x22, 0x2f, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x78, 0x48, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x78, 0x48, 0x65, 0x78, 0x22, 0x3b, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x0b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x49, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x53, 0x0a, 0x07, 0x54, 0x78,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x2e, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22,
	0x54, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x78, 0x73,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x33, 0x33, 0x63, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData = file_transaction_proto_rawDesc
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_transaction_proto_rawDescData)
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_transaction_proto_goTypes = []interface{}{
	(*AssetsGenesis)(nil),           // 0: types.AssetsGenesis
	(*AssetsTransferToExec)(nil),    // 1: types.AssetsTransferToExec
	(*AssetsWithdraw)(nil),          // 2: types.AssetsWithdraw
	(*AssetsTransfer)(nil),          // 3: types.AssetsTransfer
	(*Asset)(nil),                   // 4: types.Asset
	(*CreateTx)(nil),                // 5: types.CreateTx
	(*ReWriteRawTx)(nil),            // 6: types.ReWriteRawTx
	(*CreateTransactionGroup)(nil),  // 7: types.CreateTransactionGroup
	(*UnsignTx)(nil),                // 8: types.UnsignTx
	(*NoBalanceTxs)(nil),            // 9: types.NoBalanceTxs
	(*NoBalanceTx)(nil),             // 10: types.NoBalanceTx
	(*Transaction)(nil),             // 11: types.Transaction
	(*Transactions)(nil),            // 12: types.Transactions
	(*RingSignature)(nil),           // 13: types.RingSignature
	(*RingSignatureItem)(nil),       // 14: types.RingSignatureItem
	(*Signature)(nil),               // 15: types.Signature
	(*AddrOverview)(nil),            // 16: types.AddrOverview
	(*ReqAddr)(nil),                 // 17: types.ReqAddr
	(*HexTx)(nil),                   // 18: types.HexTx
	(*ReplyTxInfo)(nil),             // 19: types.ReplyTxInfo
	(*ReqTxList)(nil),               // 20: types.ReqTxList
	(*ReplyTxList)(nil),             // 21: types.ReplyTxList
	(*ReqGetMempool)(nil),           // 22: types.ReqGetMempool
	(*ReqProperFee)(nil),            // 23: types.ReqProperFee
	(*ReplyProperFee)(nil),          // 24: types.ReplyProperFee
	(*TxHashList)(nil),              // 25: types.TxHashList
	(*ReplyTxInfos)(nil),            // 26: types.ReplyTxInfos
	(*AddrTxFeeInfo)(nil),           // 27: types.AddrTxFeeInfo
	(*AddrTxFeeInfos)(nil),          // 28: types.AddrTxFeeInfos
	(*ReceiptLog)(nil),              // 29: types.ReceiptLog
	(*Receipt)(nil),                 // 30: types.Receipt
	(*ReceiptData)(nil),             // 31: types.ReceiptData
	(*TxResult)(nil),                // 32: types.TxResult
	(*TransactionDetail)(nil),       // 33: types.TransactionDetail
	(*TransactionDetails)(nil),      // 34: types.TransactionDetails
	(*ReqAddrs)(nil),                // 35: types.ReqAddrs
	(*ReqDecodeRawTransaction)(nil), // 36: types.ReqDecodeRawTransaction
	(*UserWrite)(nil),               // 37: types.UserWrite
	(*UpgradeMeta)(nil),             // 38: types.UpgradeMeta
	(*ReqTxHashList)(nil),           // 39: types.ReqTxHashList
	(*TxProof)(nil),                 // 40: types.TxProof
	(*ReqCheckTxsExist)(nil),        // 41: types.ReqCheckTxsExist
	(*ReplyCheckTxsExist)(nil),      // 42: types.ReplyCheckTxsExist
	(*KeyValue)(nil),                // 43: types.KeyValue
}
var file_transaction_proto_depIdxs = []int32{
	15, // 0: types.Transaction.signature:type_name -> types.Signature
	11, // 1: types.Transactions.txs:type_name -> types.Transaction
	14, // 2: types.RingSignature.items:type_name -> types.RingSignatureItem
	4,  // 3: types.ReplyTxInfo.assets:type_name -> types.Asset
	11, // 4: types.ReplyTxList.txs:type_name -> types.Transaction
	19, // 5: types.ReplyTxInfos.txInfos:type_name -> types.ReplyTxInfo
	27, // 6: types.AddrTxFeeInfos.txInfos:type_name -> types.AddrTxFeeInfo
	43, // 7: types.Receipt.KV:type_name -> types.KeyValue
	29, // 8: types.Receipt.logs:type_name -> types.ReceiptLog
	29, // 9: types.ReceiptData.logs:type_name -> types.ReceiptLog
	11, // 10: types.TxResult.tx:type_name -> types.Transaction
	31, // 11: types.TxResult.receiptdate:type_name -> types.ReceiptData
	11, // 12: types.TransactionDetail.tx:type_name -> types.Transaction
	31, // 13: types.TransactionDetail.receipt:type_name -> types.ReceiptData
	4,  // 14: types.TransactionDetail.assets:type_name -> types.Asset
	40, // 15: types.TransactionDetail.txProofs:type_name -> types.TxProof
	33, // 16: types.TransactionDetails.txs:type_name -> types.TransactionDetail
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsGenesis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsTransferToExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReWriteRawTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsignTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoBalanceTxs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoBalanceTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingSignatureItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HexTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTxList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTxList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetMempool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqProperFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyProperFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxHashList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTxInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrTxFeeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrTxFeeInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDecodeRawTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTxHashList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCheckTxsExist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyCheckTxsExist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_rawDesc = nil
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}
