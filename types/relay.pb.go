// Code generated by protoc-gen-go. DO NOT EDIT.
// source: relay.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RelayOrderStatus int32

const (
	RelayOrderStatus_unknown    RelayOrderStatus = 0
	RelayOrderStatus_pending    RelayOrderStatus = 1
	RelayOrderStatus_locking    RelayOrderStatus = 2
	RelayOrderStatus_confirming RelayOrderStatus = 3
	RelayOrderStatus_finished   RelayOrderStatus = 4
	RelayOrderStatus_canceled   RelayOrderStatus = 5
	RelayOrderStatus_timeout    RelayOrderStatus = 6
)

var RelayOrderStatus_name = map[int32]string{
	0: "unknown",
	1: "pending",
	2: "locking",
	3: "confirming",
	4: "finished",
	5: "canceled",
	6: "timeout",
}
var RelayOrderStatus_value = map[string]int32{
	"unknown":    0,
	"pending":    1,
	"locking":    2,
	"confirming": 3,
	"finished":   4,
	"canceled":   5,
	"timeout":    6,
}

func (x RelayOrderStatus) String() string {
	return proto.EnumName(RelayOrderStatus_name, int32(x))
}
func (RelayOrderStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type RelayAction struct {
	// Types that are valid to be assigned to Value:
	//	*RelayAction_Rsell
	//	*RelayAction_Rrevokesell
	//	*RelayAction_Rbuy
	//	*RelayAction_Rrevokebuy
	//	*RelayAction_Rverify
	//	*RelayAction_Rverifybtc
	Value isRelayAction_Value `protobuf_oneof:"value"`
	Ty    int32               `protobuf:"varint,10,opt,name=ty" json:"ty,omitempty"`
}

func (m *RelayAction) Reset()                    { *m = RelayAction{} }
func (m *RelayAction) String() string            { return proto.CompactTextString(m) }
func (*RelayAction) ProtoMessage()               {}
func (*RelayAction) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type isRelayAction_Value interface {
	isRelayAction_Value()
}

type RelayAction_Rsell struct {
	Rsell *RelaySell `protobuf:"bytes,1,opt,name=rsell,oneof"`
}
type RelayAction_Rrevokesell struct {
	Rrevokesell *RelayRevokeSell `protobuf:"bytes,2,opt,name=rrevokesell,oneof"`
}
type RelayAction_Rbuy struct {
	Rbuy *RelayBuy `protobuf:"bytes,3,opt,name=rbuy,oneof"`
}
type RelayAction_Rrevokebuy struct {
	Rrevokebuy *RelayRevokeBuy `protobuf:"bytes,4,opt,name=rrevokebuy,oneof"`
}
type RelayAction_Rverify struct {
	Rverify *RelayVerify `protobuf:"bytes,5,opt,name=rverify,oneof"`
}
type RelayAction_Rverifybtc struct {
	Rverifybtc *RelayVerifyBTC `protobuf:"bytes,6,opt,name=rverifybtc,oneof"`
}

func (*RelayAction_Rsell) isRelayAction_Value()       {}
func (*RelayAction_Rrevokesell) isRelayAction_Value() {}
func (*RelayAction_Rbuy) isRelayAction_Value()        {}
func (*RelayAction_Rrevokebuy) isRelayAction_Value()  {}
func (*RelayAction_Rverify) isRelayAction_Value()     {}
func (*RelayAction_Rverifybtc) isRelayAction_Value()  {}

func (m *RelayAction) GetValue() isRelayAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RelayAction) GetRsell() *RelaySell {
	if x, ok := m.GetValue().(*RelayAction_Rsell); ok {
		return x.Rsell
	}
	return nil
}

func (m *RelayAction) GetRrevokesell() *RelayRevokeSell {
	if x, ok := m.GetValue().(*RelayAction_Rrevokesell); ok {
		return x.Rrevokesell
	}
	return nil
}

func (m *RelayAction) GetRbuy() *RelayBuy {
	if x, ok := m.GetValue().(*RelayAction_Rbuy); ok {
		return x.Rbuy
	}
	return nil
}

func (m *RelayAction) GetRrevokebuy() *RelayRevokeBuy {
	if x, ok := m.GetValue().(*RelayAction_Rrevokebuy); ok {
		return x.Rrevokebuy
	}
	return nil
}

func (m *RelayAction) GetRverify() *RelayVerify {
	if x, ok := m.GetValue().(*RelayAction_Rverify); ok {
		return x.Rverify
	}
	return nil
}

func (m *RelayAction) GetRverifybtc() *RelayVerifyBTC {
	if x, ok := m.GetValue().(*RelayAction_Rverifybtc); ok {
		return x.Rverifybtc
	}
	return nil
}

func (m *RelayAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RelayAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RelayAction_OneofMarshaler, _RelayAction_OneofUnmarshaler, _RelayAction_OneofSizer, []interface{}{
		(*RelayAction_Rsell)(nil),
		(*RelayAction_Rrevokesell)(nil),
		(*RelayAction_Rbuy)(nil),
		(*RelayAction_Rrevokebuy)(nil),
		(*RelayAction_Rverify)(nil),
		(*RelayAction_Rverifybtc)(nil),
	}
}

func _RelayAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RelayAction)
	// value
	switch x := m.Value.(type) {
	case *RelayAction_Rsell:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rsell); err != nil {
			return err
		}
	case *RelayAction_Rrevokesell:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rrevokesell); err != nil {
			return err
		}
	case *RelayAction_Rbuy:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rbuy); err != nil {
			return err
		}
	case *RelayAction_Rrevokebuy:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rrevokebuy); err != nil {
			return err
		}
	case *RelayAction_Rverify:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rverify); err != nil {
			return err
		}
	case *RelayAction_Rverifybtc:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rverifybtc); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RelayAction.Value has unexpected type %T", x)
	}
	return nil
}

func _RelayAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RelayAction)
	switch tag {
	case 1: // value.rsell
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelaySell)
		err := b.DecodeMessage(msg)
		m.Value = &RelayAction_Rsell{msg}
		return true, err
	case 2: // value.rrevokesell
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelayRevokeSell)
		err := b.DecodeMessage(msg)
		m.Value = &RelayAction_Rrevokesell{msg}
		return true, err
	case 3: // value.rbuy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelayBuy)
		err := b.DecodeMessage(msg)
		m.Value = &RelayAction_Rbuy{msg}
		return true, err
	case 4: // value.rrevokebuy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelayRevokeBuy)
		err := b.DecodeMessage(msg)
		m.Value = &RelayAction_Rrevokebuy{msg}
		return true, err
	case 5: // value.rverify
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelayVerify)
		err := b.DecodeMessage(msg)
		m.Value = &RelayAction_Rverify{msg}
		return true, err
	case 6: // value.rverifybtc
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelayVerifyBTC)
		err := b.DecodeMessage(msg)
		m.Value = &RelayAction_Rverifybtc{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RelayAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RelayAction)
	// value
	switch x := m.Value.(type) {
	case *RelayAction_Rsell:
		s := proto.Size(x.Rsell)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RelayAction_Rrevokesell:
		s := proto.Size(x.Rrevokesell)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RelayAction_Rbuy:
		s := proto.Size(x.Rbuy)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RelayAction_Rrevokebuy:
		s := proto.Size(x.Rrevokebuy)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RelayAction_Rverify:
		s := proto.Size(x.Rverify)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RelayAction_Rverifybtc:
		s := proto.Size(x.Rverifybtc)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RelaySell struct {
	Sellamount int64 `protobuf:"varint,1,opt,name=sellamount" json:"sellamount,omitempty"`
	// string selladdr          	= 2；   //自身帐号，如果自己是外链账户，需要填
	// string  selltoken		   	= 3;    //卖的token  当前缺省是BTY
	Exchgcoin      string `protobuf:"bytes,4,opt,name=exchgcoin" json:"exchgcoin,omitempty"`
	Exchgamount    int64  `protobuf:"varint,5,opt,name=exchgamount" json:"exchgamount,omitempty"`
	Exchgaddr      string `protobuf:"bytes,6,opt,name=exchgaddr" json:"exchgaddr,omitempty"`
	Waitcoinblocks int32  `protobuf:"varint,7,opt,name=waitcoinblocks" json:"waitcoinblocks,omitempty"`
}

func (m *RelaySell) Reset()                    { *m = RelaySell{} }
func (m *RelaySell) String() string            { return proto.CompactTextString(m) }
func (*RelaySell) ProtoMessage()               {}
func (*RelaySell) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *RelaySell) GetSellamount() int64 {
	if m != nil {
		return m.Sellamount
	}
	return 0
}

func (m *RelaySell) GetExchgcoin() string {
	if m != nil {
		return m.Exchgcoin
	}
	return ""
}

func (m *RelaySell) GetExchgamount() int64 {
	if m != nil {
		return m.Exchgamount
	}
	return 0
}

func (m *RelaySell) GetExchgaddr() string {
	if m != nil {
		return m.Exchgaddr
	}
	return ""
}

func (m *RelaySell) GetWaitcoinblocks() int32 {
	if m != nil {
		return m.Waitcoinblocks
	}
	return 0
}

type RelayOrder struct {
	Orderid    string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
	Status     int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Sellamount int64  `protobuf:"varint,3,opt,name=sellamount" json:"sellamount,omitempty"`
	// string selltoken          = 4;
	Selladdr        string `protobuf:"bytes,5,opt,name=selladdr" json:"selladdr,omitempty"`
	Exchgcoin       string `protobuf:"bytes,6,opt,name=exchgcoin" json:"exchgcoin,omitempty"`
	Exchgamount     int64  `protobuf:"varint,7,opt,name=exchgamount" json:"exchgamount,omitempty"`
	Exchgaddr       string `protobuf:"bytes,8,opt,name=exchgaddr" json:"exchgaddr,omitempty"`
	Waitcoinblocks  int32  `protobuf:"varint,9,opt,name=waitcoinblocks" json:"waitcoinblocks,omitempty"`
	Createtime      int64  `protobuf:"varint,10,opt,name=createtime" json:"createtime,omitempty"`
	Buyeraddr       string `protobuf:"bytes,11,opt,name=buyeraddr" json:"buyeraddr,omitempty"`
	Buyertime       int64  `protobuf:"varint,12,opt,name=buyertime" json:"buyertime,omitempty"`
	Buyercoinheight int64  `protobuf:"varint,13,opt,name=buyercoinheight" json:"buyercoinheight,omitempty"`
	Finishtime      int64  `protobuf:"varint,14,opt,name=finishtime" json:"finishtime,omitempty"`
	Height          int64  `protobuf:"varint,15,opt,name=height" json:"height,omitempty"`
}

func (m *RelayOrder) Reset()                    { *m = RelayOrder{} }
func (m *RelayOrder) String() string            { return proto.CompactTextString(m) }
func (*RelayOrder) ProtoMessage()               {}
func (*RelayOrder) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *RelayOrder) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

func (m *RelayOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RelayOrder) GetSellamount() int64 {
	if m != nil {
		return m.Sellamount
	}
	return 0
}

func (m *RelayOrder) GetSelladdr() string {
	if m != nil {
		return m.Selladdr
	}
	return ""
}

func (m *RelayOrder) GetExchgcoin() string {
	if m != nil {
		return m.Exchgcoin
	}
	return ""
}

func (m *RelayOrder) GetExchgamount() int64 {
	if m != nil {
		return m.Exchgamount
	}
	return 0
}

func (m *RelayOrder) GetExchgaddr() string {
	if m != nil {
		return m.Exchgaddr
	}
	return ""
}

func (m *RelayOrder) GetWaitcoinblocks() int32 {
	if m != nil {
		return m.Waitcoinblocks
	}
	return 0
}

func (m *RelayOrder) GetCreatetime() int64 {
	if m != nil {
		return m.Createtime
	}
	return 0
}

func (m *RelayOrder) GetBuyeraddr() string {
	if m != nil {
		return m.Buyeraddr
	}
	return ""
}

func (m *RelayOrder) GetBuyertime() int64 {
	if m != nil {
		return m.Buyertime
	}
	return 0
}

func (m *RelayOrder) GetBuyercoinheight() int64 {
	if m != nil {
		return m.Buyercoinheight
	}
	return 0
}

func (m *RelayOrder) GetFinishtime() int64 {
	if m != nil {
		return m.Finishtime
	}
	return 0
}

func (m *RelayOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type RelayBuy struct {
	Orderid string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
}

func (m *RelayBuy) Reset()                    { *m = RelayBuy{} }
func (m *RelayBuy) String() string            { return proto.CompactTextString(m) }
func (*RelayBuy) ProtoMessage()               {}
func (*RelayBuy) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *RelayBuy) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

// 允许撤销卖单
type RelayRevokeSell struct {
	Orderid string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
}

func (m *RelayRevokeSell) Reset()                    { *m = RelayRevokeSell{} }
func (m *RelayRevokeSell) String() string            { return proto.CompactTextString(m) }
func (*RelayRevokeSell) ProtoMessage()               {}
func (*RelayRevokeSell) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *RelayRevokeSell) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

// 允许撤销买单
type RelayRevokeBuy struct {
	Orderid string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
}

func (m *RelayRevokeBuy) Reset()                    { *m = RelayRevokeBuy{} }
func (m *RelayRevokeBuy) String() string            { return proto.CompactTextString(m) }
func (*RelayRevokeBuy) ProtoMessage()               {}
func (*RelayRevokeBuy) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *RelayRevokeBuy) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

// 只用交易hash验证， 验证需要的其他信息由relayd提供
type RelayVerify struct {
	Orderid string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
	Txhash  string `protobuf:"bytes,2,opt,name=txhash" json:"txhash,omitempty"`
}

func (m *RelayVerify) Reset()                    { *m = RelayVerify{} }
func (m *RelayVerify) String() string            { return proto.CompactTextString(m) }
func (*RelayVerify) ProtoMessage()               {}
func (*RelayVerify) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *RelayVerify) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

func (m *RelayVerify) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

// 客户自己提供原始交易信息来验证
type RelayVerifyBTC struct {
	Orderid    string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
	Rawtx      string `protobuf:"bytes,2,opt,name=rawtx" json:"rawtx,omitempty"`
	Txindex    uint32 `protobuf:"varint,3,opt,name=txindex" json:"txindex,omitempty"`
	Merkbranch string `protobuf:"bytes,4,opt,name=merkbranch" json:"merkbranch,omitempty"`
	Blockhash  string `protobuf:"bytes,5,opt,name=blockhash" json:"blockhash,omitempty"`
}

func (m *RelayVerifyBTC) Reset()                    { *m = RelayVerifyBTC{} }
func (m *RelayVerifyBTC) String() string            { return proto.CompactTextString(m) }
func (*RelayVerifyBTC) ProtoMessage()               {}
func (*RelayVerifyBTC) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *RelayVerifyBTC) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

func (m *RelayVerifyBTC) GetRawtx() string {
	if m != nil {
		return m.Rawtx
	}
	return ""
}

func (m *RelayVerifyBTC) GetTxindex() uint32 {
	if m != nil {
		return m.Txindex
	}
	return 0
}

func (m *RelayVerifyBTC) GetMerkbranch() string {
	if m != nil {
		return m.Merkbranch
	}
	return ""
}

func (m *RelayVerifyBTC) GetBlockhash() string {
	if m != nil {
		return m.Blockhash
	}
	return ""
}

type ReceiptRelayBase struct {
	Orderid    string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Owner      string `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	Sellamount int64  `protobuf:"varint,4,opt,name=sellamount" json:"sellamount,omitempty"`
	// string selltoken			= 5;
	Exchgcoin       string `protobuf:"bytes,6,opt,name=exchgcoin" json:"exchgcoin,omitempty"`
	Exchgamount     int64  `protobuf:"varint,7,opt,name=exchgamount" json:"exchgamount,omitempty"`
	Exchgaddr       string `protobuf:"bytes,8,opt,name=exchgaddr" json:"exchgaddr,omitempty"`
	Waitcoinblocks  int32  `protobuf:"varint,9,opt,name=waitcoinblocks" json:"waitcoinblocks,omitempty"`
	Createtime      int64  `protobuf:"varint,10,opt,name=createtime" json:"createtime,omitempty"`
	Buyeraddr       string `protobuf:"bytes,11,opt,name=buyeraddr" json:"buyeraddr,omitempty"`
	Buyertime       int64  `protobuf:"varint,12,opt,name=buyertime" json:"buyertime,omitempty"`
	Buyercoinheight int64  `protobuf:"varint,13,opt,name=buyercoinheight" json:"buyercoinheight,omitempty"`
	Finishtime      int64  `protobuf:"varint,14,opt,name=finishtime" json:"finishtime,omitempty"`
}

func (m *ReceiptRelayBase) Reset()                    { *m = ReceiptRelayBase{} }
func (m *ReceiptRelayBase) String() string            { return proto.CompactTextString(m) }
func (*ReceiptRelayBase) ProtoMessage()               {}
func (*ReceiptRelayBase) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *ReceiptRelayBase) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

func (m *ReceiptRelayBase) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReceiptRelayBase) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptRelayBase) GetSellamount() int64 {
	if m != nil {
		return m.Sellamount
	}
	return 0
}

func (m *ReceiptRelayBase) GetExchgcoin() string {
	if m != nil {
		return m.Exchgcoin
	}
	return ""
}

func (m *ReceiptRelayBase) GetExchgamount() int64 {
	if m != nil {
		return m.Exchgamount
	}
	return 0
}

func (m *ReceiptRelayBase) GetExchgaddr() string {
	if m != nil {
		return m.Exchgaddr
	}
	return ""
}

func (m *ReceiptRelayBase) GetWaitcoinblocks() int32 {
	if m != nil {
		return m.Waitcoinblocks
	}
	return 0
}

func (m *ReceiptRelayBase) GetCreatetime() int64 {
	if m != nil {
		return m.Createtime
	}
	return 0
}

func (m *ReceiptRelayBase) GetBuyeraddr() string {
	if m != nil {
		return m.Buyeraddr
	}
	return ""
}

func (m *ReceiptRelayBase) GetBuyertime() int64 {
	if m != nil {
		return m.Buyertime
	}
	return 0
}

func (m *ReceiptRelayBase) GetBuyercoinheight() int64 {
	if m != nil {
		return m.Buyercoinheight
	}
	return 0
}

func (m *ReceiptRelayBase) GetFinishtime() int64 {
	if m != nil {
		return m.Finishtime
	}
	return 0
}

type ReceiptRelaySell struct {
	Base *ReceiptRelayBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
}

func (m *ReceiptRelaySell) Reset()                    { *m = ReceiptRelaySell{} }
func (m *ReceiptRelaySell) String() string            { return proto.CompactTextString(m) }
func (*ReceiptRelaySell) ProtoMessage()               {}
func (*ReceiptRelaySell) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

func (m *ReceiptRelaySell) GetBase() *ReceiptRelayBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptRelayBuy struct {
	Orderid     string `protobuf:"bytes,1,opt,name=orderid" json:"orderid,omitempty"`
	Buyeraddr   string `protobuf:"bytes,2,opt,name=buyeraddr" json:"buyeraddr,omitempty"`
	Buyamount   int64  `protobuf:"varint,3,opt,name=buyamount" json:"buyamount,omitempty"`
	Exchgcoin   string `protobuf:"bytes,4,opt,name=exchgcoin" json:"exchgcoin,omitempty"`
	Exchgamount int64  `protobuf:"varint,5,opt,name=exchgamount" json:"exchgamount,omitempty"`
	Exchgaddr   string `protobuf:"bytes,6,opt,name=exchgaddr" json:"exchgaddr,omitempty"`
	Buytxhash   string `protobuf:"bytes,7,opt,name=buytxhash" json:"buytxhash,omitempty"`
}

func (m *ReceiptRelayBuy) Reset()                    { *m = ReceiptRelayBuy{} }
func (m *ReceiptRelayBuy) String() string            { return proto.CompactTextString(m) }
func (*ReceiptRelayBuy) ProtoMessage()               {}
func (*ReceiptRelayBuy) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

func (m *ReceiptRelayBuy) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

func (m *ReceiptRelayBuy) GetBuyeraddr() string {
	if m != nil {
		return m.Buyeraddr
	}
	return ""
}

func (m *ReceiptRelayBuy) GetBuyamount() int64 {
	if m != nil {
		return m.Buyamount
	}
	return 0
}

func (m *ReceiptRelayBuy) GetExchgcoin() string {
	if m != nil {
		return m.Exchgcoin
	}
	return ""
}

func (m *ReceiptRelayBuy) GetExchgamount() int64 {
	if m != nil {
		return m.Exchgamount
	}
	return 0
}

func (m *ReceiptRelayBuy) GetExchgaddr() string {
	if m != nil {
		return m.Exchgaddr
	}
	return ""
}

func (m *ReceiptRelayBuy) GetBuytxhash() string {
	if m != nil {
		return m.Buytxhash
	}
	return ""
}

type ReceiptRelayRevoke struct {
	Base *ReceiptRelayBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
}

func (m *ReceiptRelayRevoke) Reset()                    { *m = ReceiptRelayRevoke{} }
func (m *ReceiptRelayRevoke) String() string            { return proto.CompactTextString(m) }
func (*ReceiptRelayRevoke) ProtoMessage()               {}
func (*ReceiptRelayRevoke) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

func (m *ReceiptRelayRevoke) GetBase() *ReceiptRelayBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptRelayVerify struct {
	Base *ReceiptRelayBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
}

func (m *ReceiptRelayVerify) Reset()                    { *m = ReceiptRelayVerify{} }
func (m *ReceiptRelayVerify) String() string            { return proto.CompactTextString(m) }
func (*ReceiptRelayVerify) ProtoMessage()               {}
func (*ReceiptRelayVerify) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

func (m *ReceiptRelayVerify) GetBase() *ReceiptRelayBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReqRelayAddrCoins struct {
	Addr       string   `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Status     int32    `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Coins      []string `protobuf:"bytes,3,rep,name=coins" json:"coins,omitempty"`
	PageNumber int32    `protobuf:"varint,4,opt,name=pageNumber" json:"pageNumber,omitempty"`
	PageSize   int32    `protobuf:"varint,5,opt,name=pageSize" json:"pageSize,omitempty"`
}

func (m *ReqRelayAddrCoins) Reset()                    { *m = ReqRelayAddrCoins{} }
func (m *ReqRelayAddrCoins) String() string            { return proto.CompactTextString(m) }
func (*ReqRelayAddrCoins) ProtoMessage()               {}
func (*ReqRelayAddrCoins) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

func (m *ReqRelayAddrCoins) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqRelayAddrCoins) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqRelayAddrCoins) GetCoins() []string {
	if m != nil {
		return m.Coins
	}
	return nil
}

func (m *ReqRelayAddrCoins) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *ReqRelayAddrCoins) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ReplyRelayOrders struct {
	Relayorders []*RelayOrder `protobuf:"bytes,1,rep,name=relayorders" json:"relayorders,omitempty"`
}

func (m *ReplyRelayOrders) Reset()                    { *m = ReplyRelayOrders{} }
func (m *ReplyRelayOrders) String() string            { return proto.CompactTextString(m) }
func (*ReplyRelayOrders) ProtoMessage()               {}
func (*ReplyRelayOrders) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

func (m *ReplyRelayOrders) GetRelayorders() []*RelayOrder {
	if m != nil {
		return m.Relayorders
	}
	return nil
}

type QueryRelayOrderParam struct {
	Status  RelayOrderStatus `protobuf:"varint,1,opt,name=status,enum=types.RelayOrderStatus" json:"status,omitempty"`
	Orderid string           `protobuf:"bytes,2,opt,name=orderid" json:"orderid,omitempty"`
}

func (m *QueryRelayOrderParam) Reset()                    { *m = QueryRelayOrderParam{} }
func (m *QueryRelayOrderParam) String() string            { return proto.CompactTextString(m) }
func (*QueryRelayOrderParam) ProtoMessage()               {}
func (*QueryRelayOrderParam) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{15} }

func (m *QueryRelayOrderParam) GetStatus() RelayOrderStatus {
	if m != nil {
		return m.Status
	}
	return RelayOrderStatus_unknown
}

func (m *QueryRelayOrderParam) GetOrderid() string {
	if m != nil {
		return m.Orderid
	}
	return ""
}

type QueryRelayOrderResult struct {
	Orders []*RelayOrder `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *QueryRelayOrderResult) Reset()                    { *m = QueryRelayOrderResult{} }
func (m *QueryRelayOrderResult) String() string            { return proto.CompactTextString(m) }
func (*QueryRelayOrderResult) ProtoMessage()               {}
func (*QueryRelayOrderResult) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{16} }

func (m *QueryRelayOrderResult) GetOrders() []*RelayOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

func init() {
	proto.RegisterType((*RelayAction)(nil), "types.RelayAction")
	proto.RegisterType((*RelaySell)(nil), "types.RelaySell")
	proto.RegisterType((*RelayOrder)(nil), "types.RelayOrder")
	proto.RegisterType((*RelayBuy)(nil), "types.RelayBuy")
	proto.RegisterType((*RelayRevokeSell)(nil), "types.RelayRevokeSell")
	proto.RegisterType((*RelayRevokeBuy)(nil), "types.RelayRevokeBuy")
	proto.RegisterType((*RelayVerify)(nil), "types.RelayVerify")
	proto.RegisterType((*RelayVerifyBTC)(nil), "types.RelayVerifyBTC")
	proto.RegisterType((*ReceiptRelayBase)(nil), "types.ReceiptRelayBase")
	proto.RegisterType((*ReceiptRelaySell)(nil), "types.ReceiptRelaySell")
	proto.RegisterType((*ReceiptRelayBuy)(nil), "types.ReceiptRelayBuy")
	proto.RegisterType((*ReceiptRelayRevoke)(nil), "types.ReceiptRelayRevoke")
	proto.RegisterType((*ReceiptRelayVerify)(nil), "types.ReceiptRelayVerify")
	proto.RegisterType((*ReqRelayAddrCoins)(nil), "types.ReqRelayAddrCoins")
	proto.RegisterType((*ReplyRelayOrders)(nil), "types.ReplyRelayOrders")
	proto.RegisterType((*QueryRelayOrderParam)(nil), "types.QueryRelayOrderParam")
	proto.RegisterType((*QueryRelayOrderResult)(nil), "types.QueryRelayOrderResult")
	proto.RegisterEnum("types.RelayOrderStatus", RelayOrderStatus_name, RelayOrderStatus_value)
}

func init() { proto.RegisterFile("relay.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x45, 0x51, 0xb2, 0x46, 0x89, 0xac, 0x2c, 0x9c, 0x94, 0x28, 0x8a, 0x42, 0x20, 0xda,
	0x42, 0x4d, 0x00, 0x17, 0x48, 0x0e, 0x05, 0x7a, 0x09, 0xe2, 0x1c, 0xea, 0x53, 0x7f, 0xd6, 0x45,
	0xef, 0x2b, 0x72, 0x6c, 0x11, 0xa6, 0x48, 0x75, 0xb9, 0xb4, 0xc5, 0xbe, 0x45, 0x6f, 0x7d, 0x82,
	0xde, 0xfb, 0x02, 0x7d, 0x8b, 0x3e, 0x41, 0x5f, 0xa4, 0x98, 0xe1, 0x8a, 0x5a, 0xc9, 0x89, 0x54,
	0x1f, 0x7a, 0xcb, 0x8d, 0xdf, 0xec, 0x37, 0x3b, 0x3f, 0x3b, 0xdf, 0x72, 0x61, 0xa8, 0x31, 0x53,
	0xf5, 0xd9, 0x52, 0x17, 0xa6, 0x10, 0x81, 0xa9, 0x97, 0x58, 0x46, 0x7f, 0x77, 0x60, 0x28, 0xc9,
	0xfc, 0x26, 0x36, 0x69, 0x91, 0x8b, 0x29, 0x04, 0xba, 0xc4, 0x2c, 0x0b, 0xbd, 0x89, 0x37, 0x1d,
	0xbe, 0x1c, 0x9f, 0x31, 0xed, 0x8c, 0x29, 0x97, 0x98, 0x65, 0x17, 0x47, 0xb2, 0x21, 0x88, 0x6f,
	0x60, 0xa8, 0x35, 0xde, 0x16, 0x37, 0xc8, 0xfc, 0x0e, 0xf3, 0x9f, 0xb9, 0x7c, 0xc9, 0xab, 0xd6,
	0xcb, 0x25, 0x8b, 0xcf, 0xa1, 0xab, 0x67, 0x55, 0x1d, 0xfa, 0xec, 0x74, 0xe2, 0x3a, 0x9d, 0x57,
	0xf5, 0xc5, 0x91, 0xe4, 0x65, 0xf1, 0x35, 0x80, 0xf5, 0x22, 0x72, 0x97, 0xc9, 0x4f, 0xef, 0x47,
	0x68, 0x5c, 0x1c, 0xaa, 0x38, 0x83, 0xbe, 0xbe, 0x45, 0x9d, 0x5e, 0xd5, 0x61, 0xc0, 0x5e, 0xc2,
	0xf5, 0xfa, 0x99, 0x57, 0x2e, 0x8e, 0xe4, 0x9a, 0xc4, 0x81, 0x9a, 0xcf, 0x99, 0x89, 0xc3, 0xde,
	0xfd, 0x40, 0x8d, 0xcb, 0xf9, 0x4f, 0x6f, 0x39, 0x50, 0x4b, 0x15, 0x23, 0xe8, 0x98, 0x3a, 0x84,
	0x89, 0x37, 0x0d, 0x64, 0xc7, 0xd4, 0xe7, 0x7d, 0x08, 0x6e, 0x55, 0x56, 0x61, 0xf4, 0xa7, 0x07,
	0x83, 0xb6, 0x69, 0xe2, 0x53, 0x00, 0xaa, 0x5b, 0x2d, 0x8a, 0x2a, 0x37, 0xdc, 0x5a, 0x5f, 0x3a,
	0x16, 0xf1, 0x09, 0x0c, 0x70, 0x15, 0xcf, 0xaf, 0xe3, 0x22, 0xcd, 0xb9, 0xce, 0x81, 0xdc, 0x18,
	0xc4, 0x04, 0x86, 0x0c, 0xac, 0x7b, 0xc0, 0xee, 0xae, 0xa9, 0xf5, 0x57, 0x49, 0xa2, 0x39, 0xfd,
	0xb5, 0x3f, 0x19, 0xc4, 0x17, 0x30, 0xba, 0x53, 0xa9, 0xa1, 0xbd, 0x66, 0x59, 0x11, 0xdf, 0x94,
	0x61, 0x9f, 0x13, 0xde, 0xb1, 0x46, 0x7f, 0xf9, 0x00, 0x9c, 0xf3, 0xf7, 0x3a, 0x41, 0x2d, 0x42,
	0xe8, 0x17, 0xf4, 0x91, 0x26, 0x9c, 0xf1, 0x40, 0xae, 0xa1, 0x78, 0x06, 0xbd, 0xd2, 0x28, 0x53,
	0x95, 0x7c, 0xea, 0x81, 0xb4, 0x68, 0xa7, 0x4c, 0xff, 0x5e, 0x99, 0x1f, 0xc3, 0x31, 0x23, 0xca,
	0x32, 0xe0, 0x2d, 0x5b, 0xbc, 0xdd, 0x82, 0xde, 0x81, 0x16, 0xf4, 0x0f, 0xb4, 0xe0, 0xf8, 0x70,
	0x0b, 0x06, 0xef, 0x6a, 0x01, 0x55, 0x10, 0x6b, 0x54, 0x06, 0x4d, 0xba, 0x40, 0x3e, 0x57, 0x5f,
	0x3a, 0x16, 0x8a, 0x32, 0xab, 0x6a, 0xd4, 0x1c, 0x65, 0xd8, 0x44, 0x69, 0x0d, 0xed, 0x2a, 0x3b,
	0x3f, 0x62, 0xe7, 0x8d, 0x41, 0x4c, 0xe1, 0x84, 0x01, 0x85, 0x9b, 0x63, 0x7a, 0x3d, 0x37, 0xe1,
	0x63, 0xe6, 0xec, 0x9a, 0x29, 0x8b, 0xab, 0x34, 0x4f, 0xcb, 0x39, 0x6f, 0x34, 0x6a, 0xb2, 0xd8,
	0x58, 0xa8, 0xff, 0x76, 0x83, 0x13, 0x5e, 0xb3, 0x28, 0xfa, 0x0c, 0x8e, 0xd7, 0x1a, 0x7a, 0xff,
	0xe9, 0x45, 0x2f, 0xe0, 0x64, 0x47, 0x9e, 0x7b, 0xc8, 0xcf, 0x61, 0xb4, 0xad, 0xb4, 0x3d, 0xdc,
	0xd7, 0xf6, 0x2a, 0x69, 0xc4, 0xb2, 0x7f, 0x7e, 0xcc, 0x6a, 0xae, 0xca, 0x39, 0xcf, 0xcf, 0x40,
	0x5a, 0x14, 0xfd, 0xee, 0xd9, 0x68, 0xad, 0xdc, 0xf6, 0x6c, 0x72, 0x0a, 0x81, 0x56, 0x77, 0x66,
	0x65, 0xf7, 0x68, 0x00, 0xf1, 0xcd, 0x2a, 0xcd, 0x13, 0x5c, 0xf1, 0xfc, 0x3d, 0x96, 0x6b, 0x48,
	0x4d, 0x5d, 0xa0, 0xbe, 0x99, 0x69, 0x95, 0xc7, 0x73, 0x2b, 0x32, 0xc7, 0xc2, 0x87, 0x47, 0x43,
	0xc0, 0x79, 0x05, 0xf6, 0x68, 0xd7, 0x86, 0xe8, 0x0f, 0x1f, 0xc6, 0x12, 0x63, 0x4c, 0x97, 0xa6,
	0x69, 0xb1, 0x2a, 0xf1, 0x3f, 0x2b, 0x64, 0xd0, 0x2a, 0xe4, 0x14, 0x82, 0xe2, 0x2e, 0x47, 0xcd,
	0xc9, 0x0d, 0x64, 0x03, 0x76, 0x74, 0xd3, 0xdd, 0x7f, 0x3d, 0x7c, 0xd0, 0xc6, 0x3e, 0x6d, 0x44,
	0xaf, 0xb7, 0xcf, 0x89, 0xc7, 0xfb, 0x05, 0x74, 0x67, 0xaa, 0x44, 0xfb, 0x4f, 0xfb, 0xa8, 0xbd,
	0xd8, 0xb7, 0x8f, 0x53, 0x32, 0x29, 0xfa, 0xc7, 0x23, 0x7d, 0x38, 0x4b, 0xfb, 0x66, 0x7e, 0xbb,
	0xe8, 0xce, 0xbb, 0x8b, 0xde, 0xba, 0x0f, 0x37, 0x86, 0xff, 0xf9, 0xd6, 0x6f, 0x62, 0x5b, 0x9d,
	0xf5, 0xdb, 0xcc, 0xac, 0xd4, 0xde, 0x80, 0x70, 0x8b, 0x6c, 0xe4, 0xfd, 0xb0, 0x46, 0xed, 0x6c,
	0x61, 0x55, 0xff, 0xa0, 0x2d, 0x7e, 0xf3, 0xe0, 0x89, 0xc4, 0x5f, 0x9a, 0x07, 0x48, 0x92, 0xe8,
	0xb7, 0x45, 0x9a, 0x97, 0x42, 0x40, 0x97, 0x4b, 0x6a, 0x5a, 0xcd, 0xdf, 0xef, 0xfd, 0xe5, 0x9c,
	0x42, 0x40, 0xdd, 0x2a, 0x43, 0x7f, 0xe2, 0x93, 0xa0, 0x18, 0xd0, 0x90, 0x2c, 0xd5, 0x35, 0x7e,
	0x57, 0x2d, 0x66, 0xa8, 0xb9, 0xb5, 0x81, 0x74, 0x2c, 0xf4, 0x23, 0x22, 0x74, 0x99, 0xfe, 0x8a,
	0xdc, 0xd8, 0x40, 0xb6, 0x38, 0xfa, 0x96, 0x06, 0x68, 0x99, 0xd5, 0x9b, 0x3f, 0x61, 0x29, 0x5e,
	0xd9, 0xb7, 0x13, 0x9f, 0x7a, 0x19, 0x7a, 0x13, 0x7f, 0x3a, 0x7c, 0xf9, 0xc4, 0x7d, 0x20, 0x30,
	0x51, 0xba, 0xac, 0x48, 0xc1, 0xe9, 0x8f, 0x15, 0x6a, 0x67, 0xa3, 0x1f, 0x94, 0x56, 0x0b, 0xf1,
	0x55, 0x5b, 0x0a, 0x15, 0x38, 0x72, 0x7a, 0xb4, 0xe6, 0x5d, 0xf2, 0x72, 0x5b, 0xa3, 0x33, 0x7d,
	0x9d, 0xed, 0x1b, 0xf7, 0x1c, 0x9e, 0xee, 0x84, 0x90, 0x58, 0x56, 0x99, 0x11, 0x5f, 0x42, 0xef,
	0x50, 0xae, 0x96, 0xf0, 0x5c, 0x53, 0xbd, 0xdb, 0x91, 0xc5, 0x10, 0xfa, 0x55, 0x7e, 0x93, 0x17,
	0x77, 0xf9, 0xf8, 0x88, 0xc0, 0x12, 0xf3, 0x24, 0xcd, 0xaf, 0xc7, 0x1e, 0x01, 0xba, 0x0d, 0x08,
	0x74, 0xc4, 0x08, 0x20, 0x2e, 0xf2, 0xab, 0x54, 0x2f, 0x08, 0xfb, 0xe2, 0x11, 0x1c, 0x37, 0x4a,
	0xc4, 0x64, 0xdc, 0x25, 0x14, 0xab, 0x3c, 0xc6, 0x0c, 0x93, 0x71, 0x40, 0x8e, 0xa4, 0xcf, 0xa2,
	0x32, 0xe3, 0xde, 0xac, 0xc7, 0x6f, 0xd0, 0x57, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xa2,
	0x4d, 0x77, 0x92, 0x0a, 0x00, 0x00,
}
