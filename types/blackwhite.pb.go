// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blackwhite.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AddressResult struct {
	Addr       string   `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Amount     int64    `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	HashValues [][]byte `protobuf:"bytes,3,rep,name=hashValues,proto3" json:"hashValues,omitempty"`
	IsBlack    []bool   `protobuf:"varint,4,rep,packed,name=isBlack" json:"isBlack,omitempty"`
	ShowSecret string   `protobuf:"bytes,5,opt,name=showSecret" json:"showSecret,omitempty"`
}

func (m *AddressResult) Reset()                    { *m = AddressResult{} }
func (m *AddressResult) String() string            { return proto.CompactTextString(m) }
func (*AddressResult) ProtoMessage()               {}
func (*AddressResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AddressResult) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *AddressResult) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AddressResult) GetHashValues() [][]byte {
	if m != nil {
		return m.HashValues
	}
	return nil
}

func (m *AddressResult) GetIsBlack() []bool {
	if m != nil {
		return m.IsBlack
	}
	return nil
}

func (m *AddressResult) GetShowSecret() string {
	if m != nil {
		return m.ShowSecret
	}
	return ""
}

// order
type BlackwhiteRound struct {
	// txhash
	GameID string `protobuf:"bytes,1,opt,name=gameID" json:"gameID,omitempty"`
	// create -> play -> show -> done(timeout done)
	Status int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	// 游戏押金可大于
	PlayAmount int64 `protobuf:"varint,3,opt,name=playAmount" json:"playAmount,omitempty"`
	// 游戏人数
	PlayerCount int32 `protobuf:"varint,4,opt,name=playerCount" json:"playerCount,omitempty"`
	// 当前游戏人数
	CurPlayerCount int32 `protobuf:"varint,5,opt,name=curPlayerCount" json:"curPlayerCount,omitempty"`
	// 游戏需要比对次数
	Loop int32 `protobuf:"varint,6,opt,name=loop" json:"loop,omitempty"`
	// 当前出示密钥人数
	CurShowCount int32 `protobuf:"varint,7,opt,name=curShowCount" json:"curShowCount,omitempty"`
	// 创建游戏时间
	CreateTime int64 `protobuf:"varint,8,opt,name=createTime" json:"createTime,omitempty"`
	// 出示密钥开始时间
	ShowTime int64 `protobuf:"varint,9,opt,name=showTime" json:"showTime,omitempty"`
	// 超时时间
	Timeout int64 `protobuf:"varint,14,opt,name=timeout" json:"timeout,omitempty"`
	// 创建游戏地址
	CreateAddr string `protobuf:"bytes,10,opt,name=createAddr" json:"createAddr,omitempty"`
	// 游戏名称
	GameName string `protobuf:"bytes,11,opt,name=gameName" json:"gameName,omitempty"`
	// 游戏加密结果
	AddrResult []*AddressResult `protobuf:"bytes,12,rep,name=addrResult" json:"addrResult,omitempty"`
	// 游戏赢家
	Winner []string `protobuf:"bytes,13,rep,name=winner" json:"winner,omitempty"`
}

func (m *BlackwhiteRound) Reset()                    { *m = BlackwhiteRound{} }
func (m *BlackwhiteRound) String() string            { return proto.CompactTextString(m) }
func (*BlackwhiteRound) ProtoMessage()               {}
func (*BlackwhiteRound) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *BlackwhiteRound) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *BlackwhiteRound) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BlackwhiteRound) GetPlayAmount() int64 {
	if m != nil {
		return m.PlayAmount
	}
	return 0
}

func (m *BlackwhiteRound) GetPlayerCount() int32 {
	if m != nil {
		return m.PlayerCount
	}
	return 0
}

func (m *BlackwhiteRound) GetCurPlayerCount() int32 {
	if m != nil {
		return m.CurPlayerCount
	}
	return 0
}

func (m *BlackwhiteRound) GetLoop() int32 {
	if m != nil {
		return m.Loop
	}
	return 0
}

func (m *BlackwhiteRound) GetCurShowCount() int32 {
	if m != nil {
		return m.CurShowCount
	}
	return 0
}

func (m *BlackwhiteRound) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *BlackwhiteRound) GetShowTime() int64 {
	if m != nil {
		return m.ShowTime
	}
	return 0
}

func (m *BlackwhiteRound) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *BlackwhiteRound) GetCreateAddr() string {
	if m != nil {
		return m.CreateAddr
	}
	return ""
}

func (m *BlackwhiteRound) GetGameName() string {
	if m != nil {
		return m.GameName
	}
	return ""
}

func (m *BlackwhiteRound) GetAddrResult() []*AddressResult {
	if m != nil {
		return m.AddrResult
	}
	return nil
}

func (m *BlackwhiteRound) GetWinner() []string {
	if m != nil {
		return m.Winner
	}
	return nil
}

// actions
type BlackwhiteAction struct {
	// Types that are valid to be assigned to Value:
	//	*BlackwhiteAction_Create
	//	*BlackwhiteAction_Cancel
	//	*BlackwhiteAction_Play
	//	*BlackwhiteAction_Show
	//	*BlackwhiteAction_TimeoutDone
	Value isBlackwhiteAction_Value `protobuf_oneof:"value"`
	Ty    int32                    `protobuf:"varint,6,opt,name=ty" json:"ty,omitempty"`
}

func (m *BlackwhiteAction) Reset()                    { *m = BlackwhiteAction{} }
func (m *BlackwhiteAction) String() string            { return proto.CompactTextString(m) }
func (*BlackwhiteAction) ProtoMessage()               {}
func (*BlackwhiteAction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type isBlackwhiteAction_Value interface {
	isBlackwhiteAction_Value()
}

type BlackwhiteAction_Create struct {
	Create *BlackwhiteCreate `protobuf:"bytes,1,opt,name=create,oneof"`
}
type BlackwhiteAction_Cancel struct {
	Cancel *BlackwhiteCancel `protobuf:"bytes,2,opt,name=cancel,oneof"`
}
type BlackwhiteAction_Play struct {
	Play *BlackwhitePlay `protobuf:"bytes,3,opt,name=play,oneof"`
}
type BlackwhiteAction_Show struct {
	Show *BlackwhiteShow `protobuf:"bytes,4,opt,name=show,oneof"`
}
type BlackwhiteAction_TimeoutDone struct {
	TimeoutDone *BlackwhiteTimeoutDone `protobuf:"bytes,5,opt,name=timeoutDone,oneof"`
}

func (*BlackwhiteAction_Create) isBlackwhiteAction_Value()      {}
func (*BlackwhiteAction_Cancel) isBlackwhiteAction_Value()      {}
func (*BlackwhiteAction_Play) isBlackwhiteAction_Value()        {}
func (*BlackwhiteAction_Show) isBlackwhiteAction_Value()        {}
func (*BlackwhiteAction_TimeoutDone) isBlackwhiteAction_Value() {}

func (m *BlackwhiteAction) GetValue() isBlackwhiteAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *BlackwhiteAction) GetCreate() *BlackwhiteCreate {
	if x, ok := m.GetValue().(*BlackwhiteAction_Create); ok {
		return x.Create
	}
	return nil
}

func (m *BlackwhiteAction) GetCancel() *BlackwhiteCancel {
	if x, ok := m.GetValue().(*BlackwhiteAction_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *BlackwhiteAction) GetPlay() *BlackwhitePlay {
	if x, ok := m.GetValue().(*BlackwhiteAction_Play); ok {
		return x.Play
	}
	return nil
}

func (m *BlackwhiteAction) GetShow() *BlackwhiteShow {
	if x, ok := m.GetValue().(*BlackwhiteAction_Show); ok {
		return x.Show
	}
	return nil
}

func (m *BlackwhiteAction) GetTimeoutDone() *BlackwhiteTimeoutDone {
	if x, ok := m.GetValue().(*BlackwhiteAction_TimeoutDone); ok {
		return x.TimeoutDone
	}
	return nil
}

func (m *BlackwhiteAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BlackwhiteAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BlackwhiteAction_OneofMarshaler, _BlackwhiteAction_OneofUnmarshaler, _BlackwhiteAction_OneofSizer, []interface{}{
		(*BlackwhiteAction_Create)(nil),
		(*BlackwhiteAction_Cancel)(nil),
		(*BlackwhiteAction_Play)(nil),
		(*BlackwhiteAction_Show)(nil),
		(*BlackwhiteAction_TimeoutDone)(nil),
	}
}

func _BlackwhiteAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BlackwhiteAction)
	// value
	switch x := m.Value.(type) {
	case *BlackwhiteAction_Create:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Create); err != nil {
			return err
		}
	case *BlackwhiteAction_Cancel:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case *BlackwhiteAction_Play:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Play); err != nil {
			return err
		}
	case *BlackwhiteAction_Show:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Show); err != nil {
			return err
		}
	case *BlackwhiteAction_TimeoutDone:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimeoutDone); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BlackwhiteAction.Value has unexpected type %T", x)
	}
	return nil
}

func _BlackwhiteAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BlackwhiteAction)
	switch tag {
	case 1: // value.create
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlackwhiteCreate)
		err := b.DecodeMessage(msg)
		m.Value = &BlackwhiteAction_Create{msg}
		return true, err
	case 2: // value.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlackwhiteCancel)
		err := b.DecodeMessage(msg)
		m.Value = &BlackwhiteAction_Cancel{msg}
		return true, err
	case 3: // value.play
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlackwhitePlay)
		err := b.DecodeMessage(msg)
		m.Value = &BlackwhiteAction_Play{msg}
		return true, err
	case 4: // value.show
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlackwhiteShow)
		err := b.DecodeMessage(msg)
		m.Value = &BlackwhiteAction_Show{msg}
		return true, err
	case 5: // value.timeoutDone
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlackwhiteTimeoutDone)
		err := b.DecodeMessage(msg)
		m.Value = &BlackwhiteAction_TimeoutDone{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BlackwhiteAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BlackwhiteAction)
	// value
	switch x := m.Value.(type) {
	case *BlackwhiteAction_Create:
		s := proto.Size(x.Create)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BlackwhiteAction_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BlackwhiteAction_Play:
		s := proto.Size(x.Play)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BlackwhiteAction_Show:
		s := proto.Size(x.Show)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BlackwhiteAction_TimeoutDone:
		s := proto.Size(x.TimeoutDone)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BlackwhiteCreate struct {
	PlayAmount  int64  `protobuf:"varint,1,opt,name=playAmount" json:"playAmount,omitempty"`
	PlayerCount int32  `protobuf:"varint,2,opt,name=playerCount" json:"playerCount,omitempty"`
	Timeout     int64  `protobuf:"varint,3,opt,name=timeout" json:"timeout,omitempty"`
	GameName    string `protobuf:"bytes,4,opt,name=gameName" json:"gameName,omitempty"`
}

func (m *BlackwhiteCreate) Reset()                    { *m = BlackwhiteCreate{} }
func (m *BlackwhiteCreate) String() string            { return proto.CompactTextString(m) }
func (*BlackwhiteCreate) ProtoMessage()               {}
func (*BlackwhiteCreate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *BlackwhiteCreate) GetPlayAmount() int64 {
	if m != nil {
		return m.PlayAmount
	}
	return 0
}

func (m *BlackwhiteCreate) GetPlayerCount() int32 {
	if m != nil {
		return m.PlayerCount
	}
	return 0
}

func (m *BlackwhiteCreate) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *BlackwhiteCreate) GetGameName() string {
	if m != nil {
		return m.GameName
	}
	return ""
}

type BlackwhiteCancel struct {
	GameID string `protobuf:"bytes,1,opt,name=gameID" json:"gameID,omitempty"`
}

func (m *BlackwhiteCancel) Reset()                    { *m = BlackwhiteCancel{} }
func (m *BlackwhiteCancel) String() string            { return proto.CompactTextString(m) }
func (*BlackwhiteCancel) ProtoMessage()               {}
func (*BlackwhiteCancel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *BlackwhiteCancel) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

type BlackwhitePlay struct {
	GameID  string `protobuf:"bytes,1,opt,name=gameID" json:"gameID,omitempty"`
	Amount  int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	IsBlack []bool `protobuf:"varint,3,rep,packed,name=isBlack" json:"isBlack,omitempty"`
}

func (m *BlackwhitePlay) Reset()                    { *m = BlackwhitePlay{} }
func (m *BlackwhitePlay) String() string            { return proto.CompactTextString(m) }
func (*BlackwhitePlay) ProtoMessage()               {}
func (*BlackwhitePlay) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *BlackwhitePlay) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *BlackwhitePlay) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *BlackwhitePlay) GetIsBlack() []bool {
	if m != nil {
		return m.IsBlack
	}
	return nil
}

type BlackwhiteShow struct {
	GameID string `protobuf:"bytes,1,opt,name=gameID" json:"gameID,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
}

func (m *BlackwhiteShow) Reset()                    { *m = BlackwhiteShow{} }
func (m *BlackwhiteShow) String() string            { return proto.CompactTextString(m) }
func (*BlackwhiteShow) ProtoMessage()               {}
func (*BlackwhiteShow) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *BlackwhiteShow) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *BlackwhiteShow) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type BlackwhiteTimeoutDone struct {
	GameID string `protobuf:"bytes,1,opt,name=gameID" json:"gameID,omitempty"`
}

func (m *BlackwhiteTimeoutDone) Reset()                    { *m = BlackwhiteTimeoutDone{} }
func (m *BlackwhiteTimeoutDone) String() string            { return proto.CompactTextString(m) }
func (*BlackwhiteTimeoutDone) ProtoMessage()               {}
func (*BlackwhiteTimeoutDone) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *BlackwhiteTimeoutDone) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

// logs
type ReceiptBlackwhite struct {
	Round *BlackwhiteRound `protobuf:"bytes,1,opt,name=round" json:"round,omitempty"`
}

func (m *ReceiptBlackwhite) Reset()                    { *m = ReceiptBlackwhite{} }
func (m *ReceiptBlackwhite) String() string            { return proto.CompactTextString(m) }
func (*ReceiptBlackwhite) ProtoMessage()               {}
func (*ReceiptBlackwhite) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ReceiptBlackwhite) GetRound() *BlackwhiteRound {
	if m != nil {
		return m.Round
	}
	return nil
}

type ReceiptBlackwhiteStatus struct {
	GameID string `protobuf:"bytes,1,opt,name=gameID" json:"gameID,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	// 记录上一次状态
	PrevStatus int32  `protobuf:"varint,4,opt,name=prevStatus" json:"prevStatus,omitempty"`
	Addr       string `protobuf:"bytes,5,opt,name=addr" json:"addr,omitempty"`
}

func (m *ReceiptBlackwhiteStatus) Reset()                    { *m = ReceiptBlackwhiteStatus{} }
func (m *ReceiptBlackwhiteStatus) String() string            { return proto.CompactTextString(m) }
func (*ReceiptBlackwhiteStatus) ProtoMessage()               {}
func (*ReceiptBlackwhiteStatus) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ReceiptBlackwhiteStatus) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *ReceiptBlackwhiteStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptBlackwhiteStatus) GetPrevStatus() int32 {
	if m != nil {
		return m.PrevStatus
	}
	return 0
}

func (m *ReceiptBlackwhiteStatus) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReqBlackwhiteRoundInfo struct {
	GameID string `protobuf:"bytes,1,opt,name=gameID" json:"gameID,omitempty"`
}

func (m *ReqBlackwhiteRoundInfo) Reset()                    { *m = ReqBlackwhiteRoundInfo{} }
func (m *ReqBlackwhiteRoundInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqBlackwhiteRoundInfo) ProtoMessage()               {}
func (*ReqBlackwhiteRoundInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ReqBlackwhiteRoundInfo) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

type ReplyBlackwhiteRoundInfo struct {
	Round *BlackwhiteRound `protobuf:"bytes,1,opt,name=round" json:"round,omitempty"`
}

func (m *ReplyBlackwhiteRoundInfo) Reset()                    { *m = ReplyBlackwhiteRoundInfo{} }
func (m *ReplyBlackwhiteRoundInfo) String() string            { return proto.CompactTextString(m) }
func (*ReplyBlackwhiteRoundInfo) ProtoMessage()               {}
func (*ReplyBlackwhiteRoundInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *ReplyBlackwhiteRoundInfo) GetRound() *BlackwhiteRound {
	if m != nil {
		return m.Round
	}
	return nil
}

type ReqBlackwhiteRoundList struct {
	// 优先根据status查询,status不可为空
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// 二级搜索，如果要查询一个地址下的所有game信息，可以根据status，分多次查询，这样规避存储数据时的臃余情况
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *ReqBlackwhiteRoundList) Reset()                    { *m = ReqBlackwhiteRoundList{} }
func (m *ReqBlackwhiteRoundList) String() string            { return proto.CompactTextString(m) }
func (*ReqBlackwhiteRoundList) ProtoMessage()               {}
func (*ReqBlackwhiteRoundList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *ReqBlackwhiteRoundList) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqBlackwhiteRoundList) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ReplyBlackwhiteRoundList struct {
	Round []*BlackwhiteRound `protobuf:"bytes,1,rep,name=round" json:"round,omitempty"`
}

func (m *ReplyBlackwhiteRoundList) Reset()                    { *m = ReplyBlackwhiteRoundList{} }
func (m *ReplyBlackwhiteRoundList) String() string            { return proto.CompactTextString(m) }
func (*ReplyBlackwhiteRoundList) ProtoMessage()               {}
func (*ReplyBlackwhiteRoundList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ReplyBlackwhiteRoundList) GetRound() []*BlackwhiteRound {
	if m != nil {
		return m.Round
	}
	return nil
}

func init() {
	proto.RegisterType((*AddressResult)(nil), "types.AddressResult")
	proto.RegisterType((*BlackwhiteRound)(nil), "types.BlackwhiteRound")
	proto.RegisterType((*BlackwhiteAction)(nil), "types.BlackwhiteAction")
	proto.RegisterType((*BlackwhiteCreate)(nil), "types.BlackwhiteCreate")
	proto.RegisterType((*BlackwhiteCancel)(nil), "types.BlackwhiteCancel")
	proto.RegisterType((*BlackwhitePlay)(nil), "types.BlackwhitePlay")
	proto.RegisterType((*BlackwhiteShow)(nil), "types.BlackwhiteShow")
	proto.RegisterType((*BlackwhiteTimeoutDone)(nil), "types.BlackwhiteTimeoutDone")
	proto.RegisterType((*ReceiptBlackwhite)(nil), "types.ReceiptBlackwhite")
	proto.RegisterType((*ReceiptBlackwhiteStatus)(nil), "types.ReceiptBlackwhiteStatus")
	proto.RegisterType((*ReqBlackwhiteRoundInfo)(nil), "types.ReqBlackwhiteRoundInfo")
	proto.RegisterType((*ReplyBlackwhiteRoundInfo)(nil), "types.ReplyBlackwhiteRoundInfo")
	proto.RegisterType((*ReqBlackwhiteRoundList)(nil), "types.ReqBlackwhiteRoundList")
	proto.RegisterType((*ReplyBlackwhiteRoundList)(nil), "types.ReplyBlackwhiteRoundList")
}

func init() { proto.RegisterFile("blackwhite.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 676 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xad, 0xe3, 0x38, 0x69, 0xaf, 0xdb, 0x7c, 0xfd, 0x46, 0xb4, 0x1d, 0x21, 0x84, 0x2c, 0x2f,
	0x50, 0x04, 0xa8, 0x40, 0xe0, 0x01, 0x9a, 0xb6, 0x8b, 0x14, 0x21, 0x84, 0xa6, 0x15, 0x0b, 0x76,
	0xae, 0x33, 0x10, 0x0b, 0xc7, 0x0e, 0xf6, 0xb8, 0x51, 0x16, 0xbc, 0x00, 0x7b, 0x1e, 0x83, 0xa7,
	0xe0, 0xc5, 0xd0, 0xbd, 0xe3, 0xc6, 0xe3, 0xc4, 0x69, 0x05, 0xbb, 0xdc, 0xbf, 0x99, 0x33, 0xf7,
	0x1c, 0x9f, 0xc0, 0xfe, 0x75, 0x1c, 0x84, 0x5f, 0xe7, 0x93, 0x48, 0xc9, 0xe3, 0x59, 0x96, 0xaa,
	0x94, 0x39, 0x6a, 0x31, 0x93, 0xb9, 0xff, 0xd3, 0x82, 0xbd, 0xe1, 0x78, 0x9c, 0xc9, 0x3c, 0x17,
	0x32, 0x2f, 0x62, 0xc5, 0x18, 0xb4, 0x83, 0xf1, 0x38, 0xe3, 0x96, 0x67, 0xf5, 0x77, 0x04, 0xfd,
	0x66, 0x87, 0xd0, 0x09, 0xa6, 0x69, 0x91, 0x28, 0xde, 0xf2, 0xac, 0xbe, 0x2d, 0xca, 0x88, 0x3d,
	0x06, 0x98, 0x04, 0xf9, 0xe4, 0x63, 0x10, 0x17, 0x32, 0xe7, 0xb6, 0x67, 0xf7, 0x77, 0x85, 0x91,
	0x61, 0x1c, 0xba, 0x51, 0x7e, 0x8a, 0x57, 0xf3, 0xb6, 0x67, 0xf7, 0xb7, 0xc5, 0x6d, 0x88, 0x93,
	0xf9, 0x24, 0x9d, 0x5f, 0xca, 0x30, 0x93, 0x8a, 0x3b, 0x74, 0x97, 0x91, 0xf1, 0x7f, 0xdb, 0xf0,
	0xdf, 0xe9, 0x12, 0xb3, 0x48, 0x8b, 0x64, 0x8c, 0x28, 0xbe, 0x04, 0x53, 0x79, 0x71, 0x5e, 0x62,
	0x2b, 0x23, 0xcc, 0xe7, 0x2a, 0x50, 0x45, 0x4e, 0xe8, 0x1c, 0x51, 0x46, 0x78, 0xc7, 0x2c, 0x0e,
	0x16, 0x43, 0x8d, 0xdc, 0x26, 0xe4, 0x46, 0x86, 0x79, 0xe0, 0x62, 0x24, 0xb3, 0x33, 0x6a, 0x68,
	0xd3, 0xb0, 0x99, 0x62, 0x4f, 0xa0, 0x17, 0x16, 0xd9, 0x07, 0xa3, 0xc9, 0xa1, 0xa6, 0x95, 0x2c,
	0xee, 0x2c, 0x4e, 0xd3, 0x19, 0xef, 0x50, 0x95, 0x7e, 0x33, 0x1f, 0x76, 0xc3, 0x22, 0xbb, 0x9c,
	0xa4, 0x73, 0x3d, 0xd9, 0xa5, 0x5a, 0x2d, 0x87, 0x08, 0xc3, 0x4c, 0x06, 0x4a, 0x5e, 0x45, 0x53,
	0xc9, 0xb7, 0x35, 0xc2, 0x2a, 0xc3, 0x1e, 0xc2, 0x36, 0xee, 0x84, 0xaa, 0x3b, 0x54, 0x5d, 0xc6,
	0xb8, 0x5b, 0x15, 0x4d, 0x65, 0x5a, 0x28, 0xde, 0xa3, 0xd2, 0x6d, 0x58, 0x9d, 0x8a, 0xc4, 0x72,
	0xd0, 0xbb, 0xad, 0x32, 0x78, 0x2a, 0x6e, 0xee, 0x7d, 0x30, 0x95, 0xdc, 0xa5, 0xea, 0x32, 0x66,
	0x6f, 0x00, 0x90, 0x71, 0xad, 0x05, 0xbe, 0xeb, 0xd9, 0x7d, 0x77, 0xf0, 0xe0, 0x98, 0xb4, 0x72,
	0x5c, 0xd3, 0x89, 0x30, 0xfa, 0x90, 0x81, 0x79, 0x94, 0x24, 0x32, 0xe3, 0x7b, 0x9e, 0x8d, 0xcc,
	0xe8, 0xc8, 0xff, 0xd5, 0x82, 0xfd, 0x8a, 0xc5, 0x61, 0xa8, 0xa2, 0x34, 0x61, 0xaf, 0xa0, 0xa3,
	0xc1, 0x10, 0x8d, 0xee, 0xe0, 0xa8, 0x3c, 0xbe, 0x6a, 0x3c, 0xa3, 0xf2, 0x68, 0x4b, 0x94, 0x8d,
	0x34, 0x12, 0x24, 0xa1, 0x8c, 0x89, 0xe1, 0xc6, 0x11, 0x2a, 0xd3, 0x08, 0xfd, 0x62, 0xcf, 0xa0,
	0x8d, 0x4c, 0x12, 0xed, 0xee, 0xe0, 0x60, 0x6d, 0x00, 0xe9, 0x1b, 0x6d, 0x09, 0x6a, 0xc2, 0x66,
	0xdc, 0x2b, 0x49, 0xa0, 0xa9, 0x19, 0x19, 0xc3, 0x66, 0x6c, 0x62, 0x27, 0xe0, 0x96, 0x9b, 0x3e,
	0x4f, 0x13, 0x49, 0x8a, 0x70, 0x07, 0x8f, 0xd6, 0x66, 0xae, 0xaa, 0x9e, 0xd1, 0x96, 0x30, 0x47,
	0x58, 0x0f, 0x5a, 0x6a, 0x51, 0x8a, 0xa5, 0xa5, 0x16, 0xa7, 0x5d, 0x70, 0x6e, 0xf0, 0x83, 0xf1,
	0x7f, 0x58, 0xe6, 0xbe, 0xf4, 0x1a, 0x56, 0x64, 0x6c, 0xdd, 0x27, 0xe3, 0xd6, 0xba, 0x8c, 0x0d,
	0xa9, 0xd8, 0x75, 0xa9, 0x98, 0x52, 0x68, 0xd7, 0xa5, 0xe0, 0x3f, 0xad, 0x61, 0xd1, 0x5b, 0xdd,
	0xf0, 0x09, 0xfa, 0x9f, 0xa0, 0x57, 0x5f, 0xed, 0x5d, 0x1f, 0x6b, 0xa3, 0x95, 0x18, 0x56, 0x61,
	0xd7, 0xac, 0xc2, 0x3f, 0x31, 0xcf, 0x46, 0x26, 0xee, 0x34, 0x02, 0x6d, 0x28, 0x2d, 0x9d, 0xd7,
	0x91, 0xff, 0x02, 0x0e, 0x1a, 0x79, 0xd9, 0xf8, 0x9c, 0x21, 0xfc, 0x2f, 0x64, 0x28, 0xa3, 0x99,
	0xaa, 0xe6, 0xd8, 0x73, 0x70, 0x32, 0xf4, 0xa1, 0x52, 0xb6, 0x87, 0x6b, 0x8c, 0x93, 0x4b, 0x09,
	0xdd, 0xe4, 0x7f, 0x87, 0xa3, 0xb5, 0x23, 0x2e, 0xb5, 0x2f, 0xfd, 0x8b, 0x8f, 0x65, 0xf2, 0x46,
	0x4f, 0x97, 0x36, 0x65, 0x64, 0x96, 0x8e, 0xed, 0x54, 0x8e, 0xed, 0xbf, 0x84, 0x43, 0x21, 0xbf,
	0xad, 0x60, 0xbb, 0x48, 0x3e, 0xa7, 0x1b, 0xdf, 0x3c, 0x02, 0x2e, 0xe4, 0x2c, 0x5e, 0x34, 0xcd,
	0xfc, 0xdd, 0xd3, 0xdf, 0x36, 0xdd, 0xfd, 0x2e, 0xca, 0x95, 0xf1, 0x42, 0xab, 0xf6, 0x42, 0x0e,
	0xdd, 0x40, 0x9b, 0x4b, 0xc9, 0xdc, 0x6d, 0xb8, 0x09, 0x15, 0x9d, 0x66, 0xa0, 0xb2, 0xef, 0x45,
	0x75, 0xdd, 0xa1, 0xff, 0xbd, 0xd7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xa8, 0x52, 0xf1,
	0x0b, 0x07, 0x00, 0x00,
}
