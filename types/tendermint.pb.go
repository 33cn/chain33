// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tendermint.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	tendermint.proto

It has these top-level messages:
	PartSetHeader
	BlockID
	TendermintBitArray
	Vote
	TendermintCommit
	TendermintBlockInfo
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PartSetHeader struct {
	Total int32  `protobuf:"varint,1,opt,name=Total" json:"Total,omitempty"`
	Hash  []byte `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (m *PartSetHeader) Reset()                    { *m = PartSetHeader{} }
func (m *PartSetHeader) String() string            { return proto.CompactTextString(m) }
func (*PartSetHeader) ProtoMessage()               {}
func (*PartSetHeader) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *PartSetHeader) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PartSetHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type BlockID struct {
	Hash        []byte         `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	PartsHeader *PartSetHeader `protobuf:"bytes,2,opt,name=PartsHeader" json:"PartsHeader,omitempty"`
}

func (m *BlockID) Reset()                    { *m = BlockID{} }
func (m *BlockID) String() string            { return proto.CompactTextString(m) }
func (*BlockID) ProtoMessage()               {}
func (*BlockID) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *BlockID) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockID) GetPartsHeader() *PartSetHeader {
	if m != nil {
		return m.PartsHeader
	}
	return nil
}

type TendermintBitArray struct {
	Bits  int32    `protobuf:"varint,1,opt,name=Bits" json:"Bits,omitempty"`
	Elems []uint64 `protobuf:"varint,2,rep,packed,name=Elems" json:"Elems,omitempty"`
}

func (m *TendermintBitArray) Reset()                    { *m = TendermintBitArray{} }
func (m *TendermintBitArray) String() string            { return proto.CompactTextString(m) }
func (*TendermintBitArray) ProtoMessage()               {}
func (*TendermintBitArray) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *TendermintBitArray) GetBits() int32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *TendermintBitArray) GetElems() []uint64 {
	if m != nil {
		return m.Elems
	}
	return nil
}

type Vote struct {
	ValidatorAddress []byte   `protobuf:"bytes,1,opt,name=ValidatorAddress,proto3" json:"ValidatorAddress,omitempty"`
	ValidatorIndex   int32    `protobuf:"varint,2,opt,name=ValidatorIndex" json:"ValidatorIndex,omitempty"`
	Height           int64    `protobuf:"varint,3,opt,name=Height" json:"Height,omitempty"`
	Round            int32    `protobuf:"varint,4,opt,name=Round" json:"Round,omitempty"`
	Timestamp        int64    `protobuf:"varint,5,opt,name=Timestamp" json:"Timestamp,omitempty"`
	Type             uint32   `protobuf:"varint,6,opt,name=Type" json:"Type,omitempty"`
	BlockID          *BlockID `protobuf:"bytes,7,opt,name=BlockID" json:"BlockID,omitempty"`
	Signature        []byte   `protobuf:"bytes,8,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (m *Vote) Reset()                    { *m = Vote{} }
func (m *Vote) String() string            { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()               {}
func (*Vote) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *Vote) GetValidatorAddress() []byte {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}

func (m *Vote) GetValidatorIndex() int32 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

func (m *Vote) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Vote) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Vote) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Vote) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Vote) GetBlockID() *BlockID {
	if m != nil {
		return m.BlockID
	}
	return nil
}

func (m *Vote) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type TendermintCommit struct {
	BlockID    *BlockID `protobuf:"bytes,1,opt,name=BlockID" json:"BlockID,omitempty"`
	Precommits []*Vote  `protobuf:"bytes,2,rep,name=Precommits" json:"Precommits,omitempty"`
}

func (m *TendermintCommit) Reset()                    { *m = TendermintCommit{} }
func (m *TendermintCommit) String() string            { return proto.CompactTextString(m) }
func (*TendermintCommit) ProtoMessage()               {}
func (*TendermintCommit) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *TendermintCommit) GetBlockID() *BlockID {
	if m != nil {
		return m.BlockID
	}
	return nil
}

func (m *TendermintCommit) GetPrecommits() []*Vote {
	if m != nil {
		return m.Precommits
	}
	return nil
}

type TendermintBlockInfo struct {
	SeenCommit *TendermintCommit `protobuf:"bytes,1,opt,name=SeenCommit" json:"SeenCommit,omitempty"`
	LastCommit *TendermintCommit `protobuf:"bytes,2,opt,name=LastCommit" json:"LastCommit,omitempty"`
}

func (m *TendermintBlockInfo) Reset()                    { *m = TendermintBlockInfo{} }
func (m *TendermintBlockInfo) String() string            { return proto.CompactTextString(m) }
func (*TendermintBlockInfo) ProtoMessage()               {}
func (*TendermintBlockInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *TendermintBlockInfo) GetSeenCommit() *TendermintCommit {
	if m != nil {
		return m.SeenCommit
	}
	return nil
}

func (m *TendermintBlockInfo) GetLastCommit() *TendermintCommit {
	if m != nil {
		return m.LastCommit
	}
	return nil
}

func init() {
	proto.RegisterType((*PartSetHeader)(nil), "types.PartSetHeader")
	proto.RegisterType((*BlockID)(nil), "types.BlockID")
	proto.RegisterType((*TendermintBitArray)(nil), "types.TendermintBitArray")
	proto.RegisterType((*Vote)(nil), "types.Vote")
	proto.RegisterType((*TendermintCommit)(nil), "types.TendermintCommit")
	proto.RegisterType((*TendermintBlockInfo)(nil), "types.TendermintBlockInfo")
}

func init() { proto.RegisterFile("tendermint.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x41, 0xab, 0xd3, 0x40,
	0x10, 0x66, 0xdb, 0xa4, 0xcf, 0x37, 0xf1, 0x3d, 0xca, 0xfa, 0xd0, 0x3d, 0xf4, 0x10, 0x72, 0x90,
	0xa0, 0xd0, 0x43, 0x05, 0xc5, 0x8b, 0xd0, 0xaa, 0xd0, 0x82, 0x87, 0xb2, 0x8d, 0xbd, 0xaf, 0xcd,
	0xd8, 0x2e, 0x26, 0xd9, 0xb0, 0xbb, 0x05, 0x7b, 0xf5, 0xe2, 0xdf, 0x96, 0x6c, 0x96, 0x24, 0x56,
	0x7c, 0xb7, 0x99, 0x6f, 0x66, 0xbe, 0xef, 0xcb, 0x97, 0x85, 0xa9, 0xc5, 0x2a, 0x47, 0x5d, 0xca,
	0xca, 0xce, 0x6b, 0xad, 0xac, 0xa2, 0xa1, 0xbd, 0xd4, 0x68, 0x92, 0xf7, 0x70, 0xb7, 0x15, 0xda,
	0xee, 0xd0, 0xae, 0x51, 0xe4, 0xa8, 0xe9, 0x03, 0x84, 0x99, 0xb2, 0xa2, 0x60, 0x24, 0x26, 0x69,
	0xc8, 0xdb, 0x86, 0x52, 0x08, 0xd6, 0xc2, 0x9c, 0xd8, 0x28, 0x26, 0xe9, 0x53, 0xee, 0xea, 0xe4,
	0x2b, 0xdc, 0xac, 0x0a, 0x75, 0xf8, 0xb1, 0xf9, 0xd4, 0x8d, 0x49, 0x3f, 0xa6, 0x6f, 0x21, 0x6a,
	0x98, 0x4d, 0xcb, 0xeb, 0x2e, 0xa3, 0xc5, 0xc3, 0xdc, 0xc9, 0xce, 0xff, 0xd2, 0xe4, 0xc3, 0xc5,
	0xe4, 0x03, 0xd0, 0xac, 0x33, 0xbb, 0x92, 0x76, 0xa9, 0xb5, 0xb8, 0x34, 0x0a, 0x2b, 0x69, 0x8d,
	0x77, 0xe5, 0xea, 0xc6, 0xea, 0xe7, 0x02, 0x4b, 0xc3, 0x46, 0xf1, 0x38, 0x0d, 0x78, 0xdb, 0x24,
	0xbf, 0x46, 0x10, 0xec, 0x95, 0x45, 0xfa, 0x0a, 0xa6, 0x7b, 0x51, 0xc8, 0x5c, 0x58, 0xa5, 0x97,
	0x79, 0xae, 0xd1, 0x18, 0x6f, 0xf0, 0x1f, 0x9c, 0xbe, 0x84, 0xfb, 0x0e, 0xdb, 0x54, 0x39, 0xfe,
	0x74, 0x7e, 0x43, 0x7e, 0x85, 0xd2, 0xe7, 0x30, 0x59, 0xa3, 0x3c, 0x9e, 0x2c, 0x1b, 0xc7, 0x24,
	0x1d, 0x73, 0xdf, 0x35, 0x56, 0xb8, 0x3a, 0x57, 0x39, 0x0b, 0xda, 0xd4, 0x5c, 0x43, 0x67, 0x70,
	0x9b, 0xc9, 0x12, 0x8d, 0x15, 0x65, 0xcd, 0x42, 0x77, 0xd0, 0x03, 0xcd, 0x27, 0x65, 0x97, 0x1a,
	0xd9, 0x24, 0x26, 0xe9, 0x1d, 0x77, 0x35, 0x4d, 0xbb, 0x4c, 0xd9, 0x8d, 0x0b, 0xec, 0xde, 0x07,
	0xe6, 0x51, 0xde, 0x45, 0x3e, 0x83, 0xdb, 0x9d, 0x3c, 0x56, 0xc2, 0x9e, 0x35, 0xb2, 0x27, 0xee,
	0xb3, 0x7a, 0x20, 0x91, 0x30, 0xed, 0x43, 0xfc, 0xa8, 0xca, 0x52, 0xda, 0x21, 0x37, 0x79, 0x9c,
	0xfb, 0x35, 0xc0, 0x56, 0xe3, 0xc1, 0x9d, 0xb5, 0xe9, 0x46, 0x8b, 0xc8, 0x2f, 0x37, 0xd1, 0xf2,
	0xc1, 0x38, 0xf9, 0x4d, 0xe0, 0xd9, 0xe0, 0x87, 0x39, 0x8a, 0xea, 0xbb, 0xa2, 0xef, 0x00, 0x76,
	0x88, 0x55, 0x2b, 0xee, 0x15, 0x5f, 0x78, 0x92, 0x6b, 0x6f, 0x7c, 0xb0, 0xda, 0x1c, 0x7e, 0x11,
	0xc6, 0x4f, 0xfc, 0xbb, 0xf9, 0xff, 0x61, 0xbf, 0xfa, 0x6d, 0xe2, 0x5e, 0xf6, 0x9b, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x17, 0x16, 0x75, 0x41, 0xed, 0x02, 0x00, 0x00,
}
