// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tendermint.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	tendermint.proto

It has these top-level messages:
	PartSetHeader
	BlockID
	TendermintBitArray
	Vote
	TendermintCommit
	TendermintBlockInfo
	BlockSize
	TxSize
	BlockGossip
	EvidenceParams
	ConsensusParams
	Validator
	ValidatorSet
	State
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PartSetHeader struct {
	Total int32  `protobuf:"varint,1,opt,name=Total" json:"Total,omitempty"`
	Hash  []byte `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (m *PartSetHeader) Reset()                    { *m = PartSetHeader{} }
func (m *PartSetHeader) String() string            { return proto.CompactTextString(m) }
func (*PartSetHeader) ProtoMessage()               {}
func (*PartSetHeader) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *PartSetHeader) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PartSetHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type BlockID struct {
	Hash        []byte         `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	PartsHeader *PartSetHeader `protobuf:"bytes,2,opt,name=PartsHeader" json:"PartsHeader,omitempty"`
}

func (m *BlockID) Reset()                    { *m = BlockID{} }
func (m *BlockID) String() string            { return proto.CompactTextString(m) }
func (*BlockID) ProtoMessage()               {}
func (*BlockID) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *BlockID) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockID) GetPartsHeader() *PartSetHeader {
	if m != nil {
		return m.PartsHeader
	}
	return nil
}

type TendermintBitArray struct {
	Bits  int32    `protobuf:"varint,1,opt,name=Bits" json:"Bits,omitempty"`
	Elems []uint64 `protobuf:"varint,2,rep,packed,name=Elems" json:"Elems,omitempty"`
}

func (m *TendermintBitArray) Reset()                    { *m = TendermintBitArray{} }
func (m *TendermintBitArray) String() string            { return proto.CompactTextString(m) }
func (*TendermintBitArray) ProtoMessage()               {}
func (*TendermintBitArray) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *TendermintBitArray) GetBits() int32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *TendermintBitArray) GetElems() []uint64 {
	if m != nil {
		return m.Elems
	}
	return nil
}

type Vote struct {
	ValidatorAddress []byte   `protobuf:"bytes,1,opt,name=ValidatorAddress,proto3" json:"ValidatorAddress,omitempty"`
	ValidatorIndex   int32    `protobuf:"varint,2,opt,name=ValidatorIndex" json:"ValidatorIndex,omitempty"`
	Height           int64    `protobuf:"varint,3,opt,name=Height" json:"Height,omitempty"`
	Round            int32    `protobuf:"varint,4,opt,name=Round" json:"Round,omitempty"`
	Timestamp        int64    `protobuf:"varint,5,opt,name=Timestamp" json:"Timestamp,omitempty"`
	Type             uint32   `protobuf:"varint,6,opt,name=Type" json:"Type,omitempty"`
	BlockID          *BlockID `protobuf:"bytes,7,opt,name=BlockID" json:"BlockID,omitempty"`
	Signature        []byte   `protobuf:"bytes,8,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (m *Vote) Reset()                    { *m = Vote{} }
func (m *Vote) String() string            { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()               {}
func (*Vote) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *Vote) GetValidatorAddress() []byte {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}

func (m *Vote) GetValidatorIndex() int32 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

func (m *Vote) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Vote) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Vote) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Vote) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Vote) GetBlockID() *BlockID {
	if m != nil {
		return m.BlockID
	}
	return nil
}

func (m *Vote) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type TendermintCommit struct {
	BlockID    *BlockID `protobuf:"bytes,1,opt,name=BlockID" json:"BlockID,omitempty"`
	Precommits []*Vote  `protobuf:"bytes,2,rep,name=Precommits" json:"Precommits,omitempty"`
}

func (m *TendermintCommit) Reset()                    { *m = TendermintCommit{} }
func (m *TendermintCommit) String() string            { return proto.CompactTextString(m) }
func (*TendermintCommit) ProtoMessage()               {}
func (*TendermintCommit) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *TendermintCommit) GetBlockID() *BlockID {
	if m != nil {
		return m.BlockID
	}
	return nil
}

func (m *TendermintCommit) GetPrecommits() []*Vote {
	if m != nil {
		return m.Precommits
	}
	return nil
}

type TendermintBlockInfo struct {
	SeenCommit *TendermintCommit `protobuf:"bytes,1,opt,name=SeenCommit" json:"SeenCommit,omitempty"`
	LastCommit *TendermintCommit `protobuf:"bytes,2,opt,name=LastCommit" json:"LastCommit,omitempty"`
	State      *State            `protobuf:"bytes,3,opt,name=State" json:"State,omitempty"`
}

func (m *TendermintBlockInfo) Reset()                    { *m = TendermintBlockInfo{} }
func (m *TendermintBlockInfo) String() string            { return proto.CompactTextString(m) }
func (*TendermintBlockInfo) ProtoMessage()               {}
func (*TendermintBlockInfo) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *TendermintBlockInfo) GetSeenCommit() *TendermintCommit {
	if m != nil {
		return m.SeenCommit
	}
	return nil
}

func (m *TendermintBlockInfo) GetLastCommit() *TendermintCommit {
	if m != nil {
		return m.LastCommit
	}
	return nil
}

func (m *TendermintBlockInfo) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

type BlockSize struct {
	MaxBytes int32 `protobuf:"varint,1,opt,name=MaxBytes" json:"MaxBytes,omitempty"`
	MaxTxs   int32 `protobuf:"varint,2,opt,name=MaxTxs" json:"MaxTxs,omitempty"`
	MaxGas   int64 `protobuf:"varint,3,opt,name=MaxGas" json:"MaxGas,omitempty"`
}

func (m *BlockSize) Reset()                    { *m = BlockSize{} }
func (m *BlockSize) String() string            { return proto.CompactTextString(m) }
func (*BlockSize) ProtoMessage()               {}
func (*BlockSize) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *BlockSize) GetMaxBytes() int32 {
	if m != nil {
		return m.MaxBytes
	}
	return 0
}

func (m *BlockSize) GetMaxTxs() int32 {
	if m != nil {
		return m.MaxTxs
	}
	return 0
}

func (m *BlockSize) GetMaxGas() int64 {
	if m != nil {
		return m.MaxGas
	}
	return 0
}

type TxSize struct {
	MaxBytes int32 `protobuf:"varint,1,opt,name=MaxBytes" json:"MaxBytes,omitempty"`
	MaxGas   int64 `protobuf:"varint,2,opt,name=MaxGas" json:"MaxGas,omitempty"`
}

func (m *TxSize) Reset()                    { *m = TxSize{} }
func (m *TxSize) String() string            { return proto.CompactTextString(m) }
func (*TxSize) ProtoMessage()               {}
func (*TxSize) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *TxSize) GetMaxBytes() int32 {
	if m != nil {
		return m.MaxBytes
	}
	return 0
}

func (m *TxSize) GetMaxGas() int64 {
	if m != nil {
		return m.MaxGas
	}
	return 0
}

type BlockGossip struct {
	BlockPartSizeBytes int32 `protobuf:"varint,1,opt,name=BlockPartSizeBytes" json:"BlockPartSizeBytes,omitempty"`
}

func (m *BlockGossip) Reset()                    { *m = BlockGossip{} }
func (m *BlockGossip) String() string            { return proto.CompactTextString(m) }
func (*BlockGossip) ProtoMessage()               {}
func (*BlockGossip) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{8} }

func (m *BlockGossip) GetBlockPartSizeBytes() int32 {
	if m != nil {
		return m.BlockPartSizeBytes
	}
	return 0
}

type EvidenceParams struct {
	MaxAge int64 `protobuf:"varint,1,opt,name=MaxAge" json:"MaxAge,omitempty"`
}

func (m *EvidenceParams) Reset()                    { *m = EvidenceParams{} }
func (m *EvidenceParams) String() string            { return proto.CompactTextString(m) }
func (*EvidenceParams) ProtoMessage()               {}
func (*EvidenceParams) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{9} }

func (m *EvidenceParams) GetMaxAge() int64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

type ConsensusParams struct {
	BlockSize      *BlockSize      `protobuf:"bytes,1,opt,name=BlockSize" json:"BlockSize,omitempty"`
	TxSize         *TxSize         `protobuf:"bytes,2,opt,name=TxSize" json:"TxSize,omitempty"`
	BlockGossip    *BlockGossip    `protobuf:"bytes,3,opt,name=BlockGossip" json:"BlockGossip,omitempty"`
	EvidenceParams *EvidenceParams `protobuf:"bytes,4,opt,name=EvidenceParams" json:"EvidenceParams,omitempty"`
}

func (m *ConsensusParams) Reset()                    { *m = ConsensusParams{} }
func (m *ConsensusParams) String() string            { return proto.CompactTextString(m) }
func (*ConsensusParams) ProtoMessage()               {}
func (*ConsensusParams) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{10} }

func (m *ConsensusParams) GetBlockSize() *BlockSize {
	if m != nil {
		return m.BlockSize
	}
	return nil
}

func (m *ConsensusParams) GetTxSize() *TxSize {
	if m != nil {
		return m.TxSize
	}
	return nil
}

func (m *ConsensusParams) GetBlockGossip() *BlockGossip {
	if m != nil {
		return m.BlockGossip
	}
	return nil
}

func (m *ConsensusParams) GetEvidenceParams() *EvidenceParams {
	if m != nil {
		return m.EvidenceParams
	}
	return nil
}

type Validator struct {
	Address     []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PubKey      []byte `protobuf:"bytes,2,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	VotingPower int64  `protobuf:"varint,3,opt,name=VotingPower" json:"VotingPower,omitempty"`
	Accum       int64  `protobuf:"varint,4,opt,name=Accum" json:"Accum,omitempty"`
}

func (m *Validator) Reset()                    { *m = Validator{} }
func (m *Validator) String() string            { return proto.CompactTextString(m) }
func (*Validator) ProtoMessage()               {}
func (*Validator) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{11} }

func (m *Validator) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Validator) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Validator) GetVotingPower() int64 {
	if m != nil {
		return m.VotingPower
	}
	return 0
}

func (m *Validator) GetAccum() int64 {
	if m != nil {
		return m.Accum
	}
	return 0
}

type ValidatorSet struct {
	Validators []*Validator `protobuf:"bytes,1,rep,name=Validators" json:"Validators,omitempty"`
	Proposer   *Validator   `protobuf:"bytes,2,opt,name=Proposer" json:"Proposer,omitempty"`
}

func (m *ValidatorSet) Reset()                    { *m = ValidatorSet{} }
func (m *ValidatorSet) String() string            { return proto.CompactTextString(m) }
func (*ValidatorSet) ProtoMessage()               {}
func (*ValidatorSet) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{12} }

func (m *ValidatorSet) GetValidators() []*Validator {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (m *ValidatorSet) GetProposer() *Validator {
	if m != nil {
		return m.Proposer
	}
	return nil
}

type State struct {
	ChainID                          string           `protobuf:"bytes,1,opt,name=ChainID" json:"ChainID,omitempty"`
	LastBlockHeight                  int64            `protobuf:"varint,2,opt,name=LastBlockHeight" json:"LastBlockHeight,omitempty"`
	LastBlockTotalTx                 int64            `protobuf:"varint,3,opt,name=LastBlockTotalTx" json:"LastBlockTotalTx,omitempty"`
	LastBlockTime                    int64            `protobuf:"varint,4,opt,name=LastBlockTime" json:"LastBlockTime,omitempty"`
	Validators                       *ValidatorSet    `protobuf:"bytes,5,opt,name=Validators" json:"Validators,omitempty"`
	LastValidators                   *ValidatorSet    `protobuf:"bytes,6,opt,name=LastValidators" json:"LastValidators,omitempty"`
	LastHeightValidatorsChanged      int64            `protobuf:"varint,7,opt,name=LastHeightValidatorsChanged" json:"LastHeightValidatorsChanged,omitempty"`
	ConsensusParams                  *ConsensusParams `protobuf:"bytes,8,opt,name=ConsensusParams" json:"ConsensusParams,omitempty"`
	LastHeightConsensusParamsChanged int64            `protobuf:"varint,9,opt,name=LastHeightConsensusParamsChanged" json:"LastHeightConsensusParamsChanged,omitempty"`
	LastResultsHash                  []byte           `protobuf:"bytes,10,opt,name=LastResultsHash,proto3" json:"LastResultsHash,omitempty"`
	AppHash                          []byte           `protobuf:"bytes,11,opt,name=AppHash,proto3" json:"AppHash,omitempty"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{13} }

func (m *State) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *State) GetLastBlockHeight() int64 {
	if m != nil {
		return m.LastBlockHeight
	}
	return 0
}

func (m *State) GetLastBlockTotalTx() int64 {
	if m != nil {
		return m.LastBlockTotalTx
	}
	return 0
}

func (m *State) GetLastBlockTime() int64 {
	if m != nil {
		return m.LastBlockTime
	}
	return 0
}

func (m *State) GetValidators() *ValidatorSet {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (m *State) GetLastValidators() *ValidatorSet {
	if m != nil {
		return m.LastValidators
	}
	return nil
}

func (m *State) GetLastHeightValidatorsChanged() int64 {
	if m != nil {
		return m.LastHeightValidatorsChanged
	}
	return 0
}

func (m *State) GetConsensusParams() *ConsensusParams {
	if m != nil {
		return m.ConsensusParams
	}
	return nil
}

func (m *State) GetLastHeightConsensusParamsChanged() int64 {
	if m != nil {
		return m.LastHeightConsensusParamsChanged
	}
	return 0
}

func (m *State) GetLastResultsHash() []byte {
	if m != nil {
		return m.LastResultsHash
	}
	return nil
}

func (m *State) GetAppHash() []byte {
	if m != nil {
		return m.AppHash
	}
	return nil
}

func init() {
	proto.RegisterType((*PartSetHeader)(nil), "types.PartSetHeader")
	proto.RegisterType((*BlockID)(nil), "types.BlockID")
	proto.RegisterType((*TendermintBitArray)(nil), "types.TendermintBitArray")
	proto.RegisterType((*Vote)(nil), "types.Vote")
	proto.RegisterType((*TendermintCommit)(nil), "types.TendermintCommit")
	proto.RegisterType((*TendermintBlockInfo)(nil), "types.TendermintBlockInfo")
	proto.RegisterType((*BlockSize)(nil), "types.BlockSize")
	proto.RegisterType((*TxSize)(nil), "types.TxSize")
	proto.RegisterType((*BlockGossip)(nil), "types.BlockGossip")
	proto.RegisterType((*EvidenceParams)(nil), "types.EvidenceParams")
	proto.RegisterType((*ConsensusParams)(nil), "types.ConsensusParams")
	proto.RegisterType((*Validator)(nil), "types.Validator")
	proto.RegisterType((*ValidatorSet)(nil), "types.ValidatorSet")
	proto.RegisterType((*State)(nil), "types.State")
}

func init() { proto.RegisterFile("tendermint.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 817 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5b, 0xaf, 0xdb, 0x44,
	0x10, 0x96, 0x4f, 0x2e, 0xe7, 0x64, 0x7c, 0x4e, 0x1a, 0x6d, 0x4b, 0xb1, 0xa0, 0x0f, 0x91, 0x05,
	0xc8, 0x02, 0x14, 0xa1, 0x14, 0x81, 0x10, 0x14, 0x35, 0x09, 0x55, 0x4f, 0x81, 0x4a, 0xd1, 0x26,
	0x1c, 0x9e, 0xb7, 0xf1, 0x90, 0xac, 0x88, 0x2f, 0xf2, 0x6e, 0x20, 0xe9, 0x23, 0x7f, 0x85, 0x47,
	0x7e, 0x13, 0xff, 0x05, 0xed, 0x78, 0x7d, 0x0d, 0x2d, 0xbc, 0x79, 0xbe, 0xb9, 0x7f, 0x33, 0xb3,
	0x86, 0x91, 0xc6, 0x38, 0xc4, 0x2c, 0x92, 0xb1, 0x9e, 0xa4, 0x59, 0xa2, 0x13, 0xd6, 0xd3, 0xa7,
	0x14, 0x95, 0xff, 0x15, 0xdc, 0x2c, 0x45, 0xa6, 0x57, 0xa8, 0x6f, 0x51, 0x84, 0x98, 0xb1, 0x07,
	0xd0, 0x5b, 0x27, 0x5a, 0xec, 0x3d, 0x67, 0xec, 0x04, 0x3d, 0x9e, 0x0b, 0x8c, 0x41, 0xf7, 0x56,
	0xa8, 0x9d, 0x77, 0x31, 0x76, 0x82, 0x6b, 0x4e, 0xdf, 0xfe, 0x4f, 0x70, 0x39, 0xdf, 0x27, 0x9b,
	0x5f, 0x5f, 0x7c, 0x57, 0xaa, 0x9d, 0x4a, 0xcd, 0xbe, 0x00, 0xd7, 0x44, 0x56, 0x79, 0x5c, 0xf2,
	0x74, 0xa7, 0x0f, 0x26, 0x94, 0x76, 0xd2, 0xc8, 0xc9, 0xeb, 0x86, 0xfe, 0xb7, 0xc0, 0xd6, 0x65,
	0xb1, 0x73, 0xa9, 0x67, 0x59, 0x26, 0x4e, 0x26, 0xc3, 0x5c, 0x6a, 0x65, 0xab, 0xa2, 0x6f, 0x53,
	0xea, 0xb3, 0x3d, 0x46, 0xca, 0xbb, 0x18, 0x77, 0x82, 0x2e, 0xcf, 0x05, 0xff, 0x8f, 0x0b, 0xe8,
	0xde, 0x25, 0x1a, 0xd9, 0xc7, 0x30, 0xba, 0x13, 0x7b, 0x19, 0x0a, 0x9d, 0x64, 0xb3, 0x30, 0xcc,
	0x50, 0x29, 0x5b, 0xe0, 0x19, 0xce, 0x3e, 0x82, 0x61, 0x89, 0xbd, 0x88, 0x43, 0x3c, 0x52, 0xbd,
	0x3d, 0xde, 0x42, 0xd9, 0x43, 0xe8, 0xdf, 0xa2, 0xdc, 0xee, 0xb4, 0xd7, 0x19, 0x3b, 0x41, 0x87,
	0x5b, 0xc9, 0x94, 0xc2, 0x93, 0x43, 0x1c, 0x7a, 0xdd, 0x9c, 0x35, 0x12, 0xd8, 0x23, 0x18, 0xac,
	0x65, 0x84, 0x4a, 0x8b, 0x28, 0xf5, 0x7a, 0xe4, 0x50, 0x01, 0xa6, 0xa5, 0xf5, 0x29, 0x45, 0xaf,
	0x3f, 0x76, 0x82, 0x1b, 0x4e, 0xdf, 0x2c, 0x28, 0x39, 0xf5, 0x2e, 0x89, 0xb0, 0xa1, 0x25, 0xcc,
	0xa2, 0xbc, 0xa4, 0xfc, 0x11, 0x0c, 0x56, 0x72, 0x1b, 0x0b, 0x7d, 0xc8, 0xd0, 0xbb, 0xa2, 0xb6,
	0x2a, 0xc0, 0x97, 0x30, 0xaa, 0x48, 0x5c, 0x24, 0x51, 0x24, 0x75, 0x3d, 0xb6, 0xf3, 0xf6, 0xd8,
	0x9f, 0x00, 0x2c, 0x33, 0xdc, 0x90, 0x5b, 0xce, 0xae, 0x3b, 0x75, 0xad, 0xb1, 0xa1, 0x96, 0xd7,
	0xd4, 0xfe, 0x5f, 0x0e, 0xdc, 0xaf, 0x0d, 0x8c, 0x42, 0xc4, 0xbf, 0x24, 0xec, 0x4b, 0x80, 0x15,
	0x62, 0x9c, 0x27, 0xb7, 0x19, 0xdf, 0xb5, 0x41, 0xda, 0xb5, 0xf1, 0x9a, 0xa9, 0x71, 0xfc, 0x51,
	0x28, 0xab, 0xb1, 0x7b, 0xf3, 0x66, 0xc7, 0xca, 0x94, 0xf9, 0xd0, 0x5b, 0x69, 0xa1, 0x91, 0x66,
	0xe3, 0x4e, 0xaf, 0xad, 0x0f, 0x61, 0x3c, 0x57, 0xf9, 0x3f, 0xc3, 0x80, 0x4a, 0x5c, 0xc9, 0xd7,
	0xc8, 0xde, 0x83, 0xab, 0x97, 0xe2, 0x38, 0x3f, 0x69, 0x2c, 0x16, 0xab, 0x94, 0xcd, 0xa4, 0x5f,
	0x8a, 0xe3, 0xfa, 0xa8, 0xec, 0x26, 0x58, 0xc9, 0xe2, 0xcf, 0x85, 0x2a, 0x36, 0x20, 0x97, 0xfc,
	0x6f, 0xa0, 0xbf, 0x3e, 0xfe, 0xcf, 0xa8, 0xc6, 0xfb, 0xa2, 0xe1, 0xfd, 0x04, 0x5c, 0x2a, 0xeb,
	0x79, 0xa2, 0x94, 0x4c, 0xd9, 0x04, 0x18, 0x89, 0x74, 0x26, 0xf2, 0x35, 0xd6, 0x83, 0xfd, 0x8b,
	0xc6, 0x0f, 0x60, 0xf8, 0xec, 0x37, 0x19, 0x62, 0xbc, 0xc1, 0xa5, 0xc8, 0x44, 0x54, 0x24, 0x9a,
	0x6d, 0x91, 0xbc, 0xf2, 0x44, 0xb3, 0x2d, 0xfa, 0x7f, 0x3b, 0x70, 0x6f, 0x91, 0xc4, 0x0a, 0x63,
	0x75, 0x50, 0xd6, 0x76, 0x52, 0xe3, 0xc4, 0x0e, 0x6a, 0x54, 0x5f, 0x0d, 0x83, 0xf3, 0x1a, 0x6d,
	0x1f, 0x16, 0xad, 0xda, 0xe1, 0xdc, 0x14, 0xc3, 0x21, 0x90, 0x17, 0x3c, 0x7c, 0xde, 0xe8, 0xc9,
	0x0e, 0x85, 0xd5, 0x03, 0xe7, 0x1a, 0xde, 0x68, 0xfd, 0x49, 0xbb, 0x15, 0x3a, 0x29, 0x77, 0xfa,
	0x8e, 0x75, 0x6c, 0x2a, 0x79, 0xcb, 0xd8, 0x3f, 0xc0, 0xa0, 0x3c, 0x59, 0xe6, 0xc1, 0x65, 0xf3,
	0xf0, 0x0b, 0xd1, 0xd0, 0xb3, 0x3c, 0xbc, 0xfa, 0x01, 0x4f, 0xf6, 0x45, 0xb3, 0x12, 0x1b, 0x83,
	0x7b, 0x97, 0x68, 0x19, 0x6f, 0x97, 0xc9, 0xef, 0x98, 0xd9, 0x11, 0xd7, 0x21, 0x73, 0xe9, 0xb3,
	0xcd, 0xe6, 0x10, 0x51, 0x59, 0x1d, 0x9e, 0x0b, 0x7e, 0x0c, 0xd7, 0x65, 0xda, 0x15, 0x6a, 0xf6,
	0x19, 0x40, 0x29, 0x9b, 0xe4, 0x9d, 0x1a, 0xa7, 0xa5, 0x82, 0xd7, 0x6c, 0xd8, 0xa7, 0x70, 0xb5,
	0xcc, 0x92, 0x34, 0x51, 0xe5, 0x5b, 0x79, 0x6e, 0x5f, 0x5a, 0xf8, 0x7f, 0x76, 0xed, 0xae, 0x9b,
	0x1e, 0x17, 0x3b, 0x21, 0x63, 0x7b, 0xd5, 0x03, 0x5e, 0x88, 0x2c, 0x80, 0x7b, 0xe6, 0x38, 0x88,
	0x5c, 0xfb, 0x68, 0xe5, 0x4b, 0xd7, 0x86, 0xcd, 0x4b, 0x59, 0x42, 0xf4, 0xde, 0xaf, 0x8f, 0xb6,
	0xf5, 0x33, 0x9c, 0x7d, 0x00, 0x37, 0x15, 0x26, 0x23, 0xb4, 0x3c, 0x34, 0x41, 0xf6, 0xb8, 0xd1,
	0x7f, 0x8f, 0xfa, 0xb9, 0xdf, 0xee, 0x67, 0x85, 0xba, 0x41, 0xc1, 0xd7, 0x30, 0x34, 0x51, 0x6a,
	0x8e, 0xfd, 0x37, 0x3b, 0xb6, 0x4c, 0xd9, 0x53, 0x78, 0xdf, 0x20, 0x79, 0x47, 0x15, 0xbe, 0xd8,
	0x89, 0x78, 0x8b, 0x21, 0xbd, 0xa6, 0x1d, 0xfe, 0x36, 0x13, 0xf6, 0xf4, 0xec, 0x32, 0xe8, 0x5d,
	0x75, 0xa7, 0x0f, 0x6d, 0xfe, 0x96, 0x96, 0x9f, 0x1d, 0xd2, 0xf7, 0x30, 0xae, 0x12, 0xb4, 0x94,
	0x45, 0x21, 0x03, 0x2a, 0xe4, 0x3f, 0xed, 0x8a, 0xe9, 0x71, 0x54, 0x87, 0xbd, 0x56, 0xf4, 0x77,
	0x05, 0x5a, 0xd5, 0x36, 0x4c, 0x5b, 0x9e, 0xa6, 0x64, 0xe1, 0xda, 0x2d, 0xcf, 0xc5, 0x57, 0x7d,
	0xfa, 0xd5, 0x3f, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x8c, 0x36, 0xa7, 0xfe, 0x07, 0x00,
	0x00,
}
