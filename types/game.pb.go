// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Game struct {
	// 默认是由创建这局游戏的txHash作为gameId
	GameId string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
	// create 0 -> Match 1 -> Cancel 2 -> Close 3
	Status int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,3,opt,name=createTime" json:"createTime,omitempty"`
	// 匹配时间(何时参与对赌）
	MatchTime int64 `protobuf:"varint,4,opt,name=matchTime" json:"matchTime,omitempty"`
	// 状态close的时间（包括cancel）
	Closetime int64 `protobuf:"varint,5,opt,name=closetime" json:"closetime,omitempty"`
	// 赌注
	Value int64 `protobuf:"varint,6,opt,name=value" json:"value,omitempty"`
	// 发起者账号地址
	CreateAddress string `protobuf:"bytes,7,opt,name=createAddress" json:"createAddress,omitempty"`
	// 对赌者账号地址
	MatchAddress string `protobuf:"bytes,8,opt,name=matchAddress" json:"matchAddress,omitempty"`
	// hash 类型，预留字段
	HashType string `protobuf:"bytes,9,opt,name=hashType" json:"hashType,omitempty"`
	// 庄家创建游戏时，庄家自己出拳结果加密后的hash值
	HashValue []byte `protobuf:"bytes,10,opt,name=hashValue,proto3" json:"hashValue,omitempty"`
	// 用来公布庄家出拳结果的私钥
	Secret string `protobuf:"bytes,11,opt,name=secret" json:"secret,omitempty"`
	// 0 平局，1 庄家获胜，2 matcher获胜，3 庄家开奖超时，matcher获胜，并获得本局所有赌资
	Result int32 `protobuf:"varint,12,opt,name=result" json:"result,omitempty"`
	// matcher 出拳结果
	Guess int32 `protobuf:"varint,13,opt,name=guess" json:"guess,omitempty"`
}

func (m *Game) Reset()                    { *m = Game{} }
func (m *Game) String() string            { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()               {}
func (*Game) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Game) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *Game) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Game) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Game) GetMatchTime() int64 {
	if m != nil {
		return m.MatchTime
	}
	return 0
}

func (m *Game) GetClosetime() int64 {
	if m != nil {
		return m.Closetime
	}
	return 0
}

func (m *Game) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Game) GetCreateAddress() string {
	if m != nil {
		return m.CreateAddress
	}
	return ""
}

func (m *Game) GetMatchAddress() string {
	if m != nil {
		return m.MatchAddress
	}
	return ""
}

func (m *Game) GetHashType() string {
	if m != nil {
		return m.HashType
	}
	return ""
}

func (m *Game) GetHashValue() []byte {
	if m != nil {
		return m.HashValue
	}
	return nil
}

func (m *Game) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Game) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *Game) GetGuess() int32 {
	if m != nil {
		return m.Guess
	}
	return 0
}

// message for execs.game
type GameAction struct {
	// Types that are valid to be assigned to Value:
	//	*GameAction_Create
	//	*GameAction_Cancel
	//	*GameAction_Close
	//	*GameAction_Match
	Value isGameAction_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,10,opt,name=ty" json:"ty,omitempty"`
}

func (m *GameAction) Reset()                    { *m = GameAction{} }
func (m *GameAction) String() string            { return proto.CompactTextString(m) }
func (*GameAction) ProtoMessage()               {}
func (*GameAction) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type isGameAction_Value interface {
	isGameAction_Value()
}

type GameAction_Create struct {
	Create *GameCreate `protobuf:"bytes,1,opt,name=create,oneof"`
}
type GameAction_Cancel struct {
	Cancel *GameCancel `protobuf:"bytes,2,opt,name=cancel,oneof"`
}
type GameAction_Close struct {
	Close *GameClose `protobuf:"bytes,3,opt,name=close,oneof"`
}
type GameAction_Match struct {
	Match *GameMatch `protobuf:"bytes,4,opt,name=match,oneof"`
}

func (*GameAction_Create) isGameAction_Value() {}
func (*GameAction_Cancel) isGameAction_Value() {}
func (*GameAction_Close) isGameAction_Value()  {}
func (*GameAction_Match) isGameAction_Value()  {}

func (m *GameAction) GetValue() isGameAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *GameAction) GetCreate() *GameCreate {
	if x, ok := m.GetValue().(*GameAction_Create); ok {
		return x.Create
	}
	return nil
}

func (m *GameAction) GetCancel() *GameCancel {
	if x, ok := m.GetValue().(*GameAction_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *GameAction) GetClose() *GameClose {
	if x, ok := m.GetValue().(*GameAction_Close); ok {
		return x.Close
	}
	return nil
}

func (m *GameAction) GetMatch() *GameMatch {
	if x, ok := m.GetValue().(*GameAction_Match); ok {
		return x.Match
	}
	return nil
}

func (m *GameAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GameAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GameAction_OneofMarshaler, _GameAction_OneofUnmarshaler, _GameAction_OneofSizer, []interface{}{
		(*GameAction_Create)(nil),
		(*GameAction_Cancel)(nil),
		(*GameAction_Close)(nil),
		(*GameAction_Match)(nil),
	}
}

func _GameAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GameAction)
	// value
	switch x := m.Value.(type) {
	case *GameAction_Create:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Create); err != nil {
			return err
		}
	case *GameAction_Cancel:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case *GameAction_Close:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Close); err != nil {
			return err
		}
	case *GameAction_Match:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Match); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GameAction.Value has unexpected type %T", x)
	}
	return nil
}

func _GameAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GameAction)
	switch tag {
	case 1: // value.create
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameCreate)
		err := b.DecodeMessage(msg)
		m.Value = &GameAction_Create{msg}
		return true, err
	case 2: // value.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameCancel)
		err := b.DecodeMessage(msg)
		m.Value = &GameAction_Cancel{msg}
		return true, err
	case 3: // value.close
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameClose)
		err := b.DecodeMessage(msg)
		m.Value = &GameAction_Close{msg}
		return true, err
	case 4: // value.match
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameMatch)
		err := b.DecodeMessage(msg)
		m.Value = &GameAction_Match{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GameAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GameAction)
	// value
	switch x := m.Value.(type) {
	case *GameAction_Create:
		s := proto.Size(x.Create)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GameAction_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GameAction_Close:
		s := proto.Size(x.Close)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GameAction_Match:
		s := proto.Size(x.Match)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GameMatch struct {
	GameId string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
	Guess  int32  `protobuf:"varint,2,opt,name=guess" json:"guess,omitempty"`
}

func (m *GameMatch) Reset()                    { *m = GameMatch{} }
func (m *GameMatch) String() string            { return proto.CompactTextString(m) }
func (*GameMatch) ProtoMessage()               {}
func (*GameMatch) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *GameMatch) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *GameMatch) GetGuess() int32 {
	if m != nil {
		return m.Guess
	}
	return 0
}

type GameCancel struct {
	GameId string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *GameCancel) Reset()                    { *m = GameCancel{} }
func (m *GameCancel) String() string            { return proto.CompactTextString(m) }
func (*GameCancel) ProtoMessage()               {}
func (*GameCancel) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *GameCancel) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type GameClose struct {
	GameId string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
}

func (m *GameClose) Reset()                    { *m = GameClose{} }
func (m *GameClose) String() string            { return proto.CompactTextString(m) }
func (*GameClose) ProtoMessage()               {}
func (*GameClose) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *GameClose) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *GameClose) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type GameCreate struct {
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// 加密用的算法
	HashType string `protobuf:"bytes,2,opt,name=hashType" json:"hashType,omitempty"`
	// 加密后的值
	HashValue []byte `protobuf:"bytes,3,opt,name=hashValue,proto3" json:"hashValue,omitempty"`
}

func (m *GameCreate) Reset()                    { *m = GameCreate{} }
func (m *GameCreate) String() string            { return proto.CompactTextString(m) }
func (*GameCreate) ProtoMessage()               {}
func (*GameCreate) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *GameCreate) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *GameCreate) GetHashType() string {
	if m != nil {
		return m.HashType
	}
	return ""
}

func (m *GameCreate) GetHashValue() []byte {
	if m != nil {
		return m.HashValue
	}
	return nil
}

// queryByAddr 和 queryByStatus共用同一个结构体
type QueryGameListByStatusAndAddr struct {
	// 优先根据status查询,status不可为空
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// 二级搜索，如果要查询一个地址下的所有game信息，可以根据status，分多次查询，这样规避存储数据时的臃余情况
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	// 查询第几页
	PageNum int32 `protobuf:"varint,3,opt,name=pageNum" json:"pageNum,omitempty"`
	// 单页返回多少条记录，默认返回20条，单次最多返回100条
	Count int32 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	// 0降序，1升序，默认降序
	Direction int32 `protobuf:"varint,5,opt,name=direction" json:"direction,omitempty"`
}

func (m *QueryGameListByStatusAndAddr) Reset()                    { *m = QueryGameListByStatusAndAddr{} }
func (m *QueryGameListByStatusAndAddr) String() string            { return proto.CompactTextString(m) }
func (*QueryGameListByStatusAndAddr) ProtoMessage()               {}
func (*QueryGameListByStatusAndAddr) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *QueryGameListByStatusAndAddr) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *QueryGameListByStatusAndAddr) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGameListByStatusAndAddr) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryGameListByStatusAndAddr) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueryGameListByStatusAndAddr) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

// // queryByAddr 和 queryByStatus共用同一个结构体
// message QueryGameListByPage {
//    //优先根据status查询,status不可为空
//    int32 status = 1;
//    //二级搜索，如果要查询一个地址下的所有game信息，可以根据status，分多次查询，这样规避存储数据时的臃余情况
//    string address = 2;
//    // 查询第几页
//    int32 pageNum = 3;
//    //一页的容量，默认返回10条，单次最多返回40条
//    int32 count = 4;
// }
// 统计数量
type QueryGameListCount struct {
	// 优先根据status查询,status不可为空
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// 二级搜索，如果要查询一个地址下的所有game信息，可以根据status，分多次查询，这样规避存储数据时的臃余情况
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *QueryGameListCount) Reset()                    { *m = QueryGameListCount{} }
func (m *QueryGameListCount) String() string            { return proto.CompactTextString(m) }
func (*QueryGameListCount) ProtoMessage()               {}
func (*QueryGameListCount) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *QueryGameListCount) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *QueryGameListCount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type QueryGameInfo struct {
	GameId string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *QueryGameInfo) Reset()                    { *m = QueryGameInfo{} }
func (m *QueryGameInfo) String() string            { return proto.CompactTextString(m) }
func (*QueryGameInfo) ProtoMessage()               {}
func (*QueryGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *QueryGameInfo) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type QueryGameInfos struct {
	GameIds []string `protobuf:"bytes,1,rep,name=gameIds" json:"gameIds,omitempty"`
}

func (m *QueryGameInfos) Reset()                    { *m = QueryGameInfos{} }
func (m *QueryGameInfos) String() string            { return proto.CompactTextString(m) }
func (*QueryGameInfos) ProtoMessage()               {}
func (*QueryGameInfos) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{9} }

func (m *QueryGameInfos) GetGameIds() []string {
	if m != nil {
		return m.GameIds
	}
	return nil
}

type ReplyGameList struct {
	Games []*Game `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
}

func (m *ReplyGameList) Reset()                    { *m = ReplyGameList{} }
func (m *ReplyGameList) String() string            { return proto.CompactTextString(m) }
func (*ReplyGameList) ProtoMessage()               {}
func (*ReplyGameList) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{10} }

func (m *ReplyGameList) GetGames() []*Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type ReplyGameListCount struct {
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *ReplyGameListCount) Reset()                    { *m = ReplyGameListCount{} }
func (m *ReplyGameListCount) String() string            { return proto.CompactTextString(m) }
func (*ReplyGameListCount) ProtoMessage()               {}
func (*ReplyGameListCount) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{11} }

func (m *ReplyGameListCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReplyGame struct {
	Game *Game `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
}

func (m *ReplyGame) Reset()                    { *m = ReplyGame{} }
func (m *ReplyGame) String() string            { return proto.CompactTextString(m) }
func (*ReplyGame) ProtoMessage()               {}
func (*ReplyGame) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{12} }

func (m *ReplyGame) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

type ReceiptGame struct {
	GameId string `protobuf:"bytes,1,opt,name=gameId" json:"gameId,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	// 记录上一次状态
	PrevStatus     int32  `protobuf:"varint,3,opt,name=prevStatus" json:"prevStatus,omitempty"`
	Addr           string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
	CreateAddr     string `protobuf:"bytes,5,opt,name=createAddr" json:"createAddr,omitempty"`
	MatchAddr      string `protobuf:"bytes,6,opt,name=matchAddr" json:"matchAddr,omitempty"`
	ActionTime     int64  `protobuf:"varint,7,opt,name=actionTime" json:"actionTime,omitempty"`
	PrevActionTime int64  `protobuf:"varint,8,opt,name=prevActionTime" json:"prevActionTime,omitempty"`
	CreateHeight   int64  `protobuf:"varint,9,opt,name=createHeight" json:"createHeight,omitempty"`
	MatchHeight    int64  `protobuf:"varint,10,opt,name=matchHeight" json:"matchHeight,omitempty"`
}

func (m *ReceiptGame) Reset()                    { *m = ReceiptGame{} }
func (m *ReceiptGame) String() string            { return proto.CompactTextString(m) }
func (*ReceiptGame) ProtoMessage()               {}
func (*ReceiptGame) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{13} }

func (m *ReceiptGame) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *ReceiptGame) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptGame) GetPrevStatus() int32 {
	if m != nil {
		return m.PrevStatus
	}
	return 0
}

func (m *ReceiptGame) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReceiptGame) GetCreateAddr() string {
	if m != nil {
		return m.CreateAddr
	}
	return ""
}

func (m *ReceiptGame) GetMatchAddr() string {
	if m != nil {
		return m.MatchAddr
	}
	return ""
}

func (m *ReceiptGame) GetActionTime() int64 {
	if m != nil {
		return m.ActionTime
	}
	return 0
}

func (m *ReceiptGame) GetPrevActionTime() int64 {
	if m != nil {
		return m.PrevActionTime
	}
	return 0
}

func (m *ReceiptGame) GetCreateHeight() int64 {
	if m != nil {
		return m.CreateHeight
	}
	return 0
}

func (m *ReceiptGame) GetMatchHeight() int64 {
	if m != nil {
		return m.MatchHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*Game)(nil), "types.Game")
	proto.RegisterType((*GameAction)(nil), "types.GameAction")
	proto.RegisterType((*GameMatch)(nil), "types.GameMatch")
	proto.RegisterType((*GameCancel)(nil), "types.GameCancel")
	proto.RegisterType((*GameClose)(nil), "types.GameClose")
	proto.RegisterType((*GameCreate)(nil), "types.GameCreate")
	proto.RegisterType((*QueryGameListByStatusAndAddr)(nil), "types.QueryGameListByStatusAndAddr")
	proto.RegisterType((*QueryGameListCount)(nil), "types.QueryGameListCount")
	proto.RegisterType((*QueryGameInfo)(nil), "types.QueryGameInfo")
	proto.RegisterType((*QueryGameInfos)(nil), "types.QueryGameInfos")
	proto.RegisterType((*ReplyGameList)(nil), "types.ReplyGameList")
	proto.RegisterType((*ReplyGameListCount)(nil), "types.ReplyGameListCount")
	proto.RegisterType((*ReplyGame)(nil), "types.ReplyGame")
	proto.RegisterType((*ReceiptGame)(nil), "types.ReceiptGame")
}

func init() { proto.RegisterFile("game.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 659 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdf, 0x8a, 0xd3, 0x5e,
	0x10, 0xde, 0xa4, 0x4d, 0xdb, 0x4c, 0xda, 0xf2, 0xfb, 0x1d, 0x44, 0x82, 0x2c, 0x5a, 0x0f, 0x8b,
	0x96, 0x55, 0x7a, 0x51, 0xaf, 0xc4, 0xab, 0xee, 0x82, 0x76, 0x41, 0x05, 0x8f, 0x8b, 0x57, 0xde,
	0xc4, 0xf4, 0xd8, 0x06, 0xda, 0x26, 0x24, 0x27, 0x0b, 0x79, 0x19, 0xdf, 0xc4, 0xa7, 0xf0, 0x4d,
	0x7c, 0x02, 0x99, 0x99, 0x34, 0x7f, 0x0a, 0x5d, 0xd0, 0xbb, 0xce, 0xf7, 0x7d, 0xe7, 0xcc, 0x64,
	0xbe, 0x39, 0x53, 0x80, 0x75, 0xb0, 0xd3, 0xb3, 0x24, 0x8d, 0x4d, 0x2c, 0x1c, 0x53, 0x24, 0x3a,
	0x93, 0xbf, 0x6d, 0xe8, 0xbe, 0x0b, 0x76, 0x5a, 0x3c, 0x84, 0x1e, 0xb2, 0x37, 0x2b, 0xdf, 0x9a,
	0x58, 0x53, 0x57, 0x95, 0x11, 0xe2, 0x99, 0x09, 0x4c, 0x9e, 0xf9, 0xf6, 0xc4, 0x9a, 0x3a, 0xaa,
	0x8c, 0xc4, 0x63, 0x80, 0x30, 0xd5, 0x81, 0xd1, 0xb7, 0xd1, 0x4e, 0xfb, 0x9d, 0x89, 0x35, 0xed,
	0xa8, 0x06, 0x22, 0xce, 0xc1, 0xdd, 0x05, 0x26, 0xdc, 0x10, 0xdd, 0x25, 0xba, 0x06, 0x90, 0x0d,
	0xb7, 0x71, 0xa6, 0x0d, 0xb2, 0x0e, 0xb3, 0x15, 0x20, 0x1e, 0x80, 0x73, 0x17, 0x6c, 0x73, 0xed,
	0xf7, 0x88, 0xe1, 0x40, 0x5c, 0xc0, 0x88, 0xef, 0x5f, 0xac, 0x56, 0xa9, 0xce, 0x32, 0xbf, 0x4f,
	0x85, 0xb6, 0x41, 0x21, 0x61, 0x48, 0x69, 0x0e, 0xa2, 0x01, 0x89, 0x5a, 0x98, 0x78, 0x04, 0x83,
	0x4d, 0x90, 0x6d, 0x6e, 0x8b, 0x44, 0xfb, 0x2e, 0xf1, 0x55, 0x8c, 0x95, 0xe1, 0xef, 0x2f, 0x94,
	0x1f, 0x26, 0xd6, 0x74, 0xa8, 0x6a, 0x80, 0xba, 0xa1, 0xc3, 0x54, 0x1b, 0xdf, 0xe3, 0x2e, 0x71,
	0x84, 0x78, 0xaa, 0xb3, 0x7c, 0x6b, 0xfc, 0x21, 0x77, 0x89, 0x23, 0xfc, 0x92, 0x75, 0x8e, 0x65,
	0x8c, 0x08, 0xe6, 0x40, 0xfe, 0xb2, 0x00, 0xb0, 0xe9, 0x8b, 0xd0, 0x44, 0xf1, 0x5e, 0xbc, 0x80,
	0x1e, 0x7f, 0x03, 0xb5, 0xde, 0x9b, 0xff, 0x3f, 0x23, 0x6f, 0x66, 0x28, 0xb9, 0x26, 0x62, 0x79,
	0xa6, 0x4a, 0x09, 0x89, 0x83, 0x7d, 0xa8, 0xb7, 0xe4, 0xc7, 0x91, 0x98, 0x08, 0x12, 0xd3, 0x2f,
	0x31, 0x05, 0x87, 0xba, 0x4a, 0xfe, 0x78, 0xf3, 0xff, 0x9a, 0x5a, 0xc4, 0x97, 0x67, 0x8a, 0x05,
	0xa8, 0xa4, 0x16, 0x91, 0x55, 0x6d, 0xe5, 0x07, 0xc4, 0x51, 0x49, 0x02, 0x31, 0x06, 0xdb, 0x14,
	0xd4, 0x19, 0x47, 0xd9, 0xa6, 0xb8, 0xea, 0x97, 0x66, 0xc9, 0xd7, 0xe0, 0x56, 0xf2, 0x93, 0xe3,
	0x54, 0x35, 0xc4, 0x6e, 0x36, 0xe4, 0x82, 0xfb, 0xc1, 0xf5, 0x9f, 0x3a, 0x2b, 0xdf, 0x70, 0x02,
	0xaa, 0xfc, 0xde, 0x79, 0x65, 0x87, 0xec, 0xa6, 0x43, 0xf2, 0x6b, 0x99, 0x82, 0xbb, 0x58, 0x4d,
	0x98, 0xd5, 0x9c, 0xb0, 0xe6, 0x5c, 0xd8, 0xf7, 0xcd, 0x45, 0xe7, 0x68, 0x2e, 0xe4, 0x0f, 0x0b,
	0xce, 0x3f, 0xe5, 0x3a, 0x2d, 0x30, 0xc7, 0xfb, 0x28, 0x33, 0x57, 0xc5, 0x67, 0x7a, 0x27, 0x8b,
	0xfd, 0x0a, 0xa7, 0xae, 0xf1, 0x8c, 0xac, 0xd6, 0x33, 0xf2, 0xa1, 0x1f, 0x94, 0x93, 0xca, 0x19,
	0x0f, 0x21, 0x32, 0x49, 0xb0, 0xd6, 0x1f, 0xf3, 0x1d, 0xa5, 0x73, 0xd4, 0x21, 0xc4, 0xe2, 0xc3,
	0x38, 0xdf, 0x1b, 0xf2, 0xca, 0x51, 0x1c, 0x60, 0x81, 0xab, 0x28, 0xd5, 0x34, 0x52, 0xf4, 0xa4,
	0x1c, 0x55, 0x03, 0xf2, 0x2d, 0x88, 0x56, 0x7d, 0xd7, 0x74, 0xe6, 0xaf, 0xab, 0x92, 0xcf, 0x61,
	0x54, 0xdd, 0x73, 0xb3, 0xff, 0x1e, 0x9f, 0x34, 0xeb, 0x12, 0xc6, 0x2d, 0x21, 0x5d, 0xca, 0x1c,
	0x66, 0xeb, 0xe0, 0xa5, 0x65, 0x28, 0xe7, 0x30, 0x52, 0x3a, 0xd9, 0x56, 0xc5, 0x89, 0xa7, 0xe0,
	0x20, 0xc7, 0x42, 0x6f, 0xee, 0x35, 0xa6, 0x51, 0x31, 0x23, 0x2f, 0x41, 0xb4, 0xce, 0xf0, 0x07,
	0x55, 0xad, 0x29, 0x7d, 0xa5, 0x40, 0xbe, 0x04, 0xb7, 0xd2, 0x8a, 0x27, 0xd0, 0xc5, 0x1b, 0xca,
	0xb7, 0xd6, 0xba, 0x9a, 0x08, 0xf9, 0xd3, 0x06, 0x4f, 0xe9, 0x50, 0x47, 0x89, 0xf9, 0xd7, 0xcd,
	0x98, 0xa4, 0xfa, 0x8e, 0xfd, 0x2f, 0xbd, 0x6b, 0x20, 0x42, 0x40, 0x17, 0xbb, 0x49, 0xee, 0xb9,
	0x8a, 0x7e, 0xd7, 0xdb, 0x14, 0x87, 0x85, 0xdc, 0x73, 0x55, 0x03, 0xa9, 0xb6, 0x29, 0xd1, 0x3d,
	0xa2, 0x6b, 0x00, 0x4f, 0x07, 0x64, 0x33, 0x2d, 0xdb, 0x3e, 0xef, 0xe2, 0x1a, 0x11, 0xcf, 0x60,
	0x8c, 0xf9, 0x17, 0xb5, 0x66, 0x40, 0x9a, 0x23, 0x14, 0x77, 0x27, 0xe7, 0x5c, 0xea, 0x68, 0xbd,
	0x31, 0xb4, 0x1b, 0x3b, 0xaa, 0x85, 0x89, 0x09, 0x78, 0x94, 0xb8, 0x94, 0x00, 0x49, 0x9a, 0xd0,
	0xb7, 0x1e, 0xfd, 0xc1, 0xbc, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x89, 0x2b, 0xf6, 0x6e,
	0x06, 0x00, 0x00,
}
