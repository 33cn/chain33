// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Genesis struct {
	Isrun bool `protobuf:"varint,1,opt,name=isrun" json:"isrun,omitempty"`
}

func (m *Genesis) Reset()                    { *m = Genesis{} }
func (m *Genesis) String() string            { return proto.CompactTextString(m) }
func (*Genesis) ProtoMessage()               {}
func (*Genesis) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Genesis) GetIsrun() bool {
	if m != nil {
		return m.Isrun
	}
	return false
}

// message for execs.coins
type CoinsAction struct {
	// Types that are valid to be assigned to Value:
	//	*CoinsAction_Transfer
	//	*CoinsAction_Withdraw
	//	*CoinsAction_Genesis
	//	*CoinsAction_TransferToExec
	Value isCoinsAction_Value `protobuf_oneof:"value"`
	Ty    int32               `protobuf:"varint,3,opt,name=ty" json:"ty,omitempty"`
}

func (m *CoinsAction) Reset()                    { *m = CoinsAction{} }
func (m *CoinsAction) String() string            { return proto.CompactTextString(m) }
func (*CoinsAction) ProtoMessage()               {}
func (*CoinsAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

type isCoinsAction_Value interface {
	isCoinsAction_Value()
}

type CoinsAction_Transfer struct {
	Transfer *CoinsTransfer `protobuf:"bytes,1,opt,name=transfer,oneof"`
}
type CoinsAction_Withdraw struct {
	Withdraw *CoinsWithdraw `protobuf:"bytes,4,opt,name=withdraw,oneof"`
}
type CoinsAction_Genesis struct {
	Genesis *CoinsGenesis `protobuf:"bytes,2,opt,name=genesis,oneof"`
}
type CoinsAction_TransferToExec struct {
	TransferToExec *CoinsTransferToExec `protobuf:"bytes,5,opt,name=transferToExec,oneof"`
}

func (*CoinsAction_Transfer) isCoinsAction_Value()       {}
func (*CoinsAction_Withdraw) isCoinsAction_Value()       {}
func (*CoinsAction_Genesis) isCoinsAction_Value()        {}
func (*CoinsAction_TransferToExec) isCoinsAction_Value() {}

func (m *CoinsAction) GetValue() isCoinsAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CoinsAction) GetTransfer() *CoinsTransfer {
	if x, ok := m.GetValue().(*CoinsAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *CoinsAction) GetWithdraw() *CoinsWithdraw {
	if x, ok := m.GetValue().(*CoinsAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *CoinsAction) GetGenesis() *CoinsGenesis {
	if x, ok := m.GetValue().(*CoinsAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *CoinsAction) GetTransferToExec() *CoinsTransferToExec {
	if x, ok := m.GetValue().(*CoinsAction_TransferToExec); ok {
		return x.TransferToExec
	}
	return nil
}

func (m *CoinsAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CoinsAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CoinsAction_OneofMarshaler, _CoinsAction_OneofUnmarshaler, _CoinsAction_OneofSizer, []interface{}{
		(*CoinsAction_Transfer)(nil),
		(*CoinsAction_Withdraw)(nil),
		(*CoinsAction_Genesis)(nil),
		(*CoinsAction_TransferToExec)(nil),
	}
}

func _CoinsAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CoinsAction)
	// value
	switch x := m.Value.(type) {
	case *CoinsAction_Transfer:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *CoinsAction_Withdraw:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *CoinsAction_Genesis:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case *CoinsAction_TransferToExec:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferToExec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CoinsAction.Value has unexpected type %T", x)
	}
	return nil
}

func _CoinsAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CoinsAction)
	switch tag {
	case 1: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &CoinsAction_Transfer{msg}
		return true, err
	case 4: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &CoinsAction_Withdraw{msg}
		return true, err
	case 2: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &CoinsAction_Genesis{msg}
		return true, err
	case 5: // value.transferToExec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsTransferToExec)
		err := b.DecodeMessage(msg)
		m.Value = &CoinsAction_TransferToExec{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CoinsAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CoinsAction)
	// value
	switch x := m.Value.(type) {
	case *CoinsAction_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CoinsAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CoinsAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CoinsAction_TransferToExec:
		s := proto.Size(x.TransferToExec)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 给某个地址凭空打币
// 只能执行一次，不能执行第二次
type CoinsGenesis struct {
	Amount        int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	ReturnAddress string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *CoinsGenesis) Reset()                    { *m = CoinsGenesis{} }
func (m *CoinsGenesis) String() string            { return proto.CompactTextString(m) }
func (*CoinsGenesis) ProtoMessage()               {}
func (*CoinsGenesis) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *CoinsGenesis) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CoinsGenesis) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type CoinsTransfer struct {
	Cointoken string `protobuf:"bytes,1,opt,name=cointoken" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
}

func (m *CoinsTransfer) Reset()                    { *m = CoinsTransfer{} }
func (m *CoinsTransfer) String() string            { return proto.CompactTextString(m) }
func (*CoinsTransfer) ProtoMessage()               {}
func (*CoinsTransfer) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *CoinsTransfer) GetCointoken() string {
	if m != nil {
		return m.Cointoken
	}
	return ""
}

func (m *CoinsTransfer) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CoinsTransfer) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type CoinsTransferToExec struct {
	Cointoken string `protobuf:"bytes,1,opt,name=cointoken" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	ExecName  string `protobuf:"bytes,4,opt,name=execName" json:"execName,omitempty"`
}

func (m *CoinsTransferToExec) Reset()                    { *m = CoinsTransferToExec{} }
func (m *CoinsTransferToExec) String() string            { return proto.CompactTextString(m) }
func (*CoinsTransferToExec) ProtoMessage()               {}
func (*CoinsTransferToExec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *CoinsTransferToExec) GetCointoken() string {
	if m != nil {
		return m.Cointoken
	}
	return ""
}

func (m *CoinsTransferToExec) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CoinsTransferToExec) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *CoinsTransferToExec) GetExecName() string {
	if m != nil {
		return m.ExecName
	}
	return ""
}

type CoinsWithdraw struct {
	Cointoken string `protobuf:"bytes,1,opt,name=cointoken" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
}

func (m *CoinsWithdraw) Reset()                    { *m = CoinsWithdraw{} }
func (m *CoinsWithdraw) String() string            { return proto.CompactTextString(m) }
func (*CoinsWithdraw) ProtoMessage()               {}
func (*CoinsWithdraw) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *CoinsWithdraw) GetCointoken() string {
	if m != nil {
		return m.Cointoken
	}
	return ""
}

func (m *CoinsWithdraw) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CoinsWithdraw) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type Hashlock struct {
	HashlockId    []byte `protobuf:"bytes,1,opt,name=hashlockId,proto3" json:"hashlockId,omitempty"`
	Status        int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	CreateTime    int64  `protobuf:"varint,3,opt,name=CreateTime" json:"CreateTime,omitempty"`
	ToAddress     string `protobuf:"bytes,4,opt,name=toAddress" json:"toAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,5,opt,name=returnAddress" json:"returnAddress,omitempty"`
	Amount        int64  `protobuf:"varint,6,opt,name=amount" json:"amount,omitempty"`
	Frozentime    int64  `protobuf:"varint,7,opt,name=frozentime" json:"frozentime,omitempty"`
}

func (m *Hashlock) Reset()                    { *m = Hashlock{} }
func (m *Hashlock) String() string            { return proto.CompactTextString(m) }
func (*Hashlock) ProtoMessage()               {}
func (*Hashlock) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *Hashlock) GetHashlockId() []byte {
	if m != nil {
		return m.HashlockId
	}
	return nil
}

func (m *Hashlock) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Hashlock) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Hashlock) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *Hashlock) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

func (m *Hashlock) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Hashlock) GetFrozentime() int64 {
	if m != nil {
		return m.Frozentime
	}
	return 0
}

// message for hashlock
type HashlockAction struct {
	// Types that are valid to be assigned to Value:
	//	*HashlockAction_Hlock
	//	*HashlockAction_Hsend
	//	*HashlockAction_Hunlock
	Value isHashlockAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *HashlockAction) Reset()                    { *m = HashlockAction{} }
func (m *HashlockAction) String() string            { return proto.CompactTextString(m) }
func (*HashlockAction) ProtoMessage()               {}
func (*HashlockAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

type isHashlockAction_Value interface {
	isHashlockAction_Value()
}

type HashlockAction_Hlock struct {
	Hlock *HashlockLock `protobuf:"bytes,1,opt,name=hlock,oneof"`
}
type HashlockAction_Hsend struct {
	Hsend *HashlockSend `protobuf:"bytes,2,opt,name=hsend,oneof"`
}
type HashlockAction_Hunlock struct {
	Hunlock *HashlockUnlock `protobuf:"bytes,3,opt,name=hunlock,oneof"`
}

func (*HashlockAction_Hlock) isHashlockAction_Value()   {}
func (*HashlockAction_Hsend) isHashlockAction_Value()   {}
func (*HashlockAction_Hunlock) isHashlockAction_Value() {}

func (m *HashlockAction) GetValue() isHashlockAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *HashlockAction) GetHlock() *HashlockLock {
	if x, ok := m.GetValue().(*HashlockAction_Hlock); ok {
		return x.Hlock
	}
	return nil
}

func (m *HashlockAction) GetHsend() *HashlockSend {
	if x, ok := m.GetValue().(*HashlockAction_Hsend); ok {
		return x.Hsend
	}
	return nil
}

func (m *HashlockAction) GetHunlock() *HashlockUnlock {
	if x, ok := m.GetValue().(*HashlockAction_Hunlock); ok {
		return x.Hunlock
	}
	return nil
}

func (m *HashlockAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HashlockAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HashlockAction_OneofMarshaler, _HashlockAction_OneofUnmarshaler, _HashlockAction_OneofSizer, []interface{}{
		(*HashlockAction_Hlock)(nil),
		(*HashlockAction_Hsend)(nil),
		(*HashlockAction_Hunlock)(nil),
	}
}

func _HashlockAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HashlockAction)
	// value
	switch x := m.Value.(type) {
	case *HashlockAction_Hlock:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hlock); err != nil {
			return err
		}
	case *HashlockAction_Hsend:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hsend); err != nil {
			return err
		}
	case *HashlockAction_Hunlock:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hunlock); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HashlockAction.Value has unexpected type %T", x)
	}
	return nil
}

func _HashlockAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HashlockAction)
	switch tag {
	case 1: // value.hlock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HashlockLock)
		err := b.DecodeMessage(msg)
		m.Value = &HashlockAction_Hlock{msg}
		return true, err
	case 2: // value.hsend
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HashlockSend)
		err := b.DecodeMessage(msg)
		m.Value = &HashlockAction_Hsend{msg}
		return true, err
	case 3: // value.hunlock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HashlockUnlock)
		err := b.DecodeMessage(msg)
		m.Value = &HashlockAction_Hunlock{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HashlockAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HashlockAction)
	// value
	switch x := m.Value.(type) {
	case *HashlockAction_Hlock:
		s := proto.Size(x.Hlock)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HashlockAction_Hsend:
		s := proto.Size(x.Hsend)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HashlockAction_Hunlock:
		s := proto.Size(x.Hunlock)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HashlockLock struct {
	Amount        int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Time          int64  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Hash          []byte `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	ToAddress     string `protobuf:"bytes,4,opt,name=toAddress" json:"toAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,5,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *HashlockLock) Reset()                    { *m = HashlockLock{} }
func (m *HashlockLock) String() string            { return proto.CompactTextString(m) }
func (*HashlockLock) ProtoMessage()               {}
func (*HashlockLock) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *HashlockLock) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *HashlockLock) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *HashlockLock) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *HashlockLock) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *HashlockLock) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type HashlockUnlock struct {
	Secret []byte `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (m *HashlockUnlock) Reset()                    { *m = HashlockUnlock{} }
func (m *HashlockUnlock) String() string            { return proto.CompactTextString(m) }
func (*HashlockUnlock) ProtoMessage()               {}
func (*HashlockUnlock) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *HashlockUnlock) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type HashlockSend struct {
	Secret []byte `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (m *HashlockSend) Reset()                    { *m = HashlockSend{} }
func (m *HashlockSend) String() string            { return proto.CompactTextString(m) }
func (*HashlockSend) ProtoMessage()               {}
func (*HashlockSend) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *HashlockSend) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type HashRecv struct {
	HashlockId []byte         `protobuf:"bytes,1,opt,name=HashlockId,proto3" json:"HashlockId,omitempty"`
	Infomation *Hashlockquery `protobuf:"bytes,2,opt,name=Infomation" json:"Infomation,omitempty"`
}

func (m *HashRecv) Reset()                    { *m = HashRecv{} }
func (m *HashRecv) String() string            { return proto.CompactTextString(m) }
func (*HashRecv) ProtoMessage()               {}
func (*HashRecv) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *HashRecv) GetHashlockId() []byte {
	if m != nil {
		return m.HashlockId
	}
	return nil
}

func (m *HashRecv) GetInfomation() *Hashlockquery {
	if m != nil {
		return m.Infomation
	}
	return nil
}

type Hashlockquery struct {
	Time        int64 `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	Status      int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Amount      int64 `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	CreateTime  int64 `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
	CurrentTime int64 `protobuf:"varint,5,opt,name=currentTime" json:"currentTime,omitempty"`
}

func (m *Hashlockquery) Reset()                    { *m = Hashlockquery{} }
func (m *Hashlockquery) String() string            { return proto.CompactTextString(m) }
func (*Hashlockquery) ProtoMessage()               {}
func (*Hashlockquery) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *Hashlockquery) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Hashlockquery) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Hashlockquery) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Hashlockquery) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Hashlockquery) GetCurrentTime() int64 {
	if m != nil {
		return m.CurrentTime
	}
	return 0
}

type Ticket struct {
	TicketId string `protobuf:"bytes,1,opt,name=ticketId" json:"ticketId,omitempty"`
	// 0 -> 未成熟 1 -> 可挖矿 2 -> 已挖成功 3-> 已关闭
	Status int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	// genesis 创建的私钥比较特殊
	IsGenesis bool `protobuf:"varint,3,opt,name=isGenesis" json:"isGenesis,omitempty"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
	// 挖矿时间
	MinerTime int64 `protobuf:"varint,5,opt,name=minerTime" json:"minerTime,omitempty"`
	// 挖到的币的数目
	MinerValue   int64  `protobuf:"varint,8,opt,name=minerValue" json:"minerValue,omitempty"`
	MinerAddress string `protobuf:"bytes,6,opt,name=minerAddress" json:"minerAddress,omitempty"`
	// return wallet
	ReturnAddress string `protobuf:"bytes,7,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *Ticket) Reset()                    { *m = Ticket{} }
func (m *Ticket) String() string            { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()               {}
func (*Ticket) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *Ticket) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *Ticket) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Ticket) GetIsGenesis() bool {
	if m != nil {
		return m.IsGenesis
	}
	return false
}

func (m *Ticket) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Ticket) GetMinerTime() int64 {
	if m != nil {
		return m.MinerTime
	}
	return 0
}

func (m *Ticket) GetMinerValue() int64 {
	if m != nil {
		return m.MinerValue
	}
	return 0
}

func (m *Ticket) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *Ticket) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

// message for execs.ticket
type TicketAction struct {
	// Types that are valid to be assigned to Value:
	//	*TicketAction_Tbind
	//	*TicketAction_Topen
	//	*TicketAction_Genesis
	//	*TicketAction_Tclose
	//	*TicketAction_Miner
	Value isTicketAction_Value `protobuf_oneof:"value"`
	Ty    int32                `protobuf:"varint,10,opt,name=ty" json:"ty,omitempty"`
}

func (m *TicketAction) Reset()                    { *m = TicketAction{} }
func (m *TicketAction) String() string            { return proto.CompactTextString(m) }
func (*TicketAction) ProtoMessage()               {}
func (*TicketAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

type isTicketAction_Value interface {
	isTicketAction_Value()
}

type TicketAction_Tbind struct {
	Tbind *TicketBind `protobuf:"bytes,5,opt,name=tbind,oneof"`
}
type TicketAction_Topen struct {
	Topen *TicketOpen `protobuf:"bytes,1,opt,name=topen,oneof"`
}
type TicketAction_Genesis struct {
	Genesis *TicketGenesis `protobuf:"bytes,2,opt,name=genesis,oneof"`
}
type TicketAction_Tclose struct {
	Tclose *TicketClose `protobuf:"bytes,3,opt,name=tclose,oneof"`
}
type TicketAction_Miner struct {
	Miner *TicketMiner `protobuf:"bytes,4,opt,name=miner,oneof"`
}

func (*TicketAction_Tbind) isTicketAction_Value()   {}
func (*TicketAction_Topen) isTicketAction_Value()   {}
func (*TicketAction_Genesis) isTicketAction_Value() {}
func (*TicketAction_Tclose) isTicketAction_Value()  {}
func (*TicketAction_Miner) isTicketAction_Value()   {}

func (m *TicketAction) GetValue() isTicketAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TicketAction) GetTbind() *TicketBind {
	if x, ok := m.GetValue().(*TicketAction_Tbind); ok {
		return x.Tbind
	}
	return nil
}

func (m *TicketAction) GetTopen() *TicketOpen {
	if x, ok := m.GetValue().(*TicketAction_Topen); ok {
		return x.Topen
	}
	return nil
}

func (m *TicketAction) GetGenesis() *TicketGenesis {
	if x, ok := m.GetValue().(*TicketAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *TicketAction) GetTclose() *TicketClose {
	if x, ok := m.GetValue().(*TicketAction_Tclose); ok {
		return x.Tclose
	}
	return nil
}

func (m *TicketAction) GetMiner() *TicketMiner {
	if x, ok := m.GetValue().(*TicketAction_Miner); ok {
		return x.Miner
	}
	return nil
}

func (m *TicketAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TicketAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TicketAction_OneofMarshaler, _TicketAction_OneofUnmarshaler, _TicketAction_OneofSizer, []interface{}{
		(*TicketAction_Tbind)(nil),
		(*TicketAction_Topen)(nil),
		(*TicketAction_Genesis)(nil),
		(*TicketAction_Tclose)(nil),
		(*TicketAction_Miner)(nil),
	}
}

func _TicketAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TicketAction)
	// value
	switch x := m.Value.(type) {
	case *TicketAction_Tbind:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tbind); err != nil {
			return err
		}
	case *TicketAction_Topen:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Topen); err != nil {
			return err
		}
	case *TicketAction_Genesis:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case *TicketAction_Tclose:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tclose); err != nil {
			return err
		}
	case *TicketAction_Miner:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Miner); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TicketAction.Value has unexpected type %T", x)
	}
	return nil
}

func _TicketAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TicketAction)
	switch tag {
	case 5: // value.tbind
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketBind)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Tbind{msg}
		return true, err
	case 1: // value.topen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketOpen)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Topen{msg}
		return true, err
	case 2: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Genesis{msg}
		return true, err
	case 3: // value.tclose
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketClose)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Tclose{msg}
		return true, err
	case 4: // value.miner
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketMiner)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Miner{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TicketAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TicketAction)
	// value
	switch x := m.Value.(type) {
	case *TicketAction_Tbind:
		s := proto.Size(x.Tbind)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Topen:
		s := proto.Size(x.Topen)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Tclose:
		s := proto.Size(x.Tclose)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Miner:
		s := proto.Size(x.Miner)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TicketMiner struct {
	Bits     uint32 `protobuf:"varint,1,opt,name=bits" json:"bits,omitempty"`
	Reward   int64  `protobuf:"varint,2,opt,name=reward" json:"reward,omitempty"`
	TicketId string `protobuf:"bytes,3,opt,name=ticketId" json:"ticketId,omitempty"`
	Modify   []byte `protobuf:"bytes,4,opt,name=modify,proto3" json:"modify,omitempty"`
}

func (m *TicketMiner) Reset()                    { *m = TicketMiner{} }
func (m *TicketMiner) String() string            { return proto.CompactTextString(m) }
func (*TicketMiner) ProtoMessage()               {}
func (*TicketMiner) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *TicketMiner) GetBits() uint32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *TicketMiner) GetReward() int64 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *TicketMiner) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *TicketMiner) GetModify() []byte {
	if m != nil {
		return m.Modify
	}
	return nil
}

type TicketBind struct {
	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *TicketBind) Reset()                    { *m = TicketBind{} }
func (m *TicketBind) String() string            { return proto.CompactTextString(m) }
func (*TicketBind) ProtoMessage()               {}
func (*TicketBind) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *TicketBind) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketBind) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type TicketOpen struct {
	// 用户挖矿的ticket 地址
	MinerAddress string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	// 购买ticket的数目
	Count int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	// 币实际存储的地址
	ReturnAddress string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *TicketOpen) Reset()                    { *m = TicketOpen{} }
func (m *TicketOpen) String() string            { return proto.CompactTextString(m) }
func (*TicketOpen) ProtoMessage()               {}
func (*TicketOpen) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

func (m *TicketOpen) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketOpen) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TicketOpen) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type TicketGenesis struct {
	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress" json:"returnAddress,omitempty"`
	Count         int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *TicketGenesis) Reset()                    { *m = TicketGenesis{} }
func (m *TicketGenesis) String() string            { return proto.CompactTextString(m) }
func (*TicketGenesis) ProtoMessage()               {}
func (*TicketGenesis) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *TicketGenesis) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketGenesis) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

func (m *TicketGenesis) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TicketClose struct {
	TicketId []string `protobuf:"bytes,1,rep,name=ticketId" json:"ticketId,omitempty"`
}

func (m *TicketClose) Reset()                    { *m = TicketClose{} }
func (m *TicketClose) String() string            { return proto.CompactTextString(m) }
func (*TicketClose) ProtoMessage()               {}
func (*TicketClose) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

func (m *TicketClose) GetTicketId() []string {
	if m != nil {
		return m.TicketId
	}
	return nil
}

type TicketList struct {
	Addr   string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
}

func (m *TicketList) Reset()                    { *m = TicketList{} }
func (m *TicketList) String() string            { return proto.CompactTextString(m) }
func (*TicketList) ProtoMessage()               {}
func (*TicketList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

func (m *TicketList) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TicketList) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type TicketInfos struct {
	TicketIds []string `protobuf:"bytes,1,rep,name=ticketIds" json:"ticketIds,omitempty"`
}

func (m *TicketInfos) Reset()                    { *m = TicketInfos{} }
func (m *TicketInfos) String() string            { return proto.CompactTextString(m) }
func (*TicketInfos) ProtoMessage()               {}
func (*TicketInfos) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{21} }

func (m *TicketInfos) GetTicketIds() []string {
	if m != nil {
		return m.TicketIds
	}
	return nil
}

type ReplyTicketList struct {
	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
}

func (m *ReplyTicketList) Reset()                    { *m = ReplyTicketList{} }
func (m *ReplyTicketList) String() string            { return proto.CompactTextString(m) }
func (*ReplyTicketList) ProtoMessage()               {}
func (*ReplyTicketList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{22} }

func (m *ReplyTicketList) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

type ReplyWalletTickets struct {
	Tickets  []*Ticket `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
	Privkeys [][]byte  `protobuf:"bytes,2,rep,name=privkeys,proto3" json:"privkeys,omitempty"`
}

func (m *ReplyWalletTickets) Reset()                    { *m = ReplyWalletTickets{} }
func (m *ReplyWalletTickets) String() string            { return proto.CompactTextString(m) }
func (*ReplyWalletTickets) ProtoMessage()               {}
func (*ReplyWalletTickets) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{23} }

func (m *ReplyWalletTickets) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

func (m *ReplyWalletTickets) GetPrivkeys() [][]byte {
	if m != nil {
		return m.Privkeys
	}
	return nil
}

type ReceiptTicket struct {
	TicketId   string `protobuf:"bytes,1,opt,name=ticketId" json:"ticketId,omitempty"`
	Status     int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	PrevStatus int32  `protobuf:"varint,3,opt,name=prevStatus" json:"prevStatus,omitempty"`
	Addr       string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *ReceiptTicket) Reset()                    { *m = ReceiptTicket{} }
func (m *ReceiptTicket) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTicket) ProtoMessage()               {}
func (*ReceiptTicket) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{24} }

func (m *ReceiptTicket) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *ReceiptTicket) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptTicket) GetPrevStatus() int32 {
	if m != nil {
		return m.PrevStatus
	}
	return 0
}

func (m *ReceiptTicket) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReceiptTicketBind struct {
	OldMinerAddress string `protobuf:"bytes,1,opt,name=oldMinerAddress" json:"oldMinerAddress,omitempty"`
	NewMinerAddress string `protobuf:"bytes,2,opt,name=newMinerAddress" json:"newMinerAddress,omitempty"`
	ReturnAddress   string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *ReceiptTicketBind) Reset()                    { *m = ReceiptTicketBind{} }
func (m *ReceiptTicketBind) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTicketBind) ProtoMessage()               {}
func (*ReceiptTicketBind) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{25} }

func (m *ReceiptTicketBind) GetOldMinerAddress() string {
	if m != nil {
		return m.OldMinerAddress
	}
	return ""
}

func (m *ReceiptTicketBind) GetNewMinerAddress() string {
	if m != nil {
		return m.NewMinerAddress
	}
	return ""
}

func (m *ReceiptTicketBind) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type ExecTxList struct {
	StateHash  []byte         `protobuf:"bytes,1,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	Txs        []*Transaction `protobuf:"bytes,2,rep,name=txs" json:"txs,omitempty"`
	BlockTime  int64          `protobuf:"varint,3,opt,name=blockTime" json:"blockTime,omitempty"`
	Height     int64          `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	CoinBase   string         `protobuf:"bytes,5,opt,name=coinBase" json:"coinBase,omitempty"`
	Difficulty uint64         `protobuf:"varint,6,opt,name=difficulty" json:"difficulty,omitempty"`
}

func (m *ExecTxList) Reset()                    { *m = ExecTxList{} }
func (m *ExecTxList) String() string            { return proto.CompactTextString(m) }
func (*ExecTxList) ProtoMessage()               {}
func (*ExecTxList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{26} }

func (m *ExecTxList) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

func (m *ExecTxList) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *ExecTxList) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ExecTxList) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ExecTxList) GetCoinBase() string {
	if m != nil {
		return m.CoinBase
	}
	return ""
}

func (m *ExecTxList) GetDifficulty() uint64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

type Query struct {
	Execer   []byte `protobuf:"bytes,1,opt,name=execer,proto3" json:"execer,omitempty"`
	FuncName string `protobuf:"bytes,2,opt,name=funcName" json:"funcName,omitempty"`
	Payload  []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{27} }

func (m *Query) GetExecer() []byte {
	if m != nil {
		return m.Execer
	}
	return nil
}

func (m *Query) GetFuncName() string {
	if m != nil {
		return m.FuncName
	}
	return ""
}

func (m *Query) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Norm struct {
	NormId     []byte `protobuf:"bytes,1,opt,name=normId,proto3" json:"normId,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime" json:"createTime,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value      []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Norm) Reset()                    { *m = Norm{} }
func (m *Norm) String() string            { return proto.CompactTextString(m) }
func (*Norm) ProtoMessage()               {}
func (*Norm) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{28} }

func (m *Norm) GetNormId() []byte {
	if m != nil {
		return m.NormId
	}
	return nil
}

func (m *Norm) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Norm) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Norm) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type NormAction struct {
	// Types that are valid to be assigned to Value:
	//	*NormAction_Nput
	Value isNormAction_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,5,opt,name=ty" json:"ty,omitempty"`
}

func (m *NormAction) Reset()                    { *m = NormAction{} }
func (m *NormAction) String() string            { return proto.CompactTextString(m) }
func (*NormAction) ProtoMessage()               {}
func (*NormAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{29} }

type isNormAction_Value interface {
	isNormAction_Value()
}

type NormAction_Nput struct {
	Nput *NormPut `protobuf:"bytes,1,opt,name=nput,oneof"`
}

func (*NormAction_Nput) isNormAction_Value() {}

func (m *NormAction) GetValue() isNormAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *NormAction) GetNput() *NormPut {
	if x, ok := m.GetValue().(*NormAction_Nput); ok {
		return x.Nput
	}
	return nil
}

func (m *NormAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NormAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NormAction_OneofMarshaler, _NormAction_OneofUnmarshaler, _NormAction_OneofSizer, []interface{}{
		(*NormAction_Nput)(nil),
	}
}

func _NormAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NormAction)
	// value
	switch x := m.Value.(type) {
	case *NormAction_Nput:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nput); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NormAction.Value has unexpected type %T", x)
	}
	return nil
}

func _NormAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NormAction)
	switch tag {
	case 1: // value.nput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NormPut)
		err := b.DecodeMessage(msg)
		m.Value = &NormAction_Nput{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NormAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NormAction)
	// value
	switch x := m.Value.(type) {
	case *NormAction_Nput:
		s := proto.Size(x.Nput)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NormPut struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *NormPut) Reset()                    { *m = NormPut{} }
func (m *NormPut) String() string            { return proto.CompactTextString(m) }
func (*NormPut) ProtoMessage()               {}
func (*NormPut) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{30} }

func (m *NormPut) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NormPut) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// message for retrieve start
type RetrievePara struct {
	DefaultAddress string `protobuf:"bytes,1,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	Status         int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	CreateTime     int64  `protobuf:"varint,3,opt,name=createTime" json:"createTime,omitempty"`
	PrepareTime    int64  `protobuf:"varint,4,opt,name=prepareTime" json:"prepareTime,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,5,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
}

func (m *RetrievePara) Reset()                    { *m = RetrievePara{} }
func (m *RetrievePara) String() string            { return proto.CompactTextString(m) }
func (*RetrievePara) ProtoMessage()               {}
func (*RetrievePara) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{31} }

func (m *RetrievePara) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *RetrievePara) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RetrievePara) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *RetrievePara) GetPrepareTime() int64 {
	if m != nil {
		return m.PrepareTime
	}
	return 0
}

func (m *RetrievePara) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

type Retrieve struct {
	// used as key
	BackupAddress string          `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	RetPara       []*RetrievePara `protobuf:"bytes,2,rep,name=retPara" json:"retPara,omitempty"`
}

func (m *Retrieve) Reset()                    { *m = Retrieve{} }
func (m *Retrieve) String() string            { return proto.CompactTextString(m) }
func (*Retrieve) ProtoMessage()               {}
func (*Retrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{32} }

func (m *Retrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *Retrieve) GetRetPara() []*RetrievePara {
	if m != nil {
		return m.RetPara
	}
	return nil
}

type RetrieveAction struct {
	// Types that are valid to be assigned to Value:
	//	*RetrieveAction_PreRet
	//	*RetrieveAction_PerfRet
	//	*RetrieveAction_Backup
	//	*RetrieveAction_Cancel
	Value isRetrieveAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,5,opt,name=ty" json:"ty,omitempty"`
}

func (m *RetrieveAction) Reset()                    { *m = RetrieveAction{} }
func (m *RetrieveAction) String() string            { return proto.CompactTextString(m) }
func (*RetrieveAction) ProtoMessage()               {}
func (*RetrieveAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{33} }

type isRetrieveAction_Value interface {
	isRetrieveAction_Value()
}

type RetrieveAction_PreRet struct {
	PreRet *PreRetrieve `protobuf:"bytes,1,opt,name=preRet,oneof"`
}
type RetrieveAction_PerfRet struct {
	PerfRet *PerformRetrieve `protobuf:"bytes,2,opt,name=perfRet,oneof"`
}
type RetrieveAction_Backup struct {
	Backup *BackupRetrieve `protobuf:"bytes,3,opt,name=backup,oneof"`
}
type RetrieveAction_Cancel struct {
	Cancel *CancelRetrieve `protobuf:"bytes,4,opt,name=cancel,oneof"`
}

func (*RetrieveAction_PreRet) isRetrieveAction_Value()  {}
func (*RetrieveAction_PerfRet) isRetrieveAction_Value() {}
func (*RetrieveAction_Backup) isRetrieveAction_Value()  {}
func (*RetrieveAction_Cancel) isRetrieveAction_Value()  {}

func (m *RetrieveAction) GetValue() isRetrieveAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RetrieveAction) GetPreRet() *PreRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_PreRet); ok {
		return x.PreRet
	}
	return nil
}

func (m *RetrieveAction) GetPerfRet() *PerformRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_PerfRet); ok {
		return x.PerfRet
	}
	return nil
}

func (m *RetrieveAction) GetBackup() *BackupRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_Backup); ok {
		return x.Backup
	}
	return nil
}

func (m *RetrieveAction) GetCancel() *CancelRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *RetrieveAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RetrieveAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RetrieveAction_OneofMarshaler, _RetrieveAction_OneofUnmarshaler, _RetrieveAction_OneofSizer, []interface{}{
		(*RetrieveAction_PreRet)(nil),
		(*RetrieveAction_PerfRet)(nil),
		(*RetrieveAction_Backup)(nil),
		(*RetrieveAction_Cancel)(nil),
	}
}

func _RetrieveAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RetrieveAction)
	// value
	switch x := m.Value.(type) {
	case *RetrieveAction_PreRet:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PreRet); err != nil {
			return err
		}
	case *RetrieveAction_PerfRet:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PerfRet); err != nil {
			return err
		}
	case *RetrieveAction_Backup:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Backup); err != nil {
			return err
		}
	case *RetrieveAction_Cancel:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RetrieveAction.Value has unexpected type %T", x)
	}
	return nil
}

func _RetrieveAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RetrieveAction)
	switch tag {
	case 1: // value.preRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PreRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_PreRet{msg}
		return true, err
	case 2: // value.perfRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PerformRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_PerfRet{msg}
		return true, err
	case 3: // value.backup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BackupRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_Backup{msg}
		return true, err
	case 4: // value.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CancelRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_Cancel{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RetrieveAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RetrieveAction)
	// value
	switch x := m.Value.(type) {
	case *RetrieveAction_PreRet:
		s := proto.Size(x.PreRet)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_PerfRet:
		s := proto.Size(x.PerfRet)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_Backup:
		s := proto.Size(x.Backup)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BackupRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,3,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
}

func (m *BackupRetrieve) Reset()                    { *m = BackupRetrieve{} }
func (m *BackupRetrieve) String() string            { return proto.CompactTextString(m) }
func (*BackupRetrieve) ProtoMessage()               {}
func (*BackupRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{34} }

func (m *BackupRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *BackupRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *BackupRetrieve) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

type PreRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *PreRetrieve) Reset()                    { *m = PreRetrieve{} }
func (m *PreRetrieve) String() string            { return proto.CompactTextString(m) }
func (*PreRetrieve) ProtoMessage()               {}
func (*PreRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{35} }

func (m *PreRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *PreRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type PerformRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *PerformRetrieve) Reset()                    { *m = PerformRetrieve{} }
func (m *PerformRetrieve) String() string            { return proto.CompactTextString(m) }
func (*PerformRetrieve) ProtoMessage()               {}
func (*PerformRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{36} }

func (m *PerformRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *PerformRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type CancelRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *CancelRetrieve) Reset()                    { *m = CancelRetrieve{} }
func (m *CancelRetrieve) String() string            { return proto.CompactTextString(m) }
func (*CancelRetrieve) ProtoMessage()               {}
func (*CancelRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{37} }

func (m *CancelRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *CancelRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type ReqRetrieveInfo struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *ReqRetrieveInfo) Reset()                    { *m = ReqRetrieveInfo{} }
func (m *ReqRetrieveInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqRetrieveInfo) ProtoMessage()               {}
func (*ReqRetrieveInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{38} }

func (m *ReqRetrieveInfo) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *ReqRetrieveInfo) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type RetrieveQuery struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,3,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
	PrepareTime    int64  `protobuf:"varint,4,opt,name=prepareTime" json:"prepareTime,omitempty"`
	RemainTime     int64  `protobuf:"varint,5,opt,name=remainTime" json:"remainTime,omitempty"`
	Status         int32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
}

func (m *RetrieveQuery) Reset()                    { *m = RetrieveQuery{} }
func (m *RetrieveQuery) String() string            { return proto.CompactTextString(m) }
func (*RetrieveQuery) ProtoMessage()               {}
func (*RetrieveQuery) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{39} }

func (m *RetrieveQuery) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *RetrieveQuery) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *RetrieveQuery) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

func (m *RetrieveQuery) GetPrepareTime() int64 {
	if m != nil {
		return m.PrepareTime
	}
	return 0
}

func (m *RetrieveQuery) GetRemainTime() int64 {
	if m != nil {
		return m.RemainTime
	}
	return 0
}

func (m *RetrieveQuery) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////////
// message for token start/////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
type TokenAction struct {
	// Types that are valid to be assigned to Value:
	//	*TokenAction_Tokenprecreate
	//	*TokenAction_Tokenfinishcreate
	//	*TokenAction_Tokenrevokecreate
	//	*TokenAction_Transfer
	//	*TokenAction_Withdraw
	//	*TokenAction_Genesis
	//	*TokenAction_TransferToExec
	Value isTokenAction_Value `protobuf_oneof:"value"`
	Ty    int32               `protobuf:"varint,7,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *TokenAction) Reset()                    { *m = TokenAction{} }
func (m *TokenAction) String() string            { return proto.CompactTextString(m) }
func (*TokenAction) ProtoMessage()               {}
func (*TokenAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{40} }

type isTokenAction_Value interface {
	isTokenAction_Value()
}

type TokenAction_Tokenprecreate struct {
	Tokenprecreate *TokenPreCreate `protobuf:"bytes,1,opt,name=tokenprecreate,oneof"`
}
type TokenAction_Tokenfinishcreate struct {
	Tokenfinishcreate *TokenFinishCreate `protobuf:"bytes,2,opt,name=tokenfinishcreate,oneof"`
}
type TokenAction_Tokenrevokecreate struct {
	Tokenrevokecreate *TokenRevokeCreate `protobuf:"bytes,3,opt,name=tokenrevokecreate,oneof"`
}
type TokenAction_Transfer struct {
	Transfer *CoinsTransfer `protobuf:"bytes,4,opt,name=transfer,oneof"`
}
type TokenAction_Withdraw struct {
	Withdraw *CoinsWithdraw `protobuf:"bytes,5,opt,name=withdraw,oneof"`
}
type TokenAction_Genesis struct {
	Genesis *CoinsGenesis `protobuf:"bytes,6,opt,name=genesis,oneof"`
}
type TokenAction_TransferToExec struct {
	TransferToExec *CoinsTransferToExec `protobuf:"bytes,8,opt,name=transferToExec,oneof"`
}

func (*TokenAction_Tokenprecreate) isTokenAction_Value()    {}
func (*TokenAction_Tokenfinishcreate) isTokenAction_Value() {}
func (*TokenAction_Tokenrevokecreate) isTokenAction_Value() {}
func (*TokenAction_Transfer) isTokenAction_Value()          {}
func (*TokenAction_Withdraw) isTokenAction_Value()          {}
func (*TokenAction_Genesis) isTokenAction_Value()           {}
func (*TokenAction_TransferToExec) isTokenAction_Value()    {}

func (m *TokenAction) GetValue() isTokenAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TokenAction) GetTokenprecreate() *TokenPreCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenprecreate); ok {
		return x.Tokenprecreate
	}
	return nil
}

func (m *TokenAction) GetTokenfinishcreate() *TokenFinishCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenfinishcreate); ok {
		return x.Tokenfinishcreate
	}
	return nil
}

func (m *TokenAction) GetTokenrevokecreate() *TokenRevokeCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenrevokecreate); ok {
		return x.Tokenrevokecreate
	}
	return nil
}

func (m *TokenAction) GetTransfer() *CoinsTransfer {
	if x, ok := m.GetValue().(*TokenAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *TokenAction) GetWithdraw() *CoinsWithdraw {
	if x, ok := m.GetValue().(*TokenAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *TokenAction) GetGenesis() *CoinsGenesis {
	if x, ok := m.GetValue().(*TokenAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *TokenAction) GetTransferToExec() *CoinsTransferToExec {
	if x, ok := m.GetValue().(*TokenAction_TransferToExec); ok {
		return x.TransferToExec
	}
	return nil
}

func (m *TokenAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TokenAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TokenAction_OneofMarshaler, _TokenAction_OneofUnmarshaler, _TokenAction_OneofSizer, []interface{}{
		(*TokenAction_Tokenprecreate)(nil),
		(*TokenAction_Tokenfinishcreate)(nil),
		(*TokenAction_Tokenrevokecreate)(nil),
		(*TokenAction_Transfer)(nil),
		(*TokenAction_Withdraw)(nil),
		(*TokenAction_Genesis)(nil),
		(*TokenAction_TransferToExec)(nil),
	}
}

func _TokenAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TokenAction)
	// value
	switch x := m.Value.(type) {
	case *TokenAction_Tokenprecreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenprecreate); err != nil {
			return err
		}
	case *TokenAction_Tokenfinishcreate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenfinishcreate); err != nil {
			return err
		}
	case *TokenAction_Tokenrevokecreate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenrevokecreate); err != nil {
			return err
		}
	case *TokenAction_Transfer:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *TokenAction_Withdraw:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *TokenAction_Genesis:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case *TokenAction_TransferToExec:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferToExec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TokenAction.Value has unexpected type %T", x)
	}
	return nil
}

func _TokenAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TokenAction)
	switch tag {
	case 1: // value.tokenprecreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenPreCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenprecreate{msg}
		return true, err
	case 2: // value.tokenfinishcreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenFinishCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenfinishcreate{msg}
		return true, err
	case 3: // value.tokenrevokecreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenRevokeCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenrevokecreate{msg}
		return true, err
	case 4: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Transfer{msg}
		return true, err
	case 5: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Withdraw{msg}
		return true, err
	case 6: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Genesis{msg}
		return true, err
	case 8: // value.transferToExec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsTransferToExec)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_TransferToExec{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TokenAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TokenAction)
	// value
	switch x := m.Value.(type) {
	case *TokenAction_Tokenprecreate:
		s := proto.Size(x.Tokenprecreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Tokenfinishcreate:
		s := proto.Size(x.Tokenfinishcreate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Tokenrevokecreate:
		s := proto.Size(x.Tokenrevokecreate)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_TransferToExec:
		s := proto.Size(x.TransferToExec)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 创建token，支持最大精确度是6位小数,即存入数据库的实际总额需要放大1e6倍
type TokenPreCreate struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction" json:"introduction,omitempty"`
	Total        int64  `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Price        int64  `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	Owner        string `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenPreCreate) Reset()                    { *m = TokenPreCreate{} }
func (m *TokenPreCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenPreCreate) ProtoMessage()               {}
func (*TokenPreCreate) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{41} }

func (m *TokenPreCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TokenPreCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenPreCreate) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *TokenPreCreate) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TokenPreCreate) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TokenPreCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type TokenFinishCreate struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenFinishCreate) Reset()                    { *m = TokenFinishCreate{} }
func (m *TokenFinishCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenFinishCreate) ProtoMessage()               {}
func (*TokenFinishCreate) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{42} }

func (m *TokenFinishCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenFinishCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type TokenRevokeCreate struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenRevokeCreate) Reset()                    { *m = TokenRevokeCreate{} }
func (m *TokenRevokeCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenRevokeCreate) ProtoMessage()               {}
func (*TokenRevokeCreate) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{43} }

func (m *TokenRevokeCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenRevokeCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type Token struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction" json:"introduction,omitempty"`
	Total        int64  `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Price        int64  `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	Owner        string `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
	Creator      string `protobuf:"bytes,7,opt,name=creator" json:"creator,omitempty"`
	Status       int32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{44} }

func (m *Token) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Token) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Token) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *Token) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Token) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Token) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Token) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Token) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReqTokens struct {
	QueryAll bool     `protobuf:"varint,1,opt,name=queryAll" json:"queryAll,omitempty"`
	Status   int32    `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Tokens   []string `protobuf:"bytes,3,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *ReqTokens) Reset()                    { *m = ReqTokens{} }
func (m *ReqTokens) String() string            { return proto.CompactTextString(m) }
func (*ReqTokens) ProtoMessage()               {}
func (*ReqTokens) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{45} }

func (m *ReqTokens) GetQueryAll() bool {
	if m != nil {
		return m.QueryAll
	}
	return false
}

func (m *ReqTokens) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqTokens) GetTokens() []string {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type ReplyTokens struct {
	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *ReplyTokens) Reset()                    { *m = ReplyTokens{} }
func (m *ReplyTokens) String() string            { return proto.CompactTextString(m) }
func (*ReplyTokens) ProtoMessage()               {}
func (*ReplyTokens) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{46} }

func (m *ReplyTokens) GetTokens() []*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type ReceiptToken struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
}

func (m *ReceiptToken) Reset()                    { *m = ReceiptToken{} }
func (m *ReceiptToken) String() string            { return proto.CompactTextString(m) }
func (*ReceiptToken) ProtoMessage()               {}
func (*ReceiptToken) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{47} }

func (m *ReceiptToken) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReceiptToken) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptToken) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type TokenRecv struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Recv  int64  `protobuf:"varint,2,opt,name=recv" json:"recv,omitempty"`
}

func (m *TokenRecv) Reset()                    { *m = TokenRecv{} }
func (m *TokenRecv) String() string            { return proto.CompactTextString(m) }
func (*TokenRecv) ProtoMessage()               {}
func (*TokenRecv) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{48} }

func (m *TokenRecv) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenRecv) GetRecv() int64 {
	if m != nil {
		return m.Recv
	}
	return 0
}

type ReplyAddrRecvForTokens struct {
	TokenRecvs []*TokenRecv `protobuf:"bytes,1,rep,name=tokenRecvs" json:"tokenRecvs,omitempty"`
}

func (m *ReplyAddrRecvForTokens) Reset()                    { *m = ReplyAddrRecvForTokens{} }
func (m *ReplyAddrRecvForTokens) String() string            { return proto.CompactTextString(m) }
func (*ReplyAddrRecvForTokens) ProtoMessage()               {}
func (*ReplyAddrRecvForTokens) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{49} }

func (m *ReplyAddrRecvForTokens) GetTokenRecvs() []*TokenRecv {
	if m != nil {
		return m.TokenRecvs
	}
	return nil
}

// 配置修改部分
type ArrayConfig struct {
	Value []string `protobuf:"bytes,3,rep,name=value" json:"value,omitempty"`
}

func (m *ArrayConfig) Reset()                    { *m = ArrayConfig{} }
func (m *ArrayConfig) String() string            { return proto.CompactTextString(m) }
func (*ArrayConfig) ProtoMessage()               {}
func (*ArrayConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{50} }

func (m *ArrayConfig) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type StringConfig struct {
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *StringConfig) Reset()                    { *m = StringConfig{} }
func (m *StringConfig) String() string            { return proto.CompactTextString(m) }
func (*StringConfig) ProtoMessage()               {}
func (*StringConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{51} }

func (m *StringConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Int32Config struct {
	Value int32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *Int32Config) Reset()                    { *m = Int32Config{} }
func (m *Int32Config) String() string            { return proto.CompactTextString(m) }
func (*Int32Config) ProtoMessage()               {}
func (*Int32Config) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{52} }

func (m *Int32Config) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ConfigItem struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*ConfigItem_Arr
	//	*ConfigItem_Str
	//	*ConfigItem_Int
	Value isConfigItem_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,11,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *ConfigItem) Reset()                    { *m = ConfigItem{} }
func (m *ConfigItem) String() string            { return proto.CompactTextString(m) }
func (*ConfigItem) ProtoMessage()               {}
func (*ConfigItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{53} }

type isConfigItem_Value interface {
	isConfigItem_Value()
}

type ConfigItem_Arr struct {
	Arr *ArrayConfig `protobuf:"bytes,3,opt,name=arr,oneof"`
}
type ConfigItem_Str struct {
	Str *StringConfig `protobuf:"bytes,4,opt,name=str,oneof"`
}
type ConfigItem_Int struct {
	Int *Int32Config `protobuf:"bytes,5,opt,name=int,oneof"`
}

func (*ConfigItem_Arr) isConfigItem_Value() {}
func (*ConfigItem_Str) isConfigItem_Value() {}
func (*ConfigItem_Int) isConfigItem_Value() {}

func (m *ConfigItem) GetValue() isConfigItem_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ConfigItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConfigItem) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ConfigItem) GetArr() *ArrayConfig {
	if x, ok := m.GetValue().(*ConfigItem_Arr); ok {
		return x.Arr
	}
	return nil
}

func (m *ConfigItem) GetStr() *StringConfig {
	if x, ok := m.GetValue().(*ConfigItem_Str); ok {
		return x.Str
	}
	return nil
}

func (m *ConfigItem) GetInt() *Int32Config {
	if x, ok := m.GetValue().(*ConfigItem_Int); ok {
		return x.Int
	}
	return nil
}

func (m *ConfigItem) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConfigItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ConfigItem_OneofMarshaler, _ConfigItem_OneofUnmarshaler, _ConfigItem_OneofSizer, []interface{}{
		(*ConfigItem_Arr)(nil),
		(*ConfigItem_Str)(nil),
		(*ConfigItem_Int)(nil),
	}
}

func _ConfigItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ConfigItem)
	// value
	switch x := m.Value.(type) {
	case *ConfigItem_Arr:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Arr); err != nil {
			return err
		}
	case *ConfigItem_Str:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Str); err != nil {
			return err
		}
	case *ConfigItem_Int:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Int); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConfigItem.Value has unexpected type %T", x)
	}
	return nil
}

func _ConfigItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ConfigItem)
	switch tag {
	case 3: // value.arr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ArrayConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Arr{msg}
		return true, err
	case 4: // value.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StringConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Str{msg}
		return true, err
	case 5: // value.int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Int32Config)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Int{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConfigItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ConfigItem)
	// value
	switch x := m.Value.(type) {
	case *ConfigItem_Arr:
		s := proto.Size(x.Arr)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConfigItem_Str:
		s := proto.Size(x.Str)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConfigItem_Int:
		s := proto.Size(x.Int)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ModifyConfig struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Op    string `protobuf:"bytes,3,opt,name=op" json:"op,omitempty"`
	Addr  string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *ModifyConfig) Reset()                    { *m = ModifyConfig{} }
func (m *ModifyConfig) String() string            { return proto.CompactTextString(m) }
func (*ModifyConfig) ProtoMessage()               {}
func (*ModifyConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{54} }

func (m *ModifyConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ModifyConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ModifyConfig) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *ModifyConfig) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ManageAction struct {
	// Types that are valid to be assigned to Value:
	//	*ManageAction_Modify
	Value isManageAction_Value `protobuf_oneof:"value"`
	Ty    int32                `protobuf:"varint,2,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *ManageAction) Reset()                    { *m = ManageAction{} }
func (m *ManageAction) String() string            { return proto.CompactTextString(m) }
func (*ManageAction) ProtoMessage()               {}
func (*ManageAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{55} }

type isManageAction_Value interface {
	isManageAction_Value()
}

type ManageAction_Modify struct {
	Modify *ModifyConfig `protobuf:"bytes,1,opt,name=modify,oneof"`
}

func (*ManageAction_Modify) isManageAction_Value() {}

func (m *ManageAction) GetValue() isManageAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ManageAction) GetModify() *ModifyConfig {
	if x, ok := m.GetValue().(*ManageAction_Modify); ok {
		return x.Modify
	}
	return nil
}

func (m *ManageAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ManageAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ManageAction_OneofMarshaler, _ManageAction_OneofUnmarshaler, _ManageAction_OneofSizer, []interface{}{
		(*ManageAction_Modify)(nil),
	}
}

func _ManageAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ManageAction)
	// value
	switch x := m.Value.(type) {
	case *ManageAction_Modify:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Modify); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ManageAction.Value has unexpected type %T", x)
	}
	return nil
}

func _ManageAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ManageAction)
	switch tag {
	case 1: // value.modify
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModifyConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ManageAction_Modify{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ManageAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ManageAction)
	// value
	switch x := m.Value.(type) {
	case *ManageAction_Modify:
		s := proto.Size(x.Modify)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReceiptConfig struct {
	Prev    *ConfigItem `protobuf:"bytes,1,opt,name=prev" json:"prev,omitempty"`
	Current *ConfigItem `protobuf:"bytes,2,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptConfig) Reset()                    { *m = ReceiptConfig{} }
func (m *ReceiptConfig) String() string            { return proto.CompactTextString(m) }
func (*ReceiptConfig) ProtoMessage()               {}
func (*ReceiptConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{56} }

func (m *ReceiptConfig) GetPrev() *ConfigItem {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptConfig) GetCurrent() *ConfigItem {
	if m != nil {
		return m.Current
	}
	return nil
}

type ReplyConfig struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ReplyConfig) Reset()                    { *m = ReplyConfig{} }
func (m *ReplyConfig) String() string            { return proto.CompactTextString(m) }
func (*ReplyConfig) ProtoMessage()               {}
func (*ReplyConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{57} }

func (m *ReplyConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReplyConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Genesis)(nil), "types.Genesis")
	proto.RegisterType((*CoinsAction)(nil), "types.CoinsAction")
	proto.RegisterType((*CoinsGenesis)(nil), "types.CoinsGenesis")
	proto.RegisterType((*CoinsTransfer)(nil), "types.CoinsTransfer")
	proto.RegisterType((*CoinsTransferToExec)(nil), "types.CoinsTransferToExec")
	proto.RegisterType((*CoinsWithdraw)(nil), "types.CoinsWithdraw")
	proto.RegisterType((*Hashlock)(nil), "types.Hashlock")
	proto.RegisterType((*HashlockAction)(nil), "types.HashlockAction")
	proto.RegisterType((*HashlockLock)(nil), "types.HashlockLock")
	proto.RegisterType((*HashlockUnlock)(nil), "types.HashlockUnlock")
	proto.RegisterType((*HashlockSend)(nil), "types.HashlockSend")
	proto.RegisterType((*HashRecv)(nil), "types.HashRecv")
	proto.RegisterType((*Hashlockquery)(nil), "types.Hashlockquery")
	proto.RegisterType((*Ticket)(nil), "types.Ticket")
	proto.RegisterType((*TicketAction)(nil), "types.TicketAction")
	proto.RegisterType((*TicketMiner)(nil), "types.TicketMiner")
	proto.RegisterType((*TicketBind)(nil), "types.TicketBind")
	proto.RegisterType((*TicketOpen)(nil), "types.TicketOpen")
	proto.RegisterType((*TicketGenesis)(nil), "types.TicketGenesis")
	proto.RegisterType((*TicketClose)(nil), "types.TicketClose")
	proto.RegisterType((*TicketList)(nil), "types.TicketList")
	proto.RegisterType((*TicketInfos)(nil), "types.TicketInfos")
	proto.RegisterType((*ReplyTicketList)(nil), "types.ReplyTicketList")
	proto.RegisterType((*ReplyWalletTickets)(nil), "types.ReplyWalletTickets")
	proto.RegisterType((*ReceiptTicket)(nil), "types.ReceiptTicket")
	proto.RegisterType((*ReceiptTicketBind)(nil), "types.ReceiptTicketBind")
	proto.RegisterType((*ExecTxList)(nil), "types.ExecTxList")
	proto.RegisterType((*Query)(nil), "types.Query")
	proto.RegisterType((*Norm)(nil), "types.Norm")
	proto.RegisterType((*NormAction)(nil), "types.NormAction")
	proto.RegisterType((*NormPut)(nil), "types.NormPut")
	proto.RegisterType((*RetrievePara)(nil), "types.RetrievePara")
	proto.RegisterType((*Retrieve)(nil), "types.Retrieve")
	proto.RegisterType((*RetrieveAction)(nil), "types.RetrieveAction")
	proto.RegisterType((*BackupRetrieve)(nil), "types.BackupRetrieve")
	proto.RegisterType((*PreRetrieve)(nil), "types.PreRetrieve")
	proto.RegisterType((*PerformRetrieve)(nil), "types.PerformRetrieve")
	proto.RegisterType((*CancelRetrieve)(nil), "types.CancelRetrieve")
	proto.RegisterType((*ReqRetrieveInfo)(nil), "types.ReqRetrieveInfo")
	proto.RegisterType((*RetrieveQuery)(nil), "types.RetrieveQuery")
	proto.RegisterType((*TokenAction)(nil), "types.TokenAction")
	proto.RegisterType((*TokenPreCreate)(nil), "types.TokenPreCreate")
	proto.RegisterType((*TokenFinishCreate)(nil), "types.TokenFinishCreate")
	proto.RegisterType((*TokenRevokeCreate)(nil), "types.TokenRevokeCreate")
	proto.RegisterType((*Token)(nil), "types.Token")
	proto.RegisterType((*ReqTokens)(nil), "types.ReqTokens")
	proto.RegisterType((*ReplyTokens)(nil), "types.ReplyTokens")
	proto.RegisterType((*ReceiptToken)(nil), "types.ReceiptToken")
	proto.RegisterType((*TokenRecv)(nil), "types.TokenRecv")
	proto.RegisterType((*ReplyAddrRecvForTokens)(nil), "types.ReplyAddrRecvForTokens")
	proto.RegisterType((*ArrayConfig)(nil), "types.ArrayConfig")
	proto.RegisterType((*StringConfig)(nil), "types.StringConfig")
	proto.RegisterType((*Int32Config)(nil), "types.Int32Config")
	proto.RegisterType((*ConfigItem)(nil), "types.ConfigItem")
	proto.RegisterType((*ModifyConfig)(nil), "types.ModifyConfig")
	proto.RegisterType((*ManageAction)(nil), "types.ManageAction")
	proto.RegisterType((*ReceiptConfig)(nil), "types.ReceiptConfig")
	proto.RegisterType((*ReplyConfig)(nil), "types.ReplyConfig")
}

func init() { proto.RegisterFile("executor.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 2026 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4f, 0x6f, 0x1c, 0x49,
	0x15, 0x77, 0xcf, 0x4c, 0xcf, 0x78, 0xde, 0x8c, 0x67, 0xd7, 0xbd, 0x26, 0xb2, 0xa2, 0x28, 0x44,
	0xbd, 0x26, 0xeb, 0x25, 0xbb, 0xd9, 0x5d, 0x87, 0x95, 0x10, 0x17, 0xe4, 0x18, 0x96, 0x09, 0x24,
	0x8b, 0xa9, 0x78, 0x13, 0x2d, 0x48, 0x2c, 0xed, 0x9e, 0x1a, 0xbb, 0xe5, 0x99, 0xae, 0x4e, 0x75,
	0x8d, 0x9d, 0x81, 0x0b, 0x42, 0xe2, 0xc0, 0x81, 0x0b, 0x12, 0x5f, 0x80, 0x8f, 0xc0, 0x81, 0x0f,
	0x80, 0xb8, 0xf1, 0x09, 0xe0, 0xc0, 0x37, 0xe0, 0x3b, 0xa0, 0xf7, 0xaa, 0xaa, 0xbb, 0xba, 0x7b,
	0xbc, 0xeb, 0x04, 0x0b, 0x71, 0xeb, 0xf7, 0xea, 0x57, 0xaf, 0x5e, 0xbd, 0x7f, 0xf5, 0xaa, 0x1a,
	0x46, 0xfc, 0x25, 0x8f, 0x17, 0x4a, 0xc8, 0xfb, 0x99, 0x14, 0x4a, 0x04, 0xbe, 0x5a, 0x66, 0x3c,
	0xbf, 0xb9, 0xa9, 0x64, 0x94, 0xe6, 0x51, 0xac, 0x12, 0x91, 0xea, 0x91, 0xf0, 0xeb, 0xd0, 0xfb,
	0x01, 0x4f, 0x79, 0x9e, 0xe4, 0xc1, 0x16, 0xf8, 0x49, 0x2e, 0x17, 0xe9, 0xb6, 0x77, 0xc7, 0xdb,
	0x5d, 0x67, 0x9a, 0x08, 0x7f, 0xdb, 0x82, 0xc1, 0x81, 0x48, 0xd2, 0x7c, 0x9f, 0xa6, 0x05, 0x7b,
	0xb0, 0x4e, 0x52, 0xa6, 0x5c, 0x12, 0x70, 0xb0, 0xb7, 0x75, 0x9f, 0xa4, 0xdf, 0x27, 0xd4, 0x91,
	0x19, 0x1b, 0xaf, 0xb1, 0x02, 0x87, 0x73, 0x2e, 0x12, 0x75, 0x3a, 0x91, 0xd1, 0xc5, 0x76, 0xa7,
	0x39, 0xe7, 0xb9, 0x19, 0xc3, 0x39, 0x16, 0x17, 0x7c, 0x00, 0xbd, 0x13, 0xad, 0xd8, 0x76, 0x8b,
	0xa6, 0xbc, 0xe5, 0x4e, 0x31, 0x3a, 0x8f, 0xd7, 0x98, 0x45, 0x05, 0xdf, 0x83, 0x91, 0x5d, 0xf0,
	0x48, 0x7c, 0xff, 0x25, 0x8f, 0xb7, 0x7d, 0x9a, 0x77, 0x73, 0x95, 0x7a, 0x1a, 0x31, 0x5e, 0x63,
	0xb5, 0x39, 0xc1, 0x08, 0x5a, 0x6a, 0xb9, 0xdd, 0xbe, 0xe3, 0xed, 0xfa, 0xac, 0xa5, 0x96, 0x0f,
	0x7b, 0xe0, 0x9f, 0x47, 0xb3, 0x05, 0x0f, 0x1f, 0xc3, 0xd0, 0x5d, 0x39, 0xb8, 0x01, 0xdd, 0x68,
	0x2e, 0x16, 0xa9, 0x22, 0xf5, 0xda, 0xcc, 0x50, 0xc1, 0x0e, 0x6c, 0x48, 0xae, 0x16, 0x32, 0xdd,
	0x9f, 0x4c, 0x24, 0xcf, 0x73, 0x92, 0xd5, 0x67, 0x55, 0x66, 0xf8, 0x39, 0x6c, 0x54, 0xf4, 0x09,
	0x6e, 0x41, 0x3f, 0x16, 0x49, 0xaa, 0xc4, 0x19, 0xd7, 0x0e, 0xe8, 0xb3, 0x92, 0x71, 0xe9, 0x62,
	0x01, 0x74, 0x52, 0xa1, 0xb8, 0x59, 0x83, 0xbe, 0xc3, 0x5f, 0xc1, 0x5b, 0x2b, 0xb6, 0x7a, 0x7d,
	0x0b, 0x04, 0x37, 0x61, 0x1d, 0xc3, 0xeb, 0xd3, 0x68, 0xce, 0xc9, 0x9b, 0x7d, 0x56, 0xd0, 0xc5,
	0xbe, 0xac, 0x4b, 0xaf, 0x71, 0x5f, 0xff, 0xf2, 0x60, 0x7d, 0x1c, 0xe5, 0xa7, 0x33, 0x11, 0x9f,
	0x05, 0xb7, 0x01, 0x4e, 0xcd, 0xf7, 0xa3, 0x09, 0xc9, 0x1d, 0x32, 0x87, 0x83, 0x82, 0x73, 0x15,
	0xa9, 0x85, 0x0e, 0x1e, 0x9f, 0x19, 0x0a, 0xe7, 0x1d, 0x48, 0x1e, 0x29, 0x7e, 0x94, 0xcc, 0xb5,
	0xf8, 0x36, 0x73, 0x38, 0xa8, 0xae, 0x12, 0xd6, 0x73, 0x7a, 0x73, 0x25, 0xa3, 0xe9, 0x5b, 0x7f,
	0x85, 0x6f, 0x9d, 0x4d, 0x75, 0x2b, 0x9b, 0xba, 0x0d, 0x30, 0x95, 0xe2, 0x97, 0x3c, 0x55, 0xb8,
	0x76, 0x4f, 0xaf, 0x5d, 0x72, 0xc2, 0xbf, 0x78, 0x30, 0xb2, 0x1b, 0x34, 0xc9, 0x76, 0x0f, 0x7c,
	0x22, 0x4d, 0xa6, 0xd9, 0x14, 0xb0, 0xa8, 0xc7, 0x22, 0x3e, 0x1b, 0xaf, 0x31, 0x8d, 0x21, 0x70,
	0xce, 0xd3, 0x49, 0x2d, 0x5f, 0x2c, 0xf8, 0x29, 0x4f, 0x27, 0x04, 0x46, 0x4c, 0xf0, 0x11, 0xf4,
	0x4e, 0x17, 0x29, 0xc9, 0x6e, 0x13, 0xfc, 0x6b, 0x35, 0xf8, 0x67, 0x34, 0x88, 0x09, 0x66, 0x70,
	0x26, 0x35, 0x3a, 0xcd, 0xd4, 0xf8, 0x83, 0x07, 0x43, 0x57, 0x25, 0xc7, 0x02, 0x5e, 0xdd, 0xad,
	0xb4, 0x77, 0xed, 0x6c, 0xfa, 0x46, 0x1e, 0xfa, 0x8d, 0xb4, 0x18, 0x32, 0xfa, 0xbe, 0x0e, 0x2f,
	0x84, 0xbb, 0xa5, 0x31, 0xf5, 0x56, 0x28, 0x26, 0x78, 0x2c, 0xb9, 0x32, 0xf1, 0x62, 0xa8, 0xf0,
	0x6e, 0xa9, 0x3d, 0xda, 0xe8, 0x52, 0xdc, 0x2f, 0x74, 0xfc, 0x31, 0x1e, 0x9f, 0xa3, 0x2f, 0xc7,
	0x8d, 0xf8, 0x2b, 0x39, 0xc1, 0xb7, 0x00, 0x1e, 0xa5, 0x53, 0x31, 0x8f, 0xd0, 0x8d, 0xc6, 0x21,
	0x5b, 0x35, 0x0b, 0xbf, 0x58, 0x70, 0xb9, 0x64, 0x0e, 0x2e, 0xfc, 0xa3, 0x07, 0x1b, 0x95, 0xd1,
	0xc2, 0x62, 0x9e, 0x63, 0xb1, 0xcb, 0x62, 0xbb, 0xb4, 0x7a, 0xbb, 0x1e, 0x77, 0x71, 0x19, 0xf3,
	0x1d, 0x1d, 0x77, 0x25, 0x27, 0xb8, 0x03, 0x83, 0x78, 0x21, 0x25, 0x4f, 0x15, 0x01, 0x7c, 0x02,
	0xb8, 0xac, 0xf0, 0x37, 0x2d, 0xe8, 0x1e, 0x25, 0xf1, 0x19, 0x57, 0x98, 0xfc, 0x8a, 0xbe, 0xcc,
	0xb6, 0xfb, 0xac, 0xa0, 0x2f, 0x55, 0xec, 0x16, 0xf4, 0x13, 0x5b, 0x37, 0x49, 0xb7, 0x75, 0x56,
	0x32, 0xbe, 0x52, 0xbd, 0x5b, 0xd0, 0x9f, 0x27, 0x29, 0x97, 0x8e, 0x72, 0x25, 0x03, 0x67, 0x13,
	0xf1, 0x0c, 0x23, 0x71, 0x7b, 0x5d, 0xcf, 0x2e, 0x39, 0x41, 0x08, 0x43, 0xa2, 0x6c, 0xac, 0x74,
	0x49, 0xe7, 0x0a, 0xaf, 0x19, 0x50, 0xbd, 0x55, 0x01, 0xf5, 0xbb, 0x16, 0x0c, 0xb5, 0x11, 0x4c,
	0x72, 0xbe, 0x0b, 0xbe, 0x3a, 0x4e, 0xd2, 0x89, 0x39, 0x67, 0x36, 0x8d, 0x7b, 0x35, 0xe6, 0x61,
	0xa2, 0xb3, 0x8d, 0x10, 0x04, 0x15, 0x99, 0xa9, 0x80, 0x75, 0xe8, 0x8f, 0x33, 0x9e, 0x12, 0x14,
	0x11, 0xc1, 0x87, 0xf5, 0x73, 0x6f, 0xab, 0x02, 0x5e, 0x71, 0xf0, 0xbd, 0x07, 0x5d, 0x15, 0xcf,
	0x44, 0xce, 0x4d, 0x26, 0x07, 0x95, 0x09, 0x07, 0x38, 0x32, 0x5e, 0x63, 0x06, 0x13, 0x7c, 0x13,
	0x7c, 0xda, 0xbc, 0x39, 0x88, 0xab, 0xe0, 0x27, 0x38, 0x82, 0xba, 0x10, 0xc4, 0x64, 0x3c, 0x34,
	0x33, 0x7e, 0x0e, 0x03, 0x67, 0x02, 0x46, 0xe9, 0x71, 0xa2, 0x72, 0xda, 0xdd, 0x06, 0xa3, 0x6f,
	0x0c, 0x06, 0xc9, 0x2f, 0x22, 0x39, 0xb1, 0xa5, 0x5d, 0x53, 0x95, 0x00, 0x6a, 0x37, 0x03, 0x68,
	0x2e, 0x26, 0xc9, 0x54, 0x57, 0x99, 0x21, 0x33, 0x54, 0xf8, 0x0c, 0xa0, 0xb4, 0x6a, 0xc3, 0xa5,
	0xde, 0x55, 0x5c, 0xda, 0x5a, 0xe5, 0xd2, 0x99, 0x95, 0x8b, 0x2e, 0xb8, 0x92, 0xdc, 0x2d, 0xf0,
	0xe3, 0xe2, 0xbc, 0xf2, 0x99, 0x26, 0xae, 0x78, 0xe6, 0x0b, 0xd8, 0xa8, 0xf8, 0xf0, 0xfa, 0x36,
	0x52, 0xaa, 0xd5, 0x76, 0xd4, 0x0a, 0xdf, 0xb5, 0x5e, 0xa2, 0x18, 0xa8, 0xa5, 0x6e, 0xdb, 0xb5,
	0x7c, 0xf8, 0x6d, 0x6b, 0x89, 0xc7, 0x49, 0x4e, 0x75, 0x3a, 0x9a, 0x4c, 0xa4, 0x51, 0x88, 0xbe,
	0x9d, 0xe4, 0x6e, 0xbb, 0xc9, 0x1d, 0xde, 0xb3, 0x8b, 0x60, 0x1d, 0xa3, 0x5c, 0xb7, 0x42, 0x73,
	0xb3, 0x4a, 0xc9, 0x08, 0xbf, 0x03, 0x6f, 0x30, 0x9e, 0xcd, 0x96, 0xce, 0x5a, 0xef, 0x40, 0x4f,
	0x8f, 0x6b, 0xf8, 0x60, 0x6f, 0xa3, 0x12, 0x91, 0xcc, 0x8e, 0x86, 0x9f, 0x43, 0x40, 0x73, 0x9f,
	0x47, 0xb3, 0x19, 0x57, 0x7a, 0x34, 0xbf, 0xf2, 0x74, 0xdc, 0x7d, 0x26, 0x93, 0xf3, 0x33, 0xbe,
	0x44, 0x1b, 0xb6, 0x77, 0x87, 0xac, 0xa0, 0xc3, 0x0b, 0xd8, 0x60, 0x3c, 0xe6, 0x49, 0xa6, 0xfe,
	0x8b, 0x2a, 0x77, 0x1b, 0x20, 0x93, 0xfc, 0xfc, 0xa9, 0x6b, 0x24, 0x87, 0x53, 0x18, 0xb5, 0x53,
	0x1a, 0x35, 0xfc, 0xbd, 0x07, 0x9b, 0x95, 0x95, 0x29, 0xc0, 0x77, 0xe1, 0x0d, 0x31, 0x9b, 0x3c,
	0x69, 0x86, 0x46, 0x9d, 0x8d, 0xc8, 0x94, 0x5f, 0x54, 0x90, 0x3a, 0x3e, 0xea, 0xec, 0x2b, 0x86,
	0xe8, 0x5f, 0x3d, 0x00, 0xec, 0x16, 0x8f, 0x5e, 0x92, 0x6f, 0x6e, 0x41, 0x1f, 0x37, 0xc7, 0xf1,
	0x4c, 0x32, 0x87, 0x5c, 0xc9, 0x08, 0x76, 0xa0, 0xad, 0x5e, 0x6a, 0x63, 0x3a, 0x75, 0xa4, 0xbc,
	0x61, 0x30, 0x1c, 0x46, 0x19, 0xc7, 0x78, 0x9e, 0x39, 0x0d, 0x57, 0xc9, 0x40, 0x63, 0x9e, 0xf2,
	0xe4, 0xe4, 0x54, 0x99, 0xc2, 0x6f, 0x28, 0x74, 0x00, 0x76, 0x89, 0x0f, 0xa3, 0x9c, 0x9b, 0xe3,
	0xbd, 0xa0, 0xd1, 0xd0, 0x93, 0x64, 0x3a, 0x4d, 0xe2, 0xc5, 0x4c, 0x2d, 0xa9, 0xa0, 0x77, 0x98,
	0xc3, 0x09, 0x3f, 0x03, 0xff, 0x27, 0x74, 0x78, 0xde, 0x80, 0x2e, 0x36, 0xa6, 0xe6, 0xa2, 0x32,
	0x64, 0x86, 0x42, 0xe1, 0xd3, 0x45, 0xaa, 0x1b, 0x58, 0x6d, 0xae, 0x82, 0x0e, 0xb6, 0xa1, 0x97,
	0x45, 0xcb, 0x99, 0x88, 0x26, 0xa6, 0x23, 0xb1, 0x64, 0x38, 0x85, 0xce, 0xa7, 0x42, 0xce, 0x51,
	0x6a, 0x2a, 0xe4, 0xbc, 0x38, 0xf6, 0x0d, 0x55, 0x3b, 0xc7, 0x5a, 0x8d, 0x73, 0xec, 0x4d, 0x68,
	0x9f, 0xf1, 0xa5, 0xb1, 0x3b, 0x7e, 0x62, 0xd6, 0x52, 0x39, 0x35, 0xd5, 0xce, 0xd4, 0xd6, 0x1f,
	0x01, 0xe0, 0x3a, 0xe6, 0x90, 0xd9, 0x81, 0x4e, 0x9a, 0x2d, 0x94, 0x39, 0x38, 0x46, 0xc6, 0xca,
	0x08, 0x38, 0x5c, 0xa8, 0xf1, 0x1a, 0xa3, 0x51, 0x53, 0xa8, 0xfd, 0x66, 0xa1, 0xfe, 0x08, 0x7a,
	0x06, 0x6b, 0xd7, 0xf7, 0x56, 0xac, 0xdf, 0x72, 0xd7, 0xff, 0xb3, 0x07, 0x43, 0xc6, 0x95, 0x4c,
	0xf8, 0x39, 0x3f, 0x8c, 0x64, 0x14, 0xdc, 0x85, 0xd1, 0x84, 0x4f, 0xa3, 0xc5, 0x4c, 0x55, 0xa3,
	0xb1, 0xc6, 0xfd, 0xb2, 0xc4, 0x88, 0x1b, 0x3d, 0x77, 0xb5, 0xff, 0xc8, 0x24, 0xcf, 0x22, 0xe9,
	0x76, 0x00, 0x2e, 0x0b, 0x11, 0x13, 0x3e, 0x8b, 0x96, 0x87, 0x5c, 0x26, 0x62, 0x62, 0x3b, 0x14,
	0x87, 0x15, 0x7e, 0x01, 0xeb, 0x56, 0x67, 0x0c, 0xf5, 0xe3, 0x28, 0x3e, 0x5b, 0x64, 0x55, 0x75,
	0xab, 0xcc, 0xe0, 0x7d, 0xe8, 0x49, 0xae, 0x70, 0x83, 0x26, 0x82, 0x6d, 0xbf, 0xec, 0xee, 0x9d,
	0x59, 0x4c, 0xf8, 0x6f, 0x0f, 0x46, 0x76, 0xc4, 0xb8, 0xe6, 0x3d, 0xe8, 0x66, 0x92, 0x33, 0x6e,
	0x9d, 0x63, 0x53, 0xe0, 0x90, 0x98, 0x84, 0xc4, 0x73, 0x57, 0x63, 0x82, 0x3d, 0xe8, 0x65, 0x5c,
	0x4e, 0x11, 0xae, 0xcf, 0xf5, 0x1b, 0x16, 0xce, 0xe5, 0x54, 0xc8, 0xb9, 0x33, 0xc5, 0x02, 0x83,
	0x0f, 0xa0, 0xab, 0x95, 0xae, 0xf5, 0xe8, 0x0f, 0x89, 0xe9, 0x2e, 0xa2, 0x61, 0x38, 0x21, 0x8e,
	0xd2, 0x98, 0xcf, 0xcc, 0xe9, 0x6e, 0x27, 0x1c, 0x10, 0xd3, 0x9d, 0xa0, 0x61, 0x97, 0x07, 0xce,
	0xaf, 0x3d, 0x18, 0x55, 0x97, 0xb9, 0xa2, 0x5d, 0x9b, 0xd1, 0xd2, 0x5a, 0x19, 0x2d, 0x35, 0x9f,
	0xb6, 0x9b, 0x3e, 0xfd, 0x19, 0x0c, 0x1c, 0x53, 0x5e, 0xef, 0xf2, 0xe1, 0x17, 0xf0, 0x46, 0xcd,
	0xf0, 0xd7, 0xbc, 0xc0, 0xcf, 0x61, 0x54, 0xb5, 0xfa, 0xf5, 0x6f, 0x80, 0xf1, 0x17, 0x56, 0x38,
	0x1e, 0xbe, 0xd7, 0xbc, 0xc0, 0x3f, 0x3c, 0x3c, 0x15, 0xb5, 0x78, 0x5d, 0x4f, 0xff, 0xc7, 0x01,
	0x70, 0x85, 0xc2, 0x70, 0x1b, 0x40, 0xf2, 0x79, 0x94, 0xa4, 0xce, 0xe5, 0xc0, 0xe1, 0x38, 0x25,
	0xa9, 0x5b, 0x69, 0x5a, 0xfe, 0xd9, 0x86, 0xc1, 0x91, 0x38, 0xe3, 0xa9, 0x49, 0xe5, 0xef, 0xc2,
	0x88, 0x1e, 0x24, 0x32, 0xc9, 0x75, 0x61, 0x32, 0x29, 0x6d, 0xf3, 0x87, 0xb0, 0x87, 0x92, 0xeb,
	0x97, 0x02, 0x7a, 0x36, 0xaa, 0xc0, 0x83, 0x31, 0x6c, 0x12, 0x67, 0x9a, 0xa4, 0x49, 0x7e, 0x6a,
	0x64, 0xe8, 0x3c, 0xdf, 0x76, 0x65, 0x7c, 0x42, 0xe3, 0x85, 0x98, 0xe6, 0xa4, 0x42, 0x92, 0xe4,
	0xe7, 0xe2, 0xcc, 0x6a, 0xd3, 0x6e, 0x4a, 0x62, 0x34, 0x5e, 0x93, 0xe4, 0x4e, 0xaa, 0xbc, 0xd4,
	0x75, 0x5e, 0xe3, 0xa5, 0xce, 0x7f, 0xf5, 0x97, 0xba, 0xee, 0x6b, 0xbe, 0xd4, 0xad, 0xbf, 0xde,
	0x4b, 0xdd, 0xd1, 0x92, 0xae, 0x6a, 0x3e, 0x6b, 0x1d, 0x39, 0xa5, 0xeb, 0x4f, 0x1e, 0x8c, 0xaa,
	0x0e, 0xa3, 0xf7, 0xa4, 0xc8, 0x5c, 0xa3, 0xfb, 0x8c, 0xbe, 0x29, 0x36, 0x96, 0xf3, 0x63, 0x31,
	0x33, 0xf1, 0x69, 0x28, 0xec, 0xca, 0x93, 0x54, 0x49, 0x31, 0x59, 0x50, 0x6c, 0x98, 0x03, 0xbb,
	0xc2, 0xc3, 0x93, 0x53, 0x09, 0x15, 0xcd, 0x4c, 0x4c, 0x6a, 0x02, 0xb9, 0x99, 0x4c, 0x62, 0x1b,
	0x88, 0x9a, 0x40, 0xae, 0xb8, 0xc0, 0x0b, 0x97, 0xbe, 0x7a, 0x6a, 0x22, 0xdc, 0x87, 0xcd, 0x46,
	0x40, 0x38, 0x2a, 0x79, 0x15, 0x95, 0x0a, 0x11, 0xad, 0x55, 0x22, 0xdc, 0x48, 0x78, 0x45, 0x11,
	0x7f, 0xf7, 0xc0, 0x27, 0x19, 0xff, 0x7f, 0x16, 0xc2, 0x4e, 0x8c, 0x02, 0x59, 0x48, 0x73, 0x1f,
	0xb7, 0xa4, 0x93, 0xd5, 0xeb, 0x95, 0xac, 0x7e, 0x0e, 0x7d, 0xc6, 0x5f, 0xd0, 0x7e, 0xa8, 0xdf,
	0xa7, 0x27, 0x94, 0xfd, 0xd9, 0xcc, 0x3c, 0x68, 0x17, 0xf4, 0x97, 0xbd, 0xa0, 0x50, 0x1a, 0x61,
	0x77, 0x8c, 0x37, 0x17, 0x43, 0x85, 0x0f, 0x60, 0xa0, 0xaf, 0x2d, 0x5a, 0xf4, 0x4e, 0x01, 0xd3,
	0x57, 0x8e, 0x61, 0x25, 0x2f, 0xed, 0xa4, 0x23, 0x6c, 0xa3, 0x74, 0x6b, 0x6f, 0xdf, 0x3a, 0xaf,
	0xee, 0x99, 0x4b, 0xaf, 0x5b, 0x1f, 0x43, 0xdf, 0x38, 0x3d, 0x3e, 0xd7, 0x46, 0x2e, 0x1f, 0x56,
	0x35, 0x81, 0xae, 0x94, 0x3c, 0x3e, 0xb7, 0xaf, 0x6c, 0xf8, 0x1d, 0xfe, 0x10, 0x6e, 0xd0, 0x0e,
	0xb0, 0xf8, 0xe2, 0xd4, 0x4f, 0x84, 0x34, 0x9b, 0xf9, 0x10, 0x40, 0x59, 0x81, 0x76, 0x43, 0x6f,
	0x56, 0x0b, 0x4d, 0x7c, 0xce, 0x1c, 0x4c, 0xf8, 0x36, 0x0c, 0xf6, 0xa5, 0x8c, 0x96, 0x07, 0x22,
	0x9d, 0x26, 0x27, 0x65, 0x17, 0xa9, 0x6d, 0x66, 0x92, 0x70, 0x07, 0x86, 0x4f, 0x95, 0x4c, 0xd2,
	0x93, 0x26, 0xca, 0x2b, 0x51, 0x6f, 0xc3, 0xe0, 0x51, 0xaa, 0x1e, 0xec, 0xad, 0x02, 0xf9, 0x16,
	0xf4, 0x37, 0x0f, 0x40, 0x03, 0x1e, 0x29, 0x3e, 0x5f, 0xd1, 0xc7, 0xda, 0x9b, 0x55, 0xcb, 0xb9,
	0xae, 0xde, 0x85, 0x76, 0x24, 0x65, 0xed, 0x45, 0xc4, 0x51, 0x7b, 0xbc, 0xc6, 0x10, 0x10, 0xbc,
	0x03, 0xed, 0x5c, 0xd9, 0xfa, 0x68, 0x0b, 0x97, 0xab, 0x39, 0x02, 0x73, 0x45, 0x02, 0x93, 0x54,
	0x99, 0xa2, 0x68, 0x05, 0x3a, 0xca, 0x23, 0x2e, 0x49, 0x95, 0x29, 0x4b, 0x83, 0x66, 0x59, 0xfa,
	0x29, 0x0c, 0x9f, 0xd0, 0x73, 0x86, 0xd9, 0xec, 0x57, 0xf4, 0xe3, 0xd6, 0x46, 0x28, 0x50, 0x64,
	0xc6, 0x6c, 0x2d, 0x91, 0xad, 0xbc, 0x47, 0x3e, 0x83, 0xe1, 0x93, 0x28, 0x8d, 0x4e, 0x6c, 0x6b,
	0xfa, 0x7e, 0xf1, 0x90, 0x52, 0x7d, 0x38, 0x76, 0x15, 0xc0, 0x2e, 0x50, 0x83, 0x8c, 0xce, 0xad,
	0xa6, 0xce, 0x71, 0x71, 0x31, 0x36, 0x4a, 0x7f, 0x03, 0x3a, 0x78, 0xa5, 0xad, 0xbd, 0x63, 0x95,
	0xde, 0x61, 0x34, 0x1c, 0xdc, 0x83, 0x9e, 0x79, 0x3f, 0x34, 0x87, 0xe0, 0x0a, 0xa4, 0x45, 0x84,
	0x1f, 0x9b, 0xec, 0x7a, 0x35, 0xbb, 0x1c, 0x77, 0xe9, 0x07, 0xd6, 0x83, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x11, 0xb1, 0xb9, 0xf0, 0xec, 0x1a, 0x00, 0x00,
}
