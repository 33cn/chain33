// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Genesis struct {
	Isrun bool `protobuf:"varint,1,opt,name=isrun" json:"isrun,omitempty"`
}

func (m *Genesis) Reset()                    { *m = Genesis{} }
func (m *Genesis) String() string            { return proto.CompactTextString(m) }
func (*Genesis) ProtoMessage()               {}
func (*Genesis) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Genesis) GetIsrun() bool {
	if m != nil {
		return m.Isrun
	}
	return false
}

type Ticket struct {
	TicketId string `protobuf:"bytes,1,opt,name=ticketId" json:"ticketId,omitempty"`
	// 0 -> 未成熟 1 -> 可挖矿 2 -> 已挖成功 3-> 已关闭
	Status int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	// genesis 创建的私钥比较特殊
	IsGenesis bool `protobuf:"varint,3,opt,name=isGenesis" json:"isGenesis,omitempty"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
	// 挖矿时间
	MinerTime int64 `protobuf:"varint,5,opt,name=minerTime" json:"minerTime,omitempty"`
	// 挖到的币的数目
	MinerValue   int64  `protobuf:"varint,8,opt,name=minerValue" json:"minerValue,omitempty"`
	MinerAddress string `protobuf:"bytes,6,opt,name=minerAddress" json:"minerAddress,omitempty"`
	// return wallet
	ReturnAddress string `protobuf:"bytes,7,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *Ticket) Reset()                    { *m = Ticket{} }
func (m *Ticket) String() string            { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()               {}
func (*Ticket) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *Ticket) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *Ticket) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Ticket) GetIsGenesis() bool {
	if m != nil {
		return m.IsGenesis
	}
	return false
}

func (m *Ticket) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Ticket) GetMinerTime() int64 {
	if m != nil {
		return m.MinerTime
	}
	return 0
}

func (m *Ticket) GetMinerValue() int64 {
	if m != nil {
		return m.MinerValue
	}
	return 0
}

func (m *Ticket) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *Ticket) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

// message for execs.ticket
type TicketAction struct {
	// Types that are valid to be assigned to Value:
	//	*TicketAction_Tbind
	//	*TicketAction_Topen
	//	*TicketAction_Genesis
	//	*TicketAction_Tclose
	//	*TicketAction_Miner
	Value isTicketAction_Value `protobuf_oneof:"value"`
	Ty    int32                `protobuf:"varint,10,opt,name=ty" json:"ty,omitempty"`
}

func (m *TicketAction) Reset()                    { *m = TicketAction{} }
func (m *TicketAction) String() string            { return proto.CompactTextString(m) }
func (*TicketAction) ProtoMessage()               {}
func (*TicketAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

type isTicketAction_Value interface {
	isTicketAction_Value()
}

type TicketAction_Tbind struct {
	Tbind *TicketBind `protobuf:"bytes,5,opt,name=tbind,oneof"`
}
type TicketAction_Topen struct {
	Topen *TicketOpen `protobuf:"bytes,1,opt,name=topen,oneof"`
}
type TicketAction_Genesis struct {
	Genesis *TicketGenesis `protobuf:"bytes,2,opt,name=genesis,oneof"`
}
type TicketAction_Tclose struct {
	Tclose *TicketClose `protobuf:"bytes,3,opt,name=tclose,oneof"`
}
type TicketAction_Miner struct {
	Miner *TicketMiner `protobuf:"bytes,4,opt,name=miner,oneof"`
}

func (*TicketAction_Tbind) isTicketAction_Value()   {}
func (*TicketAction_Topen) isTicketAction_Value()   {}
func (*TicketAction_Genesis) isTicketAction_Value() {}
func (*TicketAction_Tclose) isTicketAction_Value()  {}
func (*TicketAction_Miner) isTicketAction_Value()   {}

func (m *TicketAction) GetValue() isTicketAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TicketAction) GetTbind() *TicketBind {
	if x, ok := m.GetValue().(*TicketAction_Tbind); ok {
		return x.Tbind
	}
	return nil
}

func (m *TicketAction) GetTopen() *TicketOpen {
	if x, ok := m.GetValue().(*TicketAction_Topen); ok {
		return x.Topen
	}
	return nil
}

func (m *TicketAction) GetGenesis() *TicketGenesis {
	if x, ok := m.GetValue().(*TicketAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *TicketAction) GetTclose() *TicketClose {
	if x, ok := m.GetValue().(*TicketAction_Tclose); ok {
		return x.Tclose
	}
	return nil
}

func (m *TicketAction) GetMiner() *TicketMiner {
	if x, ok := m.GetValue().(*TicketAction_Miner); ok {
		return x.Miner
	}
	return nil
}

func (m *TicketAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TicketAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TicketAction_OneofMarshaler, _TicketAction_OneofUnmarshaler, _TicketAction_OneofSizer, []interface{}{
		(*TicketAction_Tbind)(nil),
		(*TicketAction_Topen)(nil),
		(*TicketAction_Genesis)(nil),
		(*TicketAction_Tclose)(nil),
		(*TicketAction_Miner)(nil),
	}
}

func _TicketAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TicketAction)
	// value
	switch x := m.Value.(type) {
	case *TicketAction_Tbind:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tbind); err != nil {
			return err
		}
	case *TicketAction_Topen:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Topen); err != nil {
			return err
		}
	case *TicketAction_Genesis:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case *TicketAction_Tclose:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tclose); err != nil {
			return err
		}
	case *TicketAction_Miner:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Miner); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TicketAction.Value has unexpected type %T", x)
	}
	return nil
}

func _TicketAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TicketAction)
	switch tag {
	case 5: // value.tbind
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketBind)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Tbind{msg}
		return true, err
	case 1: // value.topen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketOpen)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Topen{msg}
		return true, err
	case 2: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Genesis{msg}
		return true, err
	case 3: // value.tclose
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketClose)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Tclose{msg}
		return true, err
	case 4: // value.miner
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketMiner)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Miner{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TicketAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TicketAction)
	// value
	switch x := m.Value.(type) {
	case *TicketAction_Tbind:
		s := proto.Size(x.Tbind)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Topen:
		s := proto.Size(x.Topen)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Tclose:
		s := proto.Size(x.Tclose)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Miner:
		s := proto.Size(x.Miner)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TicketMiner struct {
	Bits     uint32 `protobuf:"varint,1,opt,name=bits" json:"bits,omitempty"`
	Reward   int64  `protobuf:"varint,2,opt,name=reward" json:"reward,omitempty"`
	TicketId string `protobuf:"bytes,3,opt,name=ticketId" json:"ticketId,omitempty"`
	Modify   []byte `protobuf:"bytes,4,opt,name=modify,proto3" json:"modify,omitempty"`
}

func (m *TicketMiner) Reset()                    { *m = TicketMiner{} }
func (m *TicketMiner) String() string            { return proto.CompactTextString(m) }
func (*TicketMiner) ProtoMessage()               {}
func (*TicketMiner) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *TicketMiner) GetBits() uint32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *TicketMiner) GetReward() int64 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *TicketMiner) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *TicketMiner) GetModify() []byte {
	if m != nil {
		return m.Modify
	}
	return nil
}

type TicketBind struct {
	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *TicketBind) Reset()                    { *m = TicketBind{} }
func (m *TicketBind) String() string            { return proto.CompactTextString(m) }
func (*TicketBind) ProtoMessage()               {}
func (*TicketBind) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *TicketBind) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketBind) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type TicketOpen struct {
	// 用户挖矿的ticket 地址
	MinerAddress string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	// 购买ticket的数目
	Count int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	// 币实际存储的地址
	ReturnAddress string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *TicketOpen) Reset()                    { *m = TicketOpen{} }
func (m *TicketOpen) String() string            { return proto.CompactTextString(m) }
func (*TicketOpen) ProtoMessage()               {}
func (*TicketOpen) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *TicketOpen) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketOpen) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TicketOpen) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type TicketGenesis struct {
	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress" json:"returnAddress,omitempty"`
	Count         int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *TicketGenesis) Reset()                    { *m = TicketGenesis{} }
func (m *TicketGenesis) String() string            { return proto.CompactTextString(m) }
func (*TicketGenesis) ProtoMessage()               {}
func (*TicketGenesis) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *TicketGenesis) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketGenesis) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

func (m *TicketGenesis) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TicketClose struct {
	TicketId []string `protobuf:"bytes,1,rep,name=ticketId" json:"ticketId,omitempty"`
}

func (m *TicketClose) Reset()                    { *m = TicketClose{} }
func (m *TicketClose) String() string            { return proto.CompactTextString(m) }
func (*TicketClose) ProtoMessage()               {}
func (*TicketClose) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *TicketClose) GetTicketId() []string {
	if m != nil {
		return m.TicketId
	}
	return nil
}

type TicketList struct {
	Addr   string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
}

func (m *TicketList) Reset()                    { *m = TicketList{} }
func (m *TicketList) String() string            { return proto.CompactTextString(m) }
func (*TicketList) ProtoMessage()               {}
func (*TicketList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *TicketList) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TicketList) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type TicketInfos struct {
	TicketIds []string `protobuf:"bytes,1,rep,name=ticketIds" json:"ticketIds,omitempty"`
}

func (m *TicketInfos) Reset()                    { *m = TicketInfos{} }
func (m *TicketInfos) String() string            { return proto.CompactTextString(m) }
func (*TicketInfos) ProtoMessage()               {}
func (*TicketInfos) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *TicketInfos) GetTicketIds() []string {
	if m != nil {
		return m.TicketIds
	}
	return nil
}

type ReplyTicketList struct {
	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
}

func (m *ReplyTicketList) Reset()                    { *m = ReplyTicketList{} }
func (m *ReplyTicketList) String() string            { return proto.CompactTextString(m) }
func (*ReplyTicketList) ProtoMessage()               {}
func (*ReplyTicketList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *ReplyTicketList) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

type ReplyWalletTickets struct {
	Tickets  []*Ticket `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
	Privkeys [][]byte  `protobuf:"bytes,2,rep,name=privkeys,proto3" json:"privkeys,omitempty"`
}

func (m *ReplyWalletTickets) Reset()                    { *m = ReplyWalletTickets{} }
func (m *ReplyWalletTickets) String() string            { return proto.CompactTextString(m) }
func (*ReplyWalletTickets) ProtoMessage()               {}
func (*ReplyWalletTickets) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *ReplyWalletTickets) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

func (m *ReplyWalletTickets) GetPrivkeys() [][]byte {
	if m != nil {
		return m.Privkeys
	}
	return nil
}

type ReceiptTicket struct {
	TicketId   string `protobuf:"bytes,1,opt,name=ticketId" json:"ticketId,omitempty"`
	Status     int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	PrevStatus int32  `protobuf:"varint,3,opt,name=prevStatus" json:"prevStatus,omitempty"`
	Addr       string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *ReceiptTicket) Reset()                    { *m = ReceiptTicket{} }
func (m *ReceiptTicket) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTicket) ProtoMessage()               {}
func (*ReceiptTicket) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *ReceiptTicket) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *ReceiptTicket) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptTicket) GetPrevStatus() int32 {
	if m != nil {
		return m.PrevStatus
	}
	return 0
}

func (m *ReceiptTicket) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReceiptTicketBind struct {
	OldMinerAddress string `protobuf:"bytes,1,opt,name=oldMinerAddress" json:"oldMinerAddress,omitempty"`
	NewMinerAddress string `protobuf:"bytes,2,opt,name=newMinerAddress" json:"newMinerAddress,omitempty"`
	ReturnAddress   string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *ReceiptTicketBind) Reset()                    { *m = ReceiptTicketBind{} }
func (m *ReceiptTicketBind) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTicketBind) ProtoMessage()               {}
func (*ReceiptTicketBind) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *ReceiptTicketBind) GetOldMinerAddress() string {
	if m != nil {
		return m.OldMinerAddress
	}
	return ""
}

func (m *ReceiptTicketBind) GetNewMinerAddress() string {
	if m != nil {
		return m.NewMinerAddress
	}
	return ""
}

func (m *ReceiptTicketBind) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type ExecTxList struct {
	StateHash  []byte         `protobuf:"bytes,1,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	Txs        []*Transaction `protobuf:"bytes,2,rep,name=txs" json:"txs,omitempty"`
	BlockTime  int64          `protobuf:"varint,3,opt,name=blockTime" json:"blockTime,omitempty"`
	Height     int64          `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Difficulty uint64         `protobuf:"varint,5,opt,name=difficulty" json:"difficulty,omitempty"`
}

func (m *ExecTxList) Reset()                    { *m = ExecTxList{} }
func (m *ExecTxList) String() string            { return proto.CompactTextString(m) }
func (*ExecTxList) ProtoMessage()               {}
func (*ExecTxList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *ExecTxList) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

func (m *ExecTxList) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *ExecTxList) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ExecTxList) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ExecTxList) GetDifficulty() uint64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

type Query struct {
	Execer   []byte `protobuf:"bytes,1,opt,name=execer,proto3" json:"execer,omitempty"`
	FuncName string `protobuf:"bytes,2,opt,name=funcName" json:"funcName,omitempty"`
	Payload  []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *Query) GetExecer() []byte {
	if m != nil {
		return m.Execer
	}
	return nil
}

func (m *Query) GetFuncName() string {
	if m != nil {
		return m.FuncName
	}
	return ""
}

func (m *Query) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Norm struct {
	NormId     []byte `protobuf:"bytes,1,opt,name=normId,proto3" json:"normId,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime" json:"createTime,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value      []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Norm) Reset()                    { *m = Norm{} }
func (m *Norm) String() string            { return proto.CompactTextString(m) }
func (*Norm) ProtoMessage()               {}
func (*Norm) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *Norm) GetNormId() []byte {
	if m != nil {
		return m.NormId
	}
	return nil
}

func (m *Norm) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Norm) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Norm) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type NormAction struct {
	// Types that are valid to be assigned to Value:
	//	*NormAction_Nput
	Value isNormAction_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,5,opt,name=ty" json:"ty,omitempty"`
}

func (m *NormAction) Reset()                    { *m = NormAction{} }
func (m *NormAction) String() string            { return proto.CompactTextString(m) }
func (*NormAction) ProtoMessage()               {}
func (*NormAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

type isNormAction_Value interface {
	isNormAction_Value()
}

type NormAction_Nput struct {
	Nput *NormPut `protobuf:"bytes,1,opt,name=nput,oneof"`
}

func (*NormAction_Nput) isNormAction_Value() {}

func (m *NormAction) GetValue() isNormAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *NormAction) GetNput() *NormPut {
	if x, ok := m.GetValue().(*NormAction_Nput); ok {
		return x.Nput
	}
	return nil
}

func (m *NormAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NormAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NormAction_OneofMarshaler, _NormAction_OneofUnmarshaler, _NormAction_OneofSizer, []interface{}{
		(*NormAction_Nput)(nil),
	}
}

func _NormAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NormAction)
	// value
	switch x := m.Value.(type) {
	case *NormAction_Nput:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nput); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NormAction.Value has unexpected type %T", x)
	}
	return nil
}

func _NormAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NormAction)
	switch tag {
	case 1: // value.nput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NormPut)
		err := b.DecodeMessage(msg)
		m.Value = &NormAction_Nput{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NormAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NormAction)
	// value
	switch x := m.Value.(type) {
	case *NormAction_Nput:
		s := proto.Size(x.Nput)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NormPut struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *NormPut) Reset()                    { *m = NormPut{} }
func (m *NormPut) String() string            { return proto.CompactTextString(m) }
func (*NormPut) ProtoMessage()               {}
func (*NormPut) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *NormPut) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NormPut) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// message for retrieve start
type RetrievePara struct {
	DefaultAddress string `protobuf:"bytes,1,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	Status         int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	CreateTime     int64  `protobuf:"varint,3,opt,name=createTime" json:"createTime,omitempty"`
	PrepareTime    int64  `protobuf:"varint,4,opt,name=prepareTime" json:"prepareTime,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,5,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
}

func (m *RetrievePara) Reset()                    { *m = RetrievePara{} }
func (m *RetrievePara) String() string            { return proto.CompactTextString(m) }
func (*RetrievePara) ProtoMessage()               {}
func (*RetrievePara) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

func (m *RetrievePara) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *RetrievePara) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RetrievePara) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *RetrievePara) GetPrepareTime() int64 {
	if m != nil {
		return m.PrepareTime
	}
	return 0
}

func (m *RetrievePara) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

type Retrieve struct {
	// used as key
	BackupAddress string          `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	RetPara       []*RetrievePara `protobuf:"bytes,2,rep,name=retPara" json:"retPara,omitempty"`
}

func (m *Retrieve) Reset()                    { *m = Retrieve{} }
func (m *Retrieve) String() string            { return proto.CompactTextString(m) }
func (*Retrieve) ProtoMessage()               {}
func (*Retrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

func (m *Retrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *Retrieve) GetRetPara() []*RetrievePara {
	if m != nil {
		return m.RetPara
	}
	return nil
}

type RetrieveAction struct {
	// Types that are valid to be assigned to Value:
	//	*RetrieveAction_PreRet
	//	*RetrieveAction_PerfRet
	//	*RetrieveAction_Backup
	//	*RetrieveAction_Cancel
	Value isRetrieveAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,5,opt,name=ty" json:"ty,omitempty"`
}

func (m *RetrieveAction) Reset()                    { *m = RetrieveAction{} }
func (m *RetrieveAction) String() string            { return proto.CompactTextString(m) }
func (*RetrieveAction) ProtoMessage()               {}
func (*RetrieveAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{21} }

type isRetrieveAction_Value interface {
	isRetrieveAction_Value()
}

type RetrieveAction_PreRet struct {
	PreRet *PreRetrieve `protobuf:"bytes,1,opt,name=preRet,oneof"`
}
type RetrieveAction_PerfRet struct {
	PerfRet *PerformRetrieve `protobuf:"bytes,2,opt,name=perfRet,oneof"`
}
type RetrieveAction_Backup struct {
	Backup *BackupRetrieve `protobuf:"bytes,3,opt,name=backup,oneof"`
}
type RetrieveAction_Cancel struct {
	Cancel *CancelRetrieve `protobuf:"bytes,4,opt,name=cancel,oneof"`
}

func (*RetrieveAction_PreRet) isRetrieveAction_Value()  {}
func (*RetrieveAction_PerfRet) isRetrieveAction_Value() {}
func (*RetrieveAction_Backup) isRetrieveAction_Value()  {}
func (*RetrieveAction_Cancel) isRetrieveAction_Value()  {}

func (m *RetrieveAction) GetValue() isRetrieveAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RetrieveAction) GetPreRet() *PreRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_PreRet); ok {
		return x.PreRet
	}
	return nil
}

func (m *RetrieveAction) GetPerfRet() *PerformRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_PerfRet); ok {
		return x.PerfRet
	}
	return nil
}

func (m *RetrieveAction) GetBackup() *BackupRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_Backup); ok {
		return x.Backup
	}
	return nil
}

func (m *RetrieveAction) GetCancel() *CancelRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *RetrieveAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RetrieveAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RetrieveAction_OneofMarshaler, _RetrieveAction_OneofUnmarshaler, _RetrieveAction_OneofSizer, []interface{}{
		(*RetrieveAction_PreRet)(nil),
		(*RetrieveAction_PerfRet)(nil),
		(*RetrieveAction_Backup)(nil),
		(*RetrieveAction_Cancel)(nil),
	}
}

func _RetrieveAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RetrieveAction)
	// value
	switch x := m.Value.(type) {
	case *RetrieveAction_PreRet:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PreRet); err != nil {
			return err
		}
	case *RetrieveAction_PerfRet:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PerfRet); err != nil {
			return err
		}
	case *RetrieveAction_Backup:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Backup); err != nil {
			return err
		}
	case *RetrieveAction_Cancel:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RetrieveAction.Value has unexpected type %T", x)
	}
	return nil
}

func _RetrieveAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RetrieveAction)
	switch tag {
	case 1: // value.preRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PreRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_PreRet{msg}
		return true, err
	case 2: // value.perfRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PerformRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_PerfRet{msg}
		return true, err
	case 3: // value.backup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BackupRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_Backup{msg}
		return true, err
	case 4: // value.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CancelRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_Cancel{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RetrieveAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RetrieveAction)
	// value
	switch x := m.Value.(type) {
	case *RetrieveAction_PreRet:
		s := proto.Size(x.PreRet)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_PerfRet:
		s := proto.Size(x.PerfRet)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_Backup:
		s := proto.Size(x.Backup)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BackupRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,3,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
}

func (m *BackupRetrieve) Reset()                    { *m = BackupRetrieve{} }
func (m *BackupRetrieve) String() string            { return proto.CompactTextString(m) }
func (*BackupRetrieve) ProtoMessage()               {}
func (*BackupRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{22} }

func (m *BackupRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *BackupRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *BackupRetrieve) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

type PreRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *PreRetrieve) Reset()                    { *m = PreRetrieve{} }
func (m *PreRetrieve) String() string            { return proto.CompactTextString(m) }
func (*PreRetrieve) ProtoMessage()               {}
func (*PreRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{23} }

func (m *PreRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *PreRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type PerformRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *PerformRetrieve) Reset()                    { *m = PerformRetrieve{} }
func (m *PerformRetrieve) String() string            { return proto.CompactTextString(m) }
func (*PerformRetrieve) ProtoMessage()               {}
func (*PerformRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{24} }

func (m *PerformRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *PerformRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type CancelRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *CancelRetrieve) Reset()                    { *m = CancelRetrieve{} }
func (m *CancelRetrieve) String() string            { return proto.CompactTextString(m) }
func (*CancelRetrieve) ProtoMessage()               {}
func (*CancelRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{25} }

func (m *CancelRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *CancelRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type ReqRetrieveInfo struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *ReqRetrieveInfo) Reset()                    { *m = ReqRetrieveInfo{} }
func (m *ReqRetrieveInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqRetrieveInfo) ProtoMessage()               {}
func (*ReqRetrieveInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{26} }

func (m *ReqRetrieveInfo) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *ReqRetrieveInfo) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type RetrieveQuery struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,3,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
	PrepareTime    int64  `protobuf:"varint,4,opt,name=prepareTime" json:"prepareTime,omitempty"`
	RemainTime     int64  `protobuf:"varint,5,opt,name=remainTime" json:"remainTime,omitempty"`
	Status         int32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
}

func (m *RetrieveQuery) Reset()                    { *m = RetrieveQuery{} }
func (m *RetrieveQuery) String() string            { return proto.CompactTextString(m) }
func (*RetrieveQuery) ProtoMessage()               {}
func (*RetrieveQuery) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{27} }

func (m *RetrieveQuery) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *RetrieveQuery) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *RetrieveQuery) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

func (m *RetrieveQuery) GetPrepareTime() int64 {
	if m != nil {
		return m.PrepareTime
	}
	return 0
}

func (m *RetrieveQuery) GetRemainTime() int64 {
	if m != nil {
		return m.RemainTime
	}
	return 0
}

func (m *RetrieveQuery) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////////
// message for token start/////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
type TokenAction struct {
	// Types that are valid to be assigned to Value:
	//	*TokenAction_Tokenprecreate
	//	*TokenAction_Tokenfinishcreate
	//	*TokenAction_Tokenrevokecreate
	//	*TokenAction_Transfer
	//	*TokenAction_Withdraw
	//	*TokenAction_Genesis
	//	*TokenAction_TransferToExec
	Value isTokenAction_Value `protobuf_oneof:"value"`
	Ty    int32               `protobuf:"varint,7,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *TokenAction) Reset()                    { *m = TokenAction{} }
func (m *TokenAction) String() string            { return proto.CompactTextString(m) }
func (*TokenAction) ProtoMessage()               {}
func (*TokenAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{28} }

type isTokenAction_Value interface {
	isTokenAction_Value()
}

type TokenAction_Tokenprecreate struct {
	Tokenprecreate *TokenPreCreate `protobuf:"bytes,1,opt,name=tokenprecreate,oneof"`
}
type TokenAction_Tokenfinishcreate struct {
	Tokenfinishcreate *TokenFinishCreate `protobuf:"bytes,2,opt,name=tokenfinishcreate,oneof"`
}
type TokenAction_Tokenrevokecreate struct {
	Tokenrevokecreate *TokenRevokeCreate `protobuf:"bytes,3,opt,name=tokenrevokecreate,oneof"`
}
type TokenAction_Transfer struct {
	Transfer *AssetsTransfer `protobuf:"bytes,4,opt,name=transfer,oneof"`
}
type TokenAction_Withdraw struct {
	Withdraw *AssetsWithdraw `protobuf:"bytes,5,opt,name=withdraw,oneof"`
}
type TokenAction_Genesis struct {
	Genesis *AssetsGenesis `protobuf:"bytes,6,opt,name=genesis,oneof"`
}
type TokenAction_TransferToExec struct {
	TransferToExec *AssetsTransferToExec `protobuf:"bytes,8,opt,name=transferToExec,oneof"`
}

func (*TokenAction_Tokenprecreate) isTokenAction_Value()    {}
func (*TokenAction_Tokenfinishcreate) isTokenAction_Value() {}
func (*TokenAction_Tokenrevokecreate) isTokenAction_Value() {}
func (*TokenAction_Transfer) isTokenAction_Value()          {}
func (*TokenAction_Withdraw) isTokenAction_Value()          {}
func (*TokenAction_Genesis) isTokenAction_Value()           {}
func (*TokenAction_TransferToExec) isTokenAction_Value()    {}

func (m *TokenAction) GetValue() isTokenAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TokenAction) GetTokenprecreate() *TokenPreCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenprecreate); ok {
		return x.Tokenprecreate
	}
	return nil
}

func (m *TokenAction) GetTokenfinishcreate() *TokenFinishCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenfinishcreate); ok {
		return x.Tokenfinishcreate
	}
	return nil
}

func (m *TokenAction) GetTokenrevokecreate() *TokenRevokeCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenrevokecreate); ok {
		return x.Tokenrevokecreate
	}
	return nil
}

func (m *TokenAction) GetTransfer() *AssetsTransfer {
	if x, ok := m.GetValue().(*TokenAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *TokenAction) GetWithdraw() *AssetsWithdraw {
	if x, ok := m.GetValue().(*TokenAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *TokenAction) GetGenesis() *AssetsGenesis {
	if x, ok := m.GetValue().(*TokenAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *TokenAction) GetTransferToExec() *AssetsTransferToExec {
	if x, ok := m.GetValue().(*TokenAction_TransferToExec); ok {
		return x.TransferToExec
	}
	return nil
}

func (m *TokenAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TokenAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TokenAction_OneofMarshaler, _TokenAction_OneofUnmarshaler, _TokenAction_OneofSizer, []interface{}{
		(*TokenAction_Tokenprecreate)(nil),
		(*TokenAction_Tokenfinishcreate)(nil),
		(*TokenAction_Tokenrevokecreate)(nil),
		(*TokenAction_Transfer)(nil),
		(*TokenAction_Withdraw)(nil),
		(*TokenAction_Genesis)(nil),
		(*TokenAction_TransferToExec)(nil),
	}
}

func _TokenAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TokenAction)
	// value
	switch x := m.Value.(type) {
	case *TokenAction_Tokenprecreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenprecreate); err != nil {
			return err
		}
	case *TokenAction_Tokenfinishcreate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenfinishcreate); err != nil {
			return err
		}
	case *TokenAction_Tokenrevokecreate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenrevokecreate); err != nil {
			return err
		}
	case *TokenAction_Transfer:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *TokenAction_Withdraw:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *TokenAction_Genesis:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case *TokenAction_TransferToExec:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferToExec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TokenAction.Value has unexpected type %T", x)
	}
	return nil
}

func _TokenAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TokenAction)
	switch tag {
	case 1: // value.tokenprecreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenPreCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenprecreate{msg}
		return true, err
	case 2: // value.tokenfinishcreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenFinishCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenfinishcreate{msg}
		return true, err
	case 3: // value.tokenrevokecreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenRevokeCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenrevokecreate{msg}
		return true, err
	case 4: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AssetsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Transfer{msg}
		return true, err
	case 5: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AssetsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Withdraw{msg}
		return true, err
	case 6: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AssetsGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Genesis{msg}
		return true, err
	case 8: // value.transferToExec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AssetsTransferToExec)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_TransferToExec{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TokenAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TokenAction)
	// value
	switch x := m.Value.(type) {
	case *TokenAction_Tokenprecreate:
		s := proto.Size(x.Tokenprecreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Tokenfinishcreate:
		s := proto.Size(x.Tokenfinishcreate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Tokenrevokecreate:
		s := proto.Size(x.Tokenrevokecreate)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_TransferToExec:
		s := proto.Size(x.TransferToExec)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 创建token，支持最大精确度是6位小数,即存入数据库的实际总额需要放大1e6倍
type TokenPreCreate struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction" json:"introduction,omitempty"`
	Total        int64  `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Price        int64  `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	Owner        string `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenPreCreate) Reset()                    { *m = TokenPreCreate{} }
func (m *TokenPreCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenPreCreate) ProtoMessage()               {}
func (*TokenPreCreate) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{29} }

func (m *TokenPreCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TokenPreCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenPreCreate) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *TokenPreCreate) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TokenPreCreate) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TokenPreCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type TokenFinishCreate struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenFinishCreate) Reset()                    { *m = TokenFinishCreate{} }
func (m *TokenFinishCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenFinishCreate) ProtoMessage()               {}
func (*TokenFinishCreate) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{30} }

func (m *TokenFinishCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenFinishCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type TokenRevokeCreate struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenRevokeCreate) Reset()                    { *m = TokenRevokeCreate{} }
func (m *TokenRevokeCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenRevokeCreate) ProtoMessage()               {}
func (*TokenRevokeCreate) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{31} }

func (m *TokenRevokeCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenRevokeCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type Token struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction" json:"introduction,omitempty"`
	Total        int64  `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Price        int64  `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	Owner        string `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
	Creator      string `protobuf:"bytes,7,opt,name=creator" json:"creator,omitempty"`
	Status       int32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{32} }

func (m *Token) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Token) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Token) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *Token) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Token) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Token) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Token) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Token) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReqTokens struct {
	QueryAll   bool     `protobuf:"varint,1,opt,name=queryAll" json:"queryAll,omitempty"`
	Status     int32    `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Tokens     []string `protobuf:"bytes,3,rep,name=tokens" json:"tokens,omitempty"`
	SymbolOnly bool     `protobuf:"varint,4,opt,name=symbolOnly" json:"symbolOnly,omitempty"`
}

func (m *ReqTokens) Reset()                    { *m = ReqTokens{} }
func (m *ReqTokens) String() string            { return proto.CompactTextString(m) }
func (*ReqTokens) ProtoMessage()               {}
func (*ReqTokens) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{33} }

func (m *ReqTokens) GetQueryAll() bool {
	if m != nil {
		return m.QueryAll
	}
	return false
}

func (m *ReqTokens) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqTokens) GetTokens() []string {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func (m *ReqTokens) GetSymbolOnly() bool {
	if m != nil {
		return m.SymbolOnly
	}
	return false
}

type ReplyTokens struct {
	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *ReplyTokens) Reset()                    { *m = ReplyTokens{} }
func (m *ReplyTokens) String() string            { return proto.CompactTextString(m) }
func (*ReplyTokens) ProtoMessage()               {}
func (*ReplyTokens) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{34} }

func (m *ReplyTokens) GetTokens() []*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type ReceiptToken struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
}

func (m *ReceiptToken) Reset()                    { *m = ReceiptToken{} }
func (m *ReceiptToken) String() string            { return proto.CompactTextString(m) }
func (*ReceiptToken) ProtoMessage()               {}
func (*ReceiptToken) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{35} }

func (m *ReceiptToken) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReceiptToken) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptToken) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type TokenRecv struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Recv  int64  `protobuf:"varint,2,opt,name=recv" json:"recv,omitempty"`
}

func (m *TokenRecv) Reset()                    { *m = TokenRecv{} }
func (m *TokenRecv) String() string            { return proto.CompactTextString(m) }
func (*TokenRecv) ProtoMessage()               {}
func (*TokenRecv) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{36} }

func (m *TokenRecv) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenRecv) GetRecv() int64 {
	if m != nil {
		return m.Recv
	}
	return 0
}

type ReplyAddrRecvForTokens struct {
	TokenRecvs []*TokenRecv `protobuf:"bytes,1,rep,name=tokenRecvs" json:"tokenRecvs,omitempty"`
}

func (m *ReplyAddrRecvForTokens) Reset()                    { *m = ReplyAddrRecvForTokens{} }
func (m *ReplyAddrRecvForTokens) String() string            { return proto.CompactTextString(m) }
func (*ReplyAddrRecvForTokens) ProtoMessage()               {}
func (*ReplyAddrRecvForTokens) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{37} }

func (m *ReplyAddrRecvForTokens) GetTokenRecvs() []*TokenRecv {
	if m != nil {
		return m.TokenRecvs
	}
	return nil
}

// 配置修改部分
type ArrayConfig struct {
	Value []string `protobuf:"bytes,3,rep,name=value" json:"value,omitempty"`
}

func (m *ArrayConfig) Reset()                    { *m = ArrayConfig{} }
func (m *ArrayConfig) String() string            { return proto.CompactTextString(m) }
func (*ArrayConfig) ProtoMessage()               {}
func (*ArrayConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{38} }

func (m *ArrayConfig) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type StringConfig struct {
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *StringConfig) Reset()                    { *m = StringConfig{} }
func (m *StringConfig) String() string            { return proto.CompactTextString(m) }
func (*StringConfig) ProtoMessage()               {}
func (*StringConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{39} }

func (m *StringConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Int32Config struct {
	Value int32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *Int32Config) Reset()                    { *m = Int32Config{} }
func (m *Int32Config) String() string            { return proto.CompactTextString(m) }
func (*Int32Config) ProtoMessage()               {}
func (*Int32Config) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{40} }

func (m *Int32Config) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ConfigItem struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*ConfigItem_Arr
	//	*ConfigItem_Str
	//	*ConfigItem_Int
	Value isConfigItem_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,11,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *ConfigItem) Reset()                    { *m = ConfigItem{} }
func (m *ConfigItem) String() string            { return proto.CompactTextString(m) }
func (*ConfigItem) ProtoMessage()               {}
func (*ConfigItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{41} }

type isConfigItem_Value interface {
	isConfigItem_Value()
}

type ConfigItem_Arr struct {
	Arr *ArrayConfig `protobuf:"bytes,3,opt,name=arr,oneof"`
}
type ConfigItem_Str struct {
	Str *StringConfig `protobuf:"bytes,4,opt,name=str,oneof"`
}
type ConfigItem_Int struct {
	Int *Int32Config `protobuf:"bytes,5,opt,name=int,oneof"`
}

func (*ConfigItem_Arr) isConfigItem_Value() {}
func (*ConfigItem_Str) isConfigItem_Value() {}
func (*ConfigItem_Int) isConfigItem_Value() {}

func (m *ConfigItem) GetValue() isConfigItem_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ConfigItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConfigItem) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ConfigItem) GetArr() *ArrayConfig {
	if x, ok := m.GetValue().(*ConfigItem_Arr); ok {
		return x.Arr
	}
	return nil
}

func (m *ConfigItem) GetStr() *StringConfig {
	if x, ok := m.GetValue().(*ConfigItem_Str); ok {
		return x.Str
	}
	return nil
}

func (m *ConfigItem) GetInt() *Int32Config {
	if x, ok := m.GetValue().(*ConfigItem_Int); ok {
		return x.Int
	}
	return nil
}

func (m *ConfigItem) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConfigItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ConfigItem_OneofMarshaler, _ConfigItem_OneofUnmarshaler, _ConfigItem_OneofSizer, []interface{}{
		(*ConfigItem_Arr)(nil),
		(*ConfigItem_Str)(nil),
		(*ConfigItem_Int)(nil),
	}
}

func _ConfigItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ConfigItem)
	// value
	switch x := m.Value.(type) {
	case *ConfigItem_Arr:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Arr); err != nil {
			return err
		}
	case *ConfigItem_Str:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Str); err != nil {
			return err
		}
	case *ConfigItem_Int:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Int); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConfigItem.Value has unexpected type %T", x)
	}
	return nil
}

func _ConfigItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ConfigItem)
	switch tag {
	case 3: // value.arr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ArrayConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Arr{msg}
		return true, err
	case 4: // value.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StringConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Str{msg}
		return true, err
	case 5: // value.int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Int32Config)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Int{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConfigItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ConfigItem)
	// value
	switch x := m.Value.(type) {
	case *ConfigItem_Arr:
		s := proto.Size(x.Arr)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConfigItem_Str:
		s := proto.Size(x.Str)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConfigItem_Int:
		s := proto.Size(x.Int)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ModifyConfig struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Op    string `protobuf:"bytes,3,opt,name=op" json:"op,omitempty"`
	Addr  string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *ModifyConfig) Reset()                    { *m = ModifyConfig{} }
func (m *ModifyConfig) String() string            { return proto.CompactTextString(m) }
func (*ModifyConfig) ProtoMessage()               {}
func (*ModifyConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{42} }

func (m *ModifyConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ModifyConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ModifyConfig) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *ModifyConfig) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReceiptConfig struct {
	Prev    *ConfigItem `protobuf:"bytes,1,opt,name=prev" json:"prev,omitempty"`
	Current *ConfigItem `protobuf:"bytes,2,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptConfig) Reset()                    { *m = ReceiptConfig{} }
func (m *ReceiptConfig) String() string            { return proto.CompactTextString(m) }
func (*ReceiptConfig) ProtoMessage()               {}
func (*ReceiptConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{43} }

func (m *ReceiptConfig) GetPrev() *ConfigItem {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptConfig) GetCurrent() *ConfigItem {
	if m != nil {
		return m.Current
	}
	return nil
}

type ReplyConfig struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ReplyConfig) Reset()                    { *m = ReplyConfig{} }
func (m *ReplyConfig) String() string            { return proto.CompactTextString(m) }
func (*ReplyConfig) ProtoMessage()               {}
func (*ReplyConfig) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{44} }

func (m *ReplyConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReplyConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HistoryCertStore struct {
	Rootcerts         [][]byte `protobuf:"bytes,1,rep,name=rootcerts,proto3" json:"rootcerts,omitempty"`
	IntermediateCerts [][]byte `protobuf:"bytes,2,rep,name=intermediateCerts,proto3" json:"intermediateCerts,omitempty"`
	RevocationList    [][]byte `protobuf:"bytes,3,rep,name=revocationList,proto3" json:"revocationList,omitempty"`
	CurHeigth         int64    `protobuf:"varint,4,opt,name=curHeigth" json:"curHeigth,omitempty"`
	NxtHeight         int64    `protobuf:"varint,5,opt,name=nxtHeight" json:"nxtHeight,omitempty"`
}

func (m *HistoryCertStore) Reset()                    { *m = HistoryCertStore{} }
func (m *HistoryCertStore) String() string            { return proto.CompactTextString(m) }
func (*HistoryCertStore) ProtoMessage()               {}
func (*HistoryCertStore) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{45} }

func (m *HistoryCertStore) GetRootcerts() [][]byte {
	if m != nil {
		return m.Rootcerts
	}
	return nil
}

func (m *HistoryCertStore) GetIntermediateCerts() [][]byte {
	if m != nil {
		return m.IntermediateCerts
	}
	return nil
}

func (m *HistoryCertStore) GetRevocationList() [][]byte {
	if m != nil {
		return m.RevocationList
	}
	return nil
}

func (m *HistoryCertStore) GetCurHeigth() int64 {
	if m != nil {
		return m.CurHeigth
	}
	return 0
}

func (m *HistoryCertStore) GetNxtHeight() int64 {
	if m != nil {
		return m.NxtHeight
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////////
// message for Privacy start/////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
type PrivacyAction struct {
	// Types that are valid to be assigned to Value:
	//	*PrivacyAction_Public2Privacy
	//	*PrivacyAction_Privacy2Privacy
	//	*PrivacyAction_Privacy2Public
	Value isPrivacyAction_Value `protobuf_oneof:"value"`
	Ty    int32                 `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *PrivacyAction) Reset()                    { *m = PrivacyAction{} }
func (m *PrivacyAction) String() string            { return proto.CompactTextString(m) }
func (*PrivacyAction) ProtoMessage()               {}
func (*PrivacyAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{46} }

type isPrivacyAction_Value interface {
	isPrivacyAction_Value()
}

type PrivacyAction_Public2Privacy struct {
	Public2Privacy *Public2Privacy `protobuf:"bytes,1,opt,name=public2privacy,oneof"`
}
type PrivacyAction_Privacy2Privacy struct {
	Privacy2Privacy *Privacy2Privacy `protobuf:"bytes,2,opt,name=privacy2privacy,oneof"`
}
type PrivacyAction_Privacy2Public struct {
	Privacy2Public *Privacy2Public `protobuf:"bytes,3,opt,name=privacy2public,oneof"`
}

func (*PrivacyAction_Public2Privacy) isPrivacyAction_Value()  {}
func (*PrivacyAction_Privacy2Privacy) isPrivacyAction_Value() {}
func (*PrivacyAction_Privacy2Public) isPrivacyAction_Value()  {}

func (m *PrivacyAction) GetValue() isPrivacyAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PrivacyAction) GetPublic2Privacy() *Public2Privacy {
	if x, ok := m.GetValue().(*PrivacyAction_Public2Privacy); ok {
		return x.Public2Privacy
	}
	return nil
}

func (m *PrivacyAction) GetPrivacy2Privacy() *Privacy2Privacy {
	if x, ok := m.GetValue().(*PrivacyAction_Privacy2Privacy); ok {
		return x.Privacy2Privacy
	}
	return nil
}

func (m *PrivacyAction) GetPrivacy2Public() *Privacy2Public {
	if x, ok := m.GetValue().(*PrivacyAction_Privacy2Public); ok {
		return x.Privacy2Public
	}
	return nil
}

func (m *PrivacyAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PrivacyAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PrivacyAction_OneofMarshaler, _PrivacyAction_OneofUnmarshaler, _PrivacyAction_OneofSizer, []interface{}{
		(*PrivacyAction_Public2Privacy)(nil),
		(*PrivacyAction_Privacy2Privacy)(nil),
		(*PrivacyAction_Privacy2Public)(nil),
	}
}

func _PrivacyAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PrivacyAction)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction_Public2Privacy:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Public2Privacy); err != nil {
			return err
		}
	case *PrivacyAction_Privacy2Privacy:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Privacy); err != nil {
			return err
		}
	case *PrivacyAction_Privacy2Public:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Public); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PrivacyAction.Value has unexpected type %T", x)
	}
	return nil
}

func _PrivacyAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PrivacyAction)
	switch tag {
	case 1: // value.public2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Public2Privacy)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Public2Privacy{msg}
		return true, err
	case 2: // value.privacy2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Privacy)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Privacy2Privacy{msg}
		return true, err
	case 3: // value.privacy2public
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Public)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Privacy2Public{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PrivacyAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PrivacyAction)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction_Public2Privacy:
		s := proto.Size(x.Public2Privacy)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction_Privacy2Privacy:
		s := proto.Size(x.Privacy2Privacy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction_Privacy2Public:
		s := proto.Size(x.Privacy2Public)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Public2Privacy struct {
	Tokenname string         `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string         `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Output    *PrivacyOutput `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Public2Privacy) Reset()                    { *m = Public2Privacy{} }
func (m *Public2Privacy) String() string            { return proto.CompactTextString(m) }
func (*Public2Privacy) ProtoMessage()               {}
func (*Public2Privacy) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{47} }

func (m *Public2Privacy) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Public2Privacy) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Public2Privacy) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Public2Privacy) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Privacy struct {
	Tokenname string         `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string         `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput  `protobuf:"bytes,6,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Privacy) Reset()                    { *m = Privacy2Privacy{} }
func (m *Privacy2Privacy) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Privacy) ProtoMessage()               {}
func (*Privacy2Privacy) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{48} }

func (m *Privacy2Privacy) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Privacy) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Privacy) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Privacy) GetInput() *PrivacyInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Privacy) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Public struct {
	Tokenname string         `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string         `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput  `protobuf:"bytes,4,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput `protobuf:"bytes,5,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Public) Reset()                    { *m = Privacy2Public{} }
func (m *Privacy2Public) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Public) ProtoMessage()               {}
func (*Privacy2Public) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{49} }

func (m *Privacy2Public) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Public) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Public) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Public) GetInput() *PrivacyInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Public) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type UTXOGlobalIndex struct {
	// 	int64 height   = 1;
	// 	int32 txindex  = 2;
	Txhash   []byte `protobuf:"bytes,3,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Outindex int32  `protobuf:"varint,4,opt,name=outindex" json:"outindex,omitempty"`
}

func (m *UTXOGlobalIndex) Reset()                    { *m = UTXOGlobalIndex{} }
func (m *UTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*UTXOGlobalIndex) ProtoMessage()               {}
func (*UTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{50} }

func (m *UTXOGlobalIndex) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

func (m *UTXOGlobalIndex) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

// privacy input
type KeyInput struct {
	Amount          int64              `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
	KeyImage        []byte             `protobuf:"bytes,3,opt,name=keyImage,proto3" json:"keyImage,omitempty"`
}

func (m *KeyInput) Reset()                    { *m = KeyInput{} }
func (m *KeyInput) String() string            { return proto.CompactTextString(m) }
func (*KeyInput) ProtoMessage()               {}
func (*KeyInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{51} }

func (m *KeyInput) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyInput) GetUtxoGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

func (m *KeyInput) GetKeyImage() []byte {
	if m != nil {
		return m.KeyImage
	}
	return nil
}

type PrivacyInput struct {
	Keyinput []*KeyInput `protobuf:"bytes,1,rep,name=keyinput" json:"keyinput,omitempty"`
}

func (m *PrivacyInput) Reset()                    { *m = PrivacyInput{} }
func (m *PrivacyInput) String() string            { return proto.CompactTextString(m) }
func (*PrivacyInput) ProtoMessage()               {}
func (*PrivacyInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{52} }

func (m *PrivacyInput) GetKeyinput() []*KeyInput {
	if m != nil {
		return m.Keyinput
	}
	return nil
}

// privacy output
type KeyOutput struct {
	Amount        int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Onetimepubkey []byte `protobuf:"bytes,2,opt,name=onetimepubkey,proto3" json:"onetimepubkey,omitempty"`
}

func (m *KeyOutput) Reset()                    { *m = KeyOutput{} }
func (m *KeyOutput) String() string            { return proto.CompactTextString(m) }
func (*KeyOutput) ProtoMessage()               {}
func (*KeyOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{53} }

func (m *KeyOutput) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyOutput) GetOnetimepubkey() []byte {
	if m != nil {
		return m.Onetimepubkey
	}
	return nil
}

type PrivacyOutput struct {
	RpubKeytx []byte       `protobuf:"bytes,1,opt,name=RpubKeytx,proto3" json:"RpubKeytx,omitempty"`
	Keyoutput []*KeyOutput `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *PrivacyOutput) Reset()                    { *m = PrivacyOutput{} }
func (m *PrivacyOutput) String() string            { return proto.CompactTextString(m) }
func (*PrivacyOutput) ProtoMessage()               {}
func (*PrivacyOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{54} }

func (m *PrivacyOutput) GetRpubKeytx() []byte {
	if m != nil {
		return m.RpubKeytx
	}
	return nil
}

func (m *PrivacyOutput) GetKeyoutput() []*KeyOutput {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

type GroupUTXOGlobalIndex struct {
	Amount          int64              `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
}

func (m *GroupUTXOGlobalIndex) Reset()                    { *m = GroupUTXOGlobalIndex{} }
func (m *GroupUTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*GroupUTXOGlobalIndex) ProtoMessage()               {}
func (*GroupUTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{55} }

func (m *GroupUTXOGlobalIndex) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GroupUTXOGlobalIndex) GetUtxoGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

type LocalUTXOItem struct {
	Height        int64  `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Txindex       int32  `protobuf:"varint,2,opt,name=txindex" json:"txindex,omitempty"`
	Outindex      int32  `protobuf:"varint,3,opt,name=outindex" json:"outindex,omitempty"`
	Txhash        []byte `protobuf:"bytes,4,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Onetimepubkey []byte `protobuf:"bytes,5,opt,name=onetimepubkey,proto3" json:"onetimepubkey,omitempty"`
}

func (m *LocalUTXOItem) Reset()                    { *m = LocalUTXOItem{} }
func (m *LocalUTXOItem) String() string            { return proto.CompactTextString(m) }
func (*LocalUTXOItem) ProtoMessage()               {}
func (*LocalUTXOItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{56} }

func (m *LocalUTXOItem) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *LocalUTXOItem) GetTxindex() int32 {
	if m != nil {
		return m.Txindex
	}
	return 0
}

func (m *LocalUTXOItem) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

func (m *LocalUTXOItem) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

func (m *LocalUTXOItem) GetOnetimepubkey() []byte {
	if m != nil {
		return m.Onetimepubkey
	}
	return nil
}

type ReqUTXOPubKeys struct {
	TokenName            string                  `protobuf:"bytes,1,opt,name=tokenName" json:"tokenName,omitempty"`
	GroupUTXOGlobalIndex []*GroupUTXOGlobalIndex `protobuf:"bytes,2,rep,name=groupUTXOGlobalIndex" json:"groupUTXOGlobalIndex,omitempty"`
}

func (m *ReqUTXOPubKeys) Reset()                    { *m = ReqUTXOPubKeys{} }
func (m *ReqUTXOPubKeys) String() string            { return proto.CompactTextString(m) }
func (*ReqUTXOPubKeys) ProtoMessage()               {}
func (*ReqUTXOPubKeys) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{57} }

func (m *ReqUTXOPubKeys) GetTokenName() string {
	if m != nil {
		return m.TokenName
	}
	return ""
}

func (m *ReqUTXOPubKeys) GetGroupUTXOGlobalIndex() []*GroupUTXOGlobalIndex {
	if m != nil {
		return m.GroupUTXOGlobalIndex
	}
	return nil
}

// 一个公钥信息
type PublicKeyData struct {
	Data [][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (m *PublicKeyData) Reset()                    { *m = PublicKeyData{} }
func (m *PublicKeyData) String() string            { return proto.CompactTextString(m) }
func (*PublicKeyData) ProtoMessage()               {}
func (*PublicKeyData) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{58} }

func (m *PublicKeyData) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GroupUTXOPubKey struct {
	Amount int64 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	// 输出签名的所有公钥
	Pubkey [][]byte `protobuf:"bytes,2,rep,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (m *GroupUTXOPubKey) Reset()                    { *m = GroupUTXOPubKey{} }
func (m *GroupUTXOPubKey) String() string            { return proto.CompactTextString(m) }
func (*GroupUTXOPubKey) ProtoMessage()               {}
func (*GroupUTXOPubKey) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{59} }

func (m *GroupUTXOPubKey) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GroupUTXOPubKey) GetPubkey() [][]byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

type ResUTXOPubKeys struct {
	GroupUTXOPubKeys []*GroupUTXOPubKey `protobuf:"bytes,1,rep,name=groupUTXOPubKeys" json:"groupUTXOPubKeys,omitempty"`
}

func (m *ResUTXOPubKeys) Reset()                    { *m = ResUTXOPubKeys{} }
func (m *ResUTXOPubKeys) String() string            { return proto.CompactTextString(m) }
func (*ResUTXOPubKeys) ProtoMessage()               {}
func (*ResUTXOPubKeys) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{60} }

func (m *ResUTXOPubKeys) GetGroupUTXOPubKeys() []*GroupUTXOPubKey {
	if m != nil {
		return m.GroupUTXOPubKeys
	}
	return nil
}

type ReqPrivacyToken struct {
	Token  string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Amount int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *ReqPrivacyToken) Reset()                    { *m = ReqPrivacyToken{} }
func (m *ReqPrivacyToken) String() string            { return proto.CompactTextString(m) }
func (*ReqPrivacyToken) ProtoMessage()               {}
func (*ReqPrivacyToken) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{61} }

func (m *ReqPrivacyToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReqPrivacyToken) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type AmountDetail struct {
	Amount int64 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Count  int64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *AmountDetail) Reset()                    { *m = AmountDetail{} }
func (m *AmountDetail) String() string            { return proto.CompactTextString(m) }
func (*AmountDetail) ProtoMessage()               {}
func (*AmountDetail) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{62} }

func (m *AmountDetail) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AmountDetail) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReplyPrivacyAmounts struct {
	AmountDetail []*AmountDetail `protobuf:"bytes,1,rep,name=amountDetail" json:"amountDetail,omitempty"`
}

func (m *ReplyPrivacyAmounts) Reset()                    { *m = ReplyPrivacyAmounts{} }
func (m *ReplyPrivacyAmounts) String() string            { return proto.CompactTextString(m) }
func (*ReplyPrivacyAmounts) ProtoMessage()               {}
func (*ReplyPrivacyAmounts) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{63} }

func (m *ReplyPrivacyAmounts) GetAmountDetail() []*AmountDetail {
	if m != nil {
		return m.AmountDetail
	}
	return nil
}

type ReplyUTXOsOfAmount struct {
	LocalUTXOItems []*LocalUTXOItem `protobuf:"bytes,1,rep,name=localUTXOItems" json:"localUTXOItems,omitempty"`
}

func (m *ReplyUTXOsOfAmount) Reset()                    { *m = ReplyUTXOsOfAmount{} }
func (m *ReplyUTXOsOfAmount) String() string            { return proto.CompactTextString(m) }
func (*ReplyUTXOsOfAmount) ProtoMessage()               {}
func (*ReplyUTXOsOfAmount) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{64} }

func (m *ReplyUTXOsOfAmount) GetLocalUTXOItems() []*LocalUTXOItem {
	if m != nil {
		return m.LocalUTXOItems
	}
	return nil
}

type ReceiptPrivacyOutput struct {
	Token     string       `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Keyoutput []*KeyOutput `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *ReceiptPrivacyOutput) Reset()                    { *m = ReceiptPrivacyOutput{} }
func (m *ReceiptPrivacyOutput) String() string            { return proto.CompactTextString(m) }
func (*ReceiptPrivacyOutput) ProtoMessage()               {}
func (*ReceiptPrivacyOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{65} }

func (m *ReceiptPrivacyOutput) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReceiptPrivacyOutput) GetKeyoutput() []*KeyOutput {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

// 各种amount额度的UTXO在链上的数量
type AmountsOfUTXO struct {
	AmountMap map[int64]int64 `protobuf:"bytes,1,rep,name=amountMap" json:"amountMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *AmountsOfUTXO) Reset()                    { *m = AmountsOfUTXO{} }
func (m *AmountsOfUTXO) String() string            { return proto.CompactTextString(m) }
func (*AmountsOfUTXO) ProtoMessage()               {}
func (*AmountsOfUTXO) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{66} }

func (m *AmountsOfUTXO) GetAmountMap() map[int64]int64 {
	if m != nil {
		return m.AmountMap
	}
	return nil
}

type TokenNamesOfUTXO struct {
	TokensMap map[string]string `protobuf:"bytes,1,rep,name=tokensMap" json:"tokensMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TokenNamesOfUTXO) Reset()                    { *m = TokenNamesOfUTXO{} }
func (m *TokenNamesOfUTXO) String() string            { return proto.CompactTextString(m) }
func (*TokenNamesOfUTXO) ProtoMessage()               {}
func (*TokenNamesOfUTXO) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{67} }

func (m *TokenNamesOfUTXO) GetTokensMap() map[string]string {
	if m != nil {
		return m.TokensMap
	}
	return nil
}

// 用以转换成json后继续可见的结构
type UTXOGlobalIndex4Print struct {
	Txhash   string `protobuf:"bytes,1,opt,name=txhash" json:"txhash,omitempty"`
	Outindex int32  `protobuf:"varint,2,opt,name=outindex" json:"outindex,omitempty"`
}

func (m *UTXOGlobalIndex4Print) Reset()                    { *m = UTXOGlobalIndex4Print{} }
func (m *UTXOGlobalIndex4Print) String() string            { return proto.CompactTextString(m) }
func (*UTXOGlobalIndex4Print) ProtoMessage()               {}
func (*UTXOGlobalIndex4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{68} }

func (m *UTXOGlobalIndex4Print) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

func (m *UTXOGlobalIndex4Print) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

type KeyInput4Print struct {
	Amount          int64                    `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex4Print `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
	KeyImage        string                   `protobuf:"bytes,3,opt,name=keyImage" json:"keyImage,omitempty"`
}

func (m *KeyInput4Print) Reset()                    { *m = KeyInput4Print{} }
func (m *KeyInput4Print) String() string            { return proto.CompactTextString(m) }
func (*KeyInput4Print) ProtoMessage()               {}
func (*KeyInput4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{69} }

func (m *KeyInput4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyInput4Print) GetUtxoGlobalIndex() []*UTXOGlobalIndex4Print {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

func (m *KeyInput4Print) GetKeyImage() string {
	if m != nil {
		return m.KeyImage
	}
	return ""
}

type KeyOutput4Print struct {
	Amount        int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Onetimepubkey string `protobuf:"bytes,2,opt,name=onetimepubkey" json:"onetimepubkey,omitempty"`
}

func (m *KeyOutput4Print) Reset()                    { *m = KeyOutput4Print{} }
func (m *KeyOutput4Print) String() string            { return proto.CompactTextString(m) }
func (*KeyOutput4Print) ProtoMessage()               {}
func (*KeyOutput4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{70} }

func (m *KeyOutput4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyOutput4Print) GetOnetimepubkey() string {
	if m != nil {
		return m.Onetimepubkey
	}
	return ""
}

type PrivacyInput4Print struct {
	Keyinput []*KeyInput4Print `protobuf:"bytes,1,rep,name=keyinput" json:"keyinput,omitempty"`
}

func (m *PrivacyInput4Print) Reset()                    { *m = PrivacyInput4Print{} }
func (m *PrivacyInput4Print) String() string            { return proto.CompactTextString(m) }
func (*PrivacyInput4Print) ProtoMessage()               {}
func (*PrivacyInput4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{71} }

func (m *PrivacyInput4Print) GetKeyinput() []*KeyInput4Print {
	if m != nil {
		return m.Keyinput
	}
	return nil
}

type PrivacyOutput4Print struct {
	RpubKeytx string             `protobuf:"bytes,1,opt,name=RpubKeytx" json:"RpubKeytx,omitempty"`
	Keyoutput []*KeyOutput4Print `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *PrivacyOutput4Print) Reset()                    { *m = PrivacyOutput4Print{} }
func (m *PrivacyOutput4Print) String() string            { return proto.CompactTextString(m) }
func (*PrivacyOutput4Print) ProtoMessage()               {}
func (*PrivacyOutput4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{72} }

func (m *PrivacyOutput4Print) GetRpubKeytx() string {
	if m != nil {
		return m.RpubKeytx
	}
	return ""
}

func (m *PrivacyOutput4Print) GetKeyoutput() []*KeyOutput4Print {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

type Public2Privacy4Print struct {
	Tokenname string               `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64                `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string               `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Output    *PrivacyOutput4Print `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Public2Privacy4Print) Reset()                    { *m = Public2Privacy4Print{} }
func (m *Public2Privacy4Print) String() string            { return proto.CompactTextString(m) }
func (*Public2Privacy4Print) ProtoMessage()               {}
func (*Public2Privacy4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{73} }

func (m *Public2Privacy4Print) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Public2Privacy4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Public2Privacy4Print) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Public2Privacy4Print) GetOutput() *PrivacyOutput4Print {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Privacy4Print struct {
	Tokenname string               `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64                `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string               `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput4Print  `protobuf:"bytes,6,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput4Print `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Privacy4Print) Reset()                    { *m = Privacy2Privacy4Print{} }
func (m *Privacy2Privacy4Print) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Privacy4Print) ProtoMessage()               {}
func (*Privacy2Privacy4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{74} }

func (m *Privacy2Privacy4Print) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Privacy4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Privacy4Print) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Privacy4Print) GetInput() *PrivacyInput4Print {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Privacy4Print) GetOutput() *PrivacyOutput4Print {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Public4Print struct {
	Tokenname string               `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64                `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string               `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput4Print  `protobuf:"bytes,4,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput4Print `protobuf:"bytes,5,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Public4Print) Reset()                    { *m = Privacy2Public4Print{} }
func (m *Privacy2Public4Print) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Public4Print) ProtoMessage()               {}
func (*Privacy2Public4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{75} }

func (m *Privacy2Public4Print) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Public4Print) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Public4Print) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Public4Print) GetInput() *PrivacyInput4Print {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Public4Print) GetOutput() *PrivacyOutput4Print {
	if m != nil {
		return m.Output
	}
	return nil
}

type PrivacyAction4Print struct {
	// Types that are valid to be assigned to Value:
	//	*PrivacyAction4Print_Public2Privacy
	//	*PrivacyAction4Print_Privacy2Privacy
	//	*PrivacyAction4Print_Privacy2Public
	Value isPrivacyAction4Print_Value `protobuf_oneof:"value"`
	Ty    int32                       `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *PrivacyAction4Print) Reset()                    { *m = PrivacyAction4Print{} }
func (m *PrivacyAction4Print) String() string            { return proto.CompactTextString(m) }
func (*PrivacyAction4Print) ProtoMessage()               {}
func (*PrivacyAction4Print) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{76} }

type isPrivacyAction4Print_Value interface {
	isPrivacyAction4Print_Value()
}

type PrivacyAction4Print_Public2Privacy struct {
	Public2Privacy *Public2Privacy4Print `protobuf:"bytes,1,opt,name=public2privacy,oneof"`
}
type PrivacyAction4Print_Privacy2Privacy struct {
	Privacy2Privacy *Privacy2Privacy4Print `protobuf:"bytes,2,opt,name=privacy2privacy,oneof"`
}
type PrivacyAction4Print_Privacy2Public struct {
	Privacy2Public *Privacy2Public4Print `protobuf:"bytes,3,opt,name=privacy2public,oneof"`
}

func (*PrivacyAction4Print_Public2Privacy) isPrivacyAction4Print_Value()  {}
func (*PrivacyAction4Print_Privacy2Privacy) isPrivacyAction4Print_Value() {}
func (*PrivacyAction4Print_Privacy2Public) isPrivacyAction4Print_Value()  {}

func (m *PrivacyAction4Print) GetValue() isPrivacyAction4Print_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PrivacyAction4Print) GetPublic2Privacy() *Public2Privacy4Print {
	if x, ok := m.GetValue().(*PrivacyAction4Print_Public2Privacy); ok {
		return x.Public2Privacy
	}
	return nil
}

func (m *PrivacyAction4Print) GetPrivacy2Privacy() *Privacy2Privacy4Print {
	if x, ok := m.GetValue().(*PrivacyAction4Print_Privacy2Privacy); ok {
		return x.Privacy2Privacy
	}
	return nil
}

func (m *PrivacyAction4Print) GetPrivacy2Public() *Privacy2Public4Print {
	if x, ok := m.GetValue().(*PrivacyAction4Print_Privacy2Public); ok {
		return x.Privacy2Public
	}
	return nil
}

func (m *PrivacyAction4Print) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PrivacyAction4Print) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PrivacyAction4Print_OneofMarshaler, _PrivacyAction4Print_OneofUnmarshaler, _PrivacyAction4Print_OneofSizer, []interface{}{
		(*PrivacyAction4Print_Public2Privacy)(nil),
		(*PrivacyAction4Print_Privacy2Privacy)(nil),
		(*PrivacyAction4Print_Privacy2Public)(nil),
	}
}

func _PrivacyAction4Print_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PrivacyAction4Print)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction4Print_Public2Privacy:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Public2Privacy); err != nil {
			return err
		}
	case *PrivacyAction4Print_Privacy2Privacy:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Privacy); err != nil {
			return err
		}
	case *PrivacyAction4Print_Privacy2Public:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Public); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PrivacyAction4Print.Value has unexpected type %T", x)
	}
	return nil
}

func _PrivacyAction4Print_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PrivacyAction4Print)
	switch tag {
	case 1: // value.public2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Public2Privacy4Print)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction4Print_Public2Privacy{msg}
		return true, err
	case 2: // value.privacy2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Privacy4Print)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction4Print_Privacy2Privacy{msg}
		return true, err
	case 3: // value.privacy2public
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Public4Print)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction4Print_Privacy2Public{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PrivacyAction4Print_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PrivacyAction4Print)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction4Print_Public2Privacy:
		s := proto.Size(x.Public2Privacy)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction4Print_Privacy2Privacy:
		s := proto.Size(x.Privacy2Privacy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction4Print_Privacy2Public:
		s := proto.Size(x.Privacy2Public)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ValNode struct {
	PubKey []byte `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Power  int64  `protobuf:"varint,2,opt,name=power" json:"power,omitempty"`
}

func (m *ValNode) Reset()                    { *m = ValNode{} }
func (m *ValNode) String() string            { return proto.CompactTextString(m) }
func (*ValNode) ProtoMessage()               {}
func (*ValNode) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{77} }

func (m *ValNode) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *ValNode) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type ValNodes struct {
	Nodes []*ValNode `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *ValNodes) Reset()                    { *m = ValNodes{} }
func (m *ValNodes) String() string            { return proto.CompactTextString(m) }
func (*ValNodes) ProtoMessage()               {}
func (*ValNodes) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{78} }

func (m *ValNodes) GetNodes() []*ValNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type ValNodeAction struct {
	// Types that are valid to be assigned to Value:
	//	*ValNodeAction_Node
	//	*ValNodeAction_BlockInfo
	Value isValNodeAction_Value `protobuf_oneof:"value"`
	Ty    int32                 `protobuf:"varint,3,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *ValNodeAction) Reset()                    { *m = ValNodeAction{} }
func (m *ValNodeAction) String() string            { return proto.CompactTextString(m) }
func (*ValNodeAction) ProtoMessage()               {}
func (*ValNodeAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{79} }

type isValNodeAction_Value interface {
	isValNodeAction_Value()
}

type ValNodeAction_Node struct {
	Node *ValNode `protobuf:"bytes,1,opt,name=node,oneof"`
}
type ValNodeAction_BlockInfo struct {
	BlockInfo *TendermintBlockInfo `protobuf:"bytes,2,opt,name=blockInfo,oneof"`
}

func (*ValNodeAction_Node) isValNodeAction_Value()      {}
func (*ValNodeAction_BlockInfo) isValNodeAction_Value() {}

func (m *ValNodeAction) GetValue() isValNodeAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ValNodeAction) GetNode() *ValNode {
	if x, ok := m.GetValue().(*ValNodeAction_Node); ok {
		return x.Node
	}
	return nil
}

func (m *ValNodeAction) GetBlockInfo() *TendermintBlockInfo {
	if x, ok := m.GetValue().(*ValNodeAction_BlockInfo); ok {
		return x.BlockInfo
	}
	return nil
}

func (m *ValNodeAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ValNodeAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ValNodeAction_OneofMarshaler, _ValNodeAction_OneofUnmarshaler, _ValNodeAction_OneofSizer, []interface{}{
		(*ValNodeAction_Node)(nil),
		(*ValNodeAction_BlockInfo)(nil),
	}
}

func _ValNodeAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ValNodeAction)
	// value
	switch x := m.Value.(type) {
	case *ValNodeAction_Node:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Node); err != nil {
			return err
		}
	case *ValNodeAction_BlockInfo:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BlockInfo); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ValNodeAction.Value has unexpected type %T", x)
	}
	return nil
}

func _ValNodeAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ValNodeAction)
	switch tag {
	case 1: // value.node
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValNode)
		err := b.DecodeMessage(msg)
		m.Value = &ValNodeAction_Node{msg}
		return true, err
	case 2: // value.blockInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TendermintBlockInfo)
		err := b.DecodeMessage(msg)
		m.Value = &ValNodeAction_BlockInfo{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ValNodeAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ValNodeAction)
	// value
	switch x := m.Value.(type) {
	case *ValNodeAction_Node:
		s := proto.Size(x.Node)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValNodeAction_BlockInfo:
		s := proto.Size(x.BlockInfo)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Genesis)(nil), "types.Genesis")
	proto.RegisterType((*Ticket)(nil), "types.Ticket")
	proto.RegisterType((*TicketAction)(nil), "types.TicketAction")
	proto.RegisterType((*TicketMiner)(nil), "types.TicketMiner")
	proto.RegisterType((*TicketBind)(nil), "types.TicketBind")
	proto.RegisterType((*TicketOpen)(nil), "types.TicketOpen")
	proto.RegisterType((*TicketGenesis)(nil), "types.TicketGenesis")
	proto.RegisterType((*TicketClose)(nil), "types.TicketClose")
	proto.RegisterType((*TicketList)(nil), "types.TicketList")
	proto.RegisterType((*TicketInfos)(nil), "types.TicketInfos")
	proto.RegisterType((*ReplyTicketList)(nil), "types.ReplyTicketList")
	proto.RegisterType((*ReplyWalletTickets)(nil), "types.ReplyWalletTickets")
	proto.RegisterType((*ReceiptTicket)(nil), "types.ReceiptTicket")
	proto.RegisterType((*ReceiptTicketBind)(nil), "types.ReceiptTicketBind")
	proto.RegisterType((*ExecTxList)(nil), "types.ExecTxList")
	proto.RegisterType((*Query)(nil), "types.Query")
	proto.RegisterType((*Norm)(nil), "types.Norm")
	proto.RegisterType((*NormAction)(nil), "types.NormAction")
	proto.RegisterType((*NormPut)(nil), "types.NormPut")
	proto.RegisterType((*RetrievePara)(nil), "types.RetrievePara")
	proto.RegisterType((*Retrieve)(nil), "types.Retrieve")
	proto.RegisterType((*RetrieveAction)(nil), "types.RetrieveAction")
	proto.RegisterType((*BackupRetrieve)(nil), "types.BackupRetrieve")
	proto.RegisterType((*PreRetrieve)(nil), "types.PreRetrieve")
	proto.RegisterType((*PerformRetrieve)(nil), "types.PerformRetrieve")
	proto.RegisterType((*CancelRetrieve)(nil), "types.CancelRetrieve")
	proto.RegisterType((*ReqRetrieveInfo)(nil), "types.ReqRetrieveInfo")
	proto.RegisterType((*RetrieveQuery)(nil), "types.RetrieveQuery")
	proto.RegisterType((*TokenAction)(nil), "types.TokenAction")
	proto.RegisterType((*TokenPreCreate)(nil), "types.TokenPreCreate")
	proto.RegisterType((*TokenFinishCreate)(nil), "types.TokenFinishCreate")
	proto.RegisterType((*TokenRevokeCreate)(nil), "types.TokenRevokeCreate")
	proto.RegisterType((*Token)(nil), "types.Token")
	proto.RegisterType((*ReqTokens)(nil), "types.ReqTokens")
	proto.RegisterType((*ReplyTokens)(nil), "types.ReplyTokens")
	proto.RegisterType((*ReceiptToken)(nil), "types.ReceiptToken")
	proto.RegisterType((*TokenRecv)(nil), "types.TokenRecv")
	proto.RegisterType((*ReplyAddrRecvForTokens)(nil), "types.ReplyAddrRecvForTokens")
	proto.RegisterType((*ArrayConfig)(nil), "types.ArrayConfig")
	proto.RegisterType((*StringConfig)(nil), "types.StringConfig")
	proto.RegisterType((*Int32Config)(nil), "types.Int32Config")
	proto.RegisterType((*ConfigItem)(nil), "types.ConfigItem")
	proto.RegisterType((*ModifyConfig)(nil), "types.ModifyConfig")
	proto.RegisterType((*ReceiptConfig)(nil), "types.ReceiptConfig")
	proto.RegisterType((*ReplyConfig)(nil), "types.ReplyConfig")
	proto.RegisterType((*HistoryCertStore)(nil), "types.HistoryCertStore")
	proto.RegisterType((*PrivacyAction)(nil), "types.PrivacyAction")
	proto.RegisterType((*Public2Privacy)(nil), "types.Public2Privacy")
	proto.RegisterType((*Privacy2Privacy)(nil), "types.Privacy2Privacy")
	proto.RegisterType((*Privacy2Public)(nil), "types.Privacy2Public")
	proto.RegisterType((*UTXOGlobalIndex)(nil), "types.UTXOGlobalIndex")
	proto.RegisterType((*KeyInput)(nil), "types.KeyInput")
	proto.RegisterType((*PrivacyInput)(nil), "types.PrivacyInput")
	proto.RegisterType((*KeyOutput)(nil), "types.keyOutput")
	proto.RegisterType((*PrivacyOutput)(nil), "types.PrivacyOutput")
	proto.RegisterType((*GroupUTXOGlobalIndex)(nil), "types.GroupUTXOGlobalIndex")
	proto.RegisterType((*LocalUTXOItem)(nil), "types.LocalUTXOItem")
	proto.RegisterType((*ReqUTXOPubKeys)(nil), "types.ReqUTXOPubKeys")
	proto.RegisterType((*PublicKeyData)(nil), "types.PublicKeyData")
	proto.RegisterType((*GroupUTXOPubKey)(nil), "types.GroupUTXOPubKey")
	proto.RegisterType((*ResUTXOPubKeys)(nil), "types.ResUTXOPubKeys")
	proto.RegisterType((*ReqPrivacyToken)(nil), "types.ReqPrivacyToken")
	proto.RegisterType((*AmountDetail)(nil), "types.AmountDetail")
	proto.RegisterType((*ReplyPrivacyAmounts)(nil), "types.ReplyPrivacyAmounts")
	proto.RegisterType((*ReplyUTXOsOfAmount)(nil), "types.replyUTXOsOfAmount")
	proto.RegisterType((*ReceiptPrivacyOutput)(nil), "types.ReceiptPrivacyOutput")
	proto.RegisterType((*AmountsOfUTXO)(nil), "types.AmountsOfUTXO")
	proto.RegisterType((*TokenNamesOfUTXO)(nil), "types.TokenNamesOfUTXO")
	proto.RegisterType((*UTXOGlobalIndex4Print)(nil), "types.UTXOGlobalIndex4Print")
	proto.RegisterType((*KeyInput4Print)(nil), "types.KeyInput4Print")
	proto.RegisterType((*KeyOutput4Print)(nil), "types.keyOutput4Print")
	proto.RegisterType((*PrivacyInput4Print)(nil), "types.PrivacyInput4Print")
	proto.RegisterType((*PrivacyOutput4Print)(nil), "types.PrivacyOutput4Print")
	proto.RegisterType((*Public2Privacy4Print)(nil), "types.Public2Privacy4Print")
	proto.RegisterType((*Privacy2Privacy4Print)(nil), "types.Privacy2Privacy4Print")
	proto.RegisterType((*Privacy2Public4Print)(nil), "types.Privacy2Public4Print")
	proto.RegisterType((*PrivacyAction4Print)(nil), "types.PrivacyAction4Print")
	proto.RegisterType((*ValNode)(nil), "types.ValNode")
	proto.RegisterType((*ValNodes)(nil), "types.ValNodes")
	proto.RegisterType((*ValNodeAction)(nil), "types.ValNodeAction")
}

func init() { proto.RegisterFile("executor.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 2786 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0x4f, 0x6f, 0x24, 0x47,
	0x15, 0x77, 0x4f, 0x7b, 0x3c, 0x9e, 0x37, 0xe3, 0xf1, 0x6e, 0xc7, 0x6b, 0x99, 0xcd, 0x2a, 0xac,
	0x7a, 0x4d, 0xb2, 0x21, 0x61, 0x93, 0xd8, 0x89, 0x12, 0x85, 0x48, 0xc1, 0xde, 0x6c, 0x76, 0x8c,
	0xb3, 0x6b, 0x53, 0x99, 0x24, 0x10, 0xfe, 0x44, 0xed, 0x9e, 0x1a, 0xbb, 0xe5, 0x9e, 0xee, 0xde,
	0xea, 0x1a, 0xdb, 0x73, 0x02, 0x71, 0x40, 0x80, 0x40, 0xe2, 0x80, 0xb8, 0x70, 0xe3, 0xc0, 0x07,
	0x00, 0x3e, 0x01, 0x02, 0x2e, 0x7c, 0x02, 0x2e, 0x7c, 0x03, 0xf8, 0x0c, 0xa8, 0xaa, 0x5e, 0x75,
	0x57, 0xf5, 0xb4, 0x59, 0x9b, 0x18, 0xc4, 0xc9, 0x5d, 0xaf, 0x7e, 0xf5, 0xea, 0xbd, 0x57, 0xaf,
	0xde, 0x9f, 0x1a, 0x43, 0x8f, 0x9e, 0xd1, 0x70, 0xc2, 0x53, 0x76, 0x2f, 0x63, 0x29, 0x4f, 0xbd,
	0x26, 0x9f, 0x66, 0x34, 0xbf, 0x79, 0x9d, 0xb3, 0x20, 0xc9, 0x83, 0x90, 0x47, 0x69, 0xa2, 0x66,
	0x6e, 0x5e, 0xe3, 0x34, 0x19, 0x52, 0x36, 0x8e, 0x12, 0xae, 0x28, 0xfe, 0x17, 0xa1, 0xf5, 0x90,
	0x26, 0x34, 0x8f, 0x72, 0x6f, 0x05, 0x9a, 0x51, 0xce, 0x26, 0xc9, 0x9a, 0x73, 0xdb, 0xb9, 0xbb,
	0x48, 0xd4, 0xc0, 0xff, 0x61, 0x03, 0x16, 0x06, 0x51, 0x78, 0x4c, 0xb9, 0x77, 0x13, 0x16, 0xb9,
	0xfc, 0xda, 0x19, 0x4a, 0x4c, 0x9b, 0x14, 0x63, 0x6f, 0x15, 0x16, 0x72, 0x1e, 0xf0, 0x49, 0xbe,
	0xd6, 0xb8, 0xed, 0xdc, 0x6d, 0x12, 0x1c, 0x79, 0xb7, 0xa0, 0x1d, 0xe5, 0xb8, 0xc3, 0x9a, 0x2b,
	0x19, 0x97, 0x04, 0xef, 0x39, 0x80, 0x90, 0xd1, 0x80, 0xd3, 0x41, 0x34, 0xa6, 0x6b, 0xf3, 0xb7,
	0x9d, 0xbb, 0x2e, 0x31, 0x28, 0x62, 0xf5, 0x38, 0x4a, 0x28, 0x93, 0xd3, 0x4d, 0x39, 0x5d, 0x12,
	0xc4, 0x6a, 0x39, 0xf8, 0x38, 0x88, 0x27, 0x74, 0x6d, 0x51, 0xad, 0x2e, 0x29, 0x9e, 0x0f, 0x5d,
	0x39, 0xda, 0x1a, 0x0e, 0x19, 0xcd, 0xf3, 0xb5, 0x05, 0x29, 0xb3, 0x45, 0xf3, 0xd6, 0x61, 0x89,
	0x51, 0x3e, 0x61, 0x89, 0x06, 0xb5, 0x24, 0xc8, 0x26, 0xfa, 0x3f, 0x69, 0x40, 0x57, 0x19, 0x61,
	0x4b, 0x9a, 0xd3, 0x7b, 0x11, 0x9a, 0xfc, 0x20, 0x4a, 0x86, 0x52, 0xa8, 0xce, 0xc6, 0xf5, 0x7b,
	0xd2, 0xe4, 0xf7, 0x14, 0x66, 0x3b, 0x4a, 0x86, 0xfd, 0x39, 0xa2, 0x10, 0x12, 0x9a, 0x66, 0x54,
	0x99, 0xb5, 0x0a, 0xdd, 0xcb, 0x68, 0x22, 0xa1, 0x02, 0xe1, 0xbd, 0x0a, 0xad, 0x43, 0x34, 0x55,
	0x43, 0x82, 0x57, 0x2c, 0x30, 0x5a, 0xad, 0x3f, 0x47, 0x34, 0xcc, 0x7b, 0x19, 0x16, 0x78, 0x18,
	0xa7, 0x39, 0x95, 0xb6, 0xed, 0x6c, 0x78, 0xd6, 0x82, 0xfb, 0x62, 0xa6, 0x3f, 0x47, 0x10, 0xe3,
	0x7d, 0x19, 0x9a, 0x52, 0x79, 0x69, 0xe9, 0x2a, 0xf8, 0x91, 0x98, 0x11, 0xb2, 0x48, 0x88, 0xd7,
	0x83, 0x06, 0x9f, 0xae, 0x81, 0x3c, 0xcc, 0x06, 0x9f, 0x6e, 0xb7, 0xa0, 0x79, 0x22, 0xac, 0xea,
	0x8f, 0xa1, 0x63, 0x2c, 0xf0, 0x3c, 0x98, 0x3f, 0x88, 0x78, 0x2e, 0xb5, 0x5b, 0x22, 0xf2, 0x5b,
	0x38, 0x03, 0xa3, 0xa7, 0x01, 0x1b, 0x4a, 0x35, 0x5c, 0x82, 0x23, 0xcb, 0x81, 0xdc, 0x59, 0x07,
	0x1a, 0xa7, 0xc3, 0x68, 0x34, 0x95, 0xc2, 0x75, 0x09, 0x8e, 0xfc, 0x8f, 0x01, 0x4a, 0xab, 0xce,
	0x1c, 0xa9, 0x73, 0x91, 0x23, 0x6d, 0xd4, 0x1d, 0x69, 0xac, 0xf9, 0x8a, 0x23, 0xb8, 0x10, 0xdf,
	0x15, 0x68, 0x86, 0xe9, 0x24, 0xe1, 0xe8, 0xe1, 0x6a, 0x30, 0xbb, 0x9b, 0x5b, 0xb7, 0x5b, 0x0a,
	0x4b, 0xd6, 0x19, 0x5e, 0x9d, 0x22, 0xa5, 0x58, 0xae, 0x21, 0x96, 0xff, 0xa2, 0x3e, 0x25, 0xe9,
	0x03, 0x95, 0xab, 0xeb, 0x9a, 0x96, 0xf7, 0xdf, 0xd2, 0x96, 0xf8, 0x20, 0xca, 0xb9, 0x38, 0xcf,
	0x60, 0x38, 0x64, 0x28, 0x90, 0xfc, 0x36, 0x2e, 0xb7, 0x6b, 0x5e, 0x6e, 0xff, 0x25, 0xbd, 0xc9,
	0x4e, 0x32, 0x4a, 0xe5, 0x5d, 0xd7, 0x4c, 0x73, 0xdc, 0xa5, 0x24, 0xf8, 0x6f, 0xc3, 0x32, 0xa1,
	0x59, 0x3c, 0x35, 0xf6, 0x7a, 0x01, 0x5a, 0x6a, 0x5e, 0xc1, 0x3b, 0x1b, 0x4b, 0x96, 0x47, 0x12,
	0x3d, 0xeb, 0x7f, 0x0b, 0x3c, 0xb9, 0xf6, 0x93, 0x20, 0x8e, 0x29, 0x57, 0xb3, 0xf9, 0x85, 0x97,
	0x0b, 0xed, 0x33, 0x16, 0x9d, 0x1c, 0xd3, 0xa9, 0xb0, 0xa1, 0x7b, 0xb7, 0x4b, 0x8a, 0xb1, 0x7f,
	0x0a, 0x4b, 0x84, 0x86, 0x34, 0xca, 0xf8, 0xe7, 0x88, 0x72, 0xcf, 0x01, 0x64, 0x8c, 0x9e, 0x7c,
	0x68, 0x1a, 0xc9, 0xa0, 0x14, 0x46, 0x9d, 0x2f, 0x8d, 0xea, 0xff, 0xdc, 0x81, 0xeb, 0xd6, 0xce,
	0xd2, 0xc1, 0xef, 0xc2, 0x72, 0x1a, 0x0f, 0x1f, 0xcd, 0xba, 0x46, 0x95, 0x2c, 0x90, 0x09, 0x3d,
	0xb5, 0x90, 0xca, 0x3f, 0xaa, 0xe4, 0x0b, 0xba, 0xe8, 0x6f, 0x1d, 0x80, 0x07, 0x67, 0x34, 0x1c,
	0x9c, 0xc9, 0xb3, 0xb9, 0x05, 0x6d, 0xa1, 0x1c, 0xed, 0x07, 0xf9, 0x91, 0x14, 0xa1, 0x4b, 0x4a,
	0x82, 0xb7, 0x0e, 0x2e, 0x3f, 0x53, 0xc6, 0x34, 0xe2, 0x48, 0x99, 0x6f, 0x88, 0x98, 0x16, 0x3c,
	0x0e, 0xe2, 0x34, 0x3c, 0x96, 0xe1, 0xdb, 0x55, 0xe1, 0xbb, 0x20, 0x08, 0x63, 0x1e, 0xd1, 0xe8,
	0xf0, 0x88, 0x63, 0xe0, 0xc7, 0x91, 0x30, 0xe6, 0x30, 0x1a, 0x8d, 0xa2, 0x70, 0x12, 0xf3, 0xa9,
	0x0c, 0xb0, 0xf3, 0xc4, 0xa0, 0xf8, 0x1f, 0x41, 0xf3, 0x1b, 0x13, 0xca, 0xa6, 0x82, 0x81, 0xc8,
	0x7c, 0x94, 0xa1, 0x7c, 0x38, 0x12, 0x27, 0x38, 0x9a, 0x24, 0xe1, 0xe3, 0x60, 0x4c, 0xd1, 0x24,
	0xc5, 0xd8, 0x5b, 0x83, 0x56, 0x16, 0x4c, 0xe3, 0x34, 0x50, 0x11, 0xa8, 0x4b, 0xf4, 0xd0, 0x1f,
	0xc1, 0xfc, 0xe3, 0x94, 0x8d, 0x05, 0xd7, 0x24, 0x65, 0x63, 0x3c, 0xfd, 0x2e, 0xc1, 0x51, 0x25,
	0x57, 0x35, 0x66, 0x72, 0xd5, 0x35, 0x70, 0x8f, 0xe9, 0x14, 0x6d, 0x2b, 0x3e, 0xc5, 0xcd, 0x94,
	0x21, 0x13, 0x23, 0x1a, 0xc6, 0xcf, 0x5d, 0x00, 0xb1, 0x0f, 0x26, 0x92, 0x75, 0x98, 0x4f, 0xb2,
	0x09, 0xc7, 0xe4, 0xd0, 0x43, 0x4b, 0x0a, 0xc0, 0xfe, 0x84, 0xf7, 0xe7, 0x88, 0x9c, 0xc5, 0x60,
	0xdc, 0x9c, 0x0d, 0xc6, 0xaf, 0x41, 0x0b, 0xb1, 0x7a, 0x7f, 0xa7, 0x66, 0xff, 0x86, 0xb9, 0xff,
	0xef, 0x1c, 0xe8, 0x12, 0xca, 0x59, 0x44, 0x4f, 0xe8, 0x7e, 0xc0, 0x02, 0xef, 0x79, 0xe8, 0x0d,
	0xe9, 0x28, 0x98, 0xc4, 0xdc, 0xf6, 0xb8, 0x0a, 0xf5, 0xdf, 0x39, 0xbf, 0x61, 0x18, 0x77, 0xc6,
	0x30, 0xb7, 0xa1, 0x93, 0x31, 0x9a, 0x05, 0xcc, 0xcc, 0xf2, 0x26, 0x49, 0x20, 0x86, 0x34, 0x0e,
	0xa6, 0xfb, 0x94, 0x45, 0xe9, 0x10, 0x13, 0xbd, 0x49, 0xf2, 0x3f, 0x83, 0x45, 0x2d, 0xb3, 0x70,
	0xe7, 0x83, 0x20, 0x3c, 0x9e, 0x64, 0xb6, 0xb8, 0x36, 0xd1, 0xfb, 0x0a, 0xb4, 0x18, 0xe5, 0x42,
	0x41, 0xf4, 0xd2, 0x67, 0xd0, 0xb6, 0xa6, 0xee, 0x44, 0x63, 0xfc, 0x7f, 0x38, 0xd0, 0xd3, 0x33,
	0x78, 0x34, 0x2f, 0xc3, 0x42, 0xc6, 0x28, 0xa1, 0xfa, 0x70, 0xb4, 0x9b, 0xef, 0x4b, 0xa2, 0x44,
	0x8a, 0xdc, 0xaa, 0x30, 0xde, 0x06, 0xb4, 0x32, 0xca, 0x46, 0x02, 0xae, 0x72, 0xf7, 0xaa, 0x86,
	0x53, 0x36, 0x4a, 0xd9, 0xd8, 0x58, 0xa2, 0x81, 0xde, 0x2b, 0xb0, 0xa0, 0x84, 0xc6, 0xec, 0x7d,
	0x03, 0x97, 0x6c, 0x4b, 0xa2, 0xb9, 0x89, 0x82, 0x89, 0x05, 0x61, 0x90, 0x84, 0x34, 0xc6, 0x0c,
	0xae, 0x17, 0xdc, 0x97, 0x44, 0x73, 0x81, 0x82, 0x9d, 0xef, 0x38, 0x3f, 0x70, 0xa0, 0x67, 0x6f,
	0x73, 0x41, 0xbb, 0xce, 0x7a, 0x4b, 0xa3, 0xd6, 0x5b, 0x2a, 0x67, 0xea, 0xce, 0x9e, 0xe9, 0xb7,
	0xa1, 0x63, 0x98, 0xf2, 0x6a, 0xb7, 0xf7, 0x3f, 0x83, 0xe5, 0x8a, 0xe1, 0xaf, 0x78, 0x83, 0xef,
	0x41, 0xcf, 0xb6, 0xfa, 0xd5, 0x2b, 0x40, 0xe8, 0x13, 0xcd, 0x5c, 0x24, 0xd8, 0x2b, 0xde, 0xe0,
	0x6f, 0x8e, 0xc8, 0x7c, 0x8a, 0xbd, 0x8a, 0xa7, 0xff, 0x63, 0x07, 0xb8, 0x40, 0x60, 0x78, 0x0e,
	0x80, 0xd1, 0x71, 0x10, 0x25, 0x46, 0x03, 0x60, 0x50, 0x8c, 0x90, 0xb4, 0x60, 0x15, 0x26, 0x7f,
	0x77, 0xa1, 0x33, 0x48, 0x8f, 0x69, 0x82, 0x57, 0xf9, 0x5d, 0xe8, 0x71, 0x31, 0xcc, 0x18, 0x55,
	0x81, 0x09, 0xaf, 0xb4, 0xbe, 0x3f, 0x12, 0xbb, 0xcf, 0xe8, 0x7d, 0x39, 0xd9, 0x9f, 0x23, 0x15,
	0xb8, 0xd7, 0x87, 0xeb, 0x92, 0x32, 0x8a, 0x92, 0x28, 0x3f, 0x42, 0x1e, 0xea, 0x9e, 0xaf, 0x99,
	0x3c, 0xde, 0x97, 0xf3, 0x05, 0x9b, 0xd9, 0x45, 0x05, 0x27, 0x46, 0x4f, 0xd2, 0x63, 0x2d, 0x8d,
	0x3b, 0xcb, 0x89, 0xc8, 0xf9, 0x0a, 0x27, 0x73, 0x91, 0xb7, 0x09, 0x8b, 0xb2, 0xc3, 0x1b, 0x15,
	0x05, 0xbd, 0x56, 0x67, 0x2b, 0xcf, 0x29, 0xcf, 0x07, 0x38, 0xd9, 0x9f, 0x23, 0x05, 0x50, 0x2c,
	0x3a, 0x8d, 0xf8, 0xd1, 0x90, 0x05, 0xa7, 0xd8, 0xbb, 0xd8, 0x8b, 0x3e, 0xc1, 0x49, 0xb1, 0x48,
	0x03, 0xcd, 0xbe, 0x64, 0xc1, 0xea, 0x4b, 0xd4, 0x9a, 0x9a, 0xbe, 0xe4, 0x01, 0xf4, 0xf4, 0x96,
	0x83, 0x54, 0x54, 0x15, 0xb2, 0x3d, 0xeb, 0x6c, 0x3c, 0x5b, 0x2b, 0xa1, 0x82, 0x48, 0xb3, 0x5b,
	0x14, 0x11, 0xbe, 0x06, 0x53, 0xd9, 0x92, 0x35, 0x49, 0x63, 0x60, 0x84, 0xaf, 0xdf, 0x38, 0xd0,
	0xb3, 0x0f, 0x4d, 0xd4, 0x58, 0x89, 0xc8, 0xf8, 0x58, 0xb8, 0x8a, 0x6f, 0xe9, 0x1f, 0xd3, 0xf1,
	0x41, 0x1a, 0xa3, 0x8f, 0xe2, 0x48, 0x54, 0xdf, 0x51, 0xc2, 0x59, 0x3a, 0x9c, 0x48, 0xff, 0xc0,
	0xa4, 0x6d, 0xd1, 0x44, 0xf6, 0xe4, 0x29, 0x0f, 0x62, 0xf4, 0x4b, 0x35, 0x10, 0xd4, 0x8c, 0x45,
	0xa1, 0x76, 0x46, 0x35, 0x10, 0xd4, 0xf4, 0x54, 0x34, 0x56, 0xaa, 0xc5, 0x54, 0x03, 0x7f, 0x0b,
	0xae, 0xcf, 0x38, 0x85, 0x21, 0x92, 0x63, 0x89, 0x54, 0xb0, 0x68, 0xd4, 0xb1, 0x30, 0xbd, 0xe1,
	0x92, 0x2c, 0xfe, 0xea, 0x40, 0x53, 0xf2, 0xf8, 0xff, 0xb3, 0x90, 0xa8, 0xc6, 0xa4, 0x33, 0xa7,
	0x0c, 0xfb, 0x6e, 0x3d, 0x34, 0x6e, 0xf6, 0xa2, 0x75, 0xb3, 0x4f, 0xa1, 0x4d, 0xe8, 0x13, 0xa9,
	0x8f, 0xac, 0xeb, 0x9f, 0x88, 0xc8, 0xb5, 0x15, 0xc7, 0xf8, 0x68, 0x51, 0x8c, 0xcf, 0xad, 0x56,
	0x56, 0x61, 0x41, 0x5e, 0x25, 0x51, 0x05, 0x8b, 0x0e, 0x05, 0x47, 0x22, 0xd4, 0x28, 0xd5, 0xf7,
	0x92, 0x58, 0xf5, 0xa0, 0x8b, 0xc4, 0xa0, 0xf8, 0x9b, 0xd0, 0x51, 0xed, 0x8b, 0x82, 0xaf, 0x17,
	0x6c, 0x54, 0xeb, 0xd1, 0xb5, 0xee, 0x2e, 0xce, 0xf9, 0x03, 0x51, 0x6a, 0xa9, 0x12, 0x5f, 0x9e,
	0xc0, 0xa5, 0x4e, 0xee, 0xdc, 0xb6, 0xeb, 0x0d, 0x68, 0xa3, 0x53, 0x84, 0x27, 0xea, 0x10, 0x8e,
	0xf1, 0x79, 0xa1, 0x4d, 0xd4, 0x40, 0x1c, 0x35, 0xa3, 0xe1, 0x09, 0x96, 0xa9, 0xf2, 0xdb, 0xff,
	0x3a, 0xac, 0x4a, 0x0d, 0x44, 0x80, 0x16, 0x4b, 0xdf, 0x4f, 0x19, 0x2a, 0xf3, 0x2a, 0x00, 0xd7,
	0x0c, 0xb5, 0x42, 0xd7, 0xec, 0x60, 0x14, 0x9e, 0x10, 0x03, 0xe3, 0xdf, 0x81, 0xce, 0x16, 0x63,
	0xc1, 0xf4, 0x7e, 0x9a, 0x8c, 0xa2, 0xc3, 0xb2, 0xd2, 0x54, 0x36, 0xc5, 0x4b, 0xba, 0x0e, 0xdd,
	0x0f, 0x39, 0x8b, 0x92, 0xc3, 0x59, 0x94, 0x53, 0xa2, 0xee, 0x40, 0x67, 0x27, 0xe1, 0x9b, 0x1b,
	0x75, 0xa0, 0xa6, 0x06, 0xfd, 0xc9, 0x01, 0x50, 0x80, 0x1d, 0x4e, 0xc7, 0x35, 0xb5, 0xae, 0xee,
	0xb0, 0x1a, 0x46, 0xdb, 0xfa, 0x3c, 0xb8, 0x01, 0x63, 0x95, 0x97, 0x11, 0x43, 0xec, 0xfe, 0x1c,
	0x11, 0x00, 0xef, 0x05, 0x70, 0x73, 0xae, 0x63, 0xa8, 0x2e, 0x13, 0x4d, 0xc9, 0x05, 0x30, 0xe7,
	0x92, 0x61, 0x94, 0x70, 0x8c, 0x9b, 0x9a, 0xa1, 0x21, 0xbc, 0xc0, 0x45, 0x09, 0xc7, 0xb0, 0xd5,
	0x99, 0x0d, 0x5b, 0x9f, 0x42, 0xf7, 0x91, 0x7c, 0xd6, 0x40, 0x65, 0x9f, 0x52, 0xb3, 0x6b, 0x1b,
	0x09, 0x86, 0x69, 0x86, 0x66, 0x6b, 0xa4, 0x59, 0x6d, 0x3f, 0x19, 0x16, 0x8d, 0x2c, 0x32, 0xff,
	0x12, 0xcc, 0x8b, 0x16, 0xb4, 0xf2, 0xee, 0x54, 0x5a, 0x91, 0xc8, 0x69, 0xef, 0x25, 0x68, 0x85,
	0x13, 0xc6, 0x68, 0xa2, 0x0b, 0xd7, 0x1a, 0xa4, 0x46, 0xf8, 0x6f, 0xe0, 0x2d, 0xb8, 0x9c, 0xfc,
	0xfe, 0x1f, 0x1d, 0xb8, 0xd6, 0x8f, 0x72, 0x9e, 0xb2, 0xe9, 0x7d, 0xca, 0xf8, 0x87, 0x3c, 0x65,
	0xf2, 0x71, 0x8f, 0xa5, 0x29, 0x0f, 0x29, 0xc3, 0x06, 0xbe, 0x4b, 0x4a, 0x82, 0xf7, 0x32, 0x5c,
	0x8f, 0x12, 0x4e, 0xd9, 0x98, 0x0e, 0xa3, 0x80, 0xd3, 0xfb, 0x12, 0xa5, 0x9a, 0xf7, 0xd9, 0x09,
	0x51, 0x94, 0x88, 0xdc, 0x18, 0x06, 0x22, 0x30, 0x89, 0xfe, 0x55, 0x7a, 0x62, 0x97, 0x54, 0xa8,
	0x62, 0xcf, 0x70, 0xc2, 0xfa, 0x34, 0x3a, 0xe4, 0x47, 0x18, 0xb6, 0x4a, 0x82, 0x98, 0x4d, 0xce,
	0x78, 0x5f, 0x35, 0xa5, 0xf8, 0xdc, 0x58, 0x10, 0xfc, 0x7f, 0x3a, 0xb0, 0xb4, 0xcf, 0xa2, 0x93,
	0x20, 0x9c, 0x96, 0x65, 0x45, 0x36, 0x39, 0x88, 0xa3, 0x70, 0x23, 0x53, 0xf4, 0x4a, 0x59, 0xb1,
	0xaf, 0x26, 0x71, 0x91, 0xc8, 0x6f, 0x36, 0xdc, 0xdb, 0x86, 0x65, 0xfc, 0x2c, 0x38, 0x54, 0x9a,
	0x07, 0x9c, 0x2d, 0x59, 0x54, 0x17, 0x48, 0x21, 0x34, 0x49, 0x72, 0xaf, 0x34, 0x13, 0x05, 0x0b,
	0x39, 0x29, 0x85, 0xb0, 0xe0, 0xd8, 0x23, 0xcc, 0xcf, 0xf6, 0x08, 0x3f, 0x76, 0xa0, 0x67, 0xab,
	0x20, 0x9f, 0x78, 0x44, 0x14, 0x30, 0xf2, 0x48, 0x49, 0x10, 0x01, 0x2b, 0x18, 0x17, 0x4f, 0x64,
	0x2e, 0xc1, 0x91, 0x4c, 0x3c, 0x29, 0x57, 0x19, 0x41, 0x24, 0x9e, 0x94, 0x53, 0xd1, 0x5d, 0xa5,
	0x13, 0x2e, 0x5a, 0xdf, 0x96, 0x55, 0x52, 0xe0, 0x4e, 0x7b, 0x72, 0x8e, 0x20, 0xc6, 0xff, 0x83,
	0x03, 0xcb, 0x15, 0x5b, 0x5c, 0xa1, 0x2c, 0x2f, 0x42, 0x33, 0x92, 0x5d, 0xf8, 0x82, 0x15, 0x02,
	0x70, 0xa3, 0x1d, 0x31, 0x45, 0x14, 0xe2, 0x92, 0x62, 0xff, 0x5e, 0x58, 0xd0, 0xb2, 0xff, 0xe7,
	0x94, 0xda, 0xad, 0x93, 0x7a, 0xfe, 0x12, 0x52, 0x37, 0x2f, 0x20, 0xf5, 0x03, 0x58, 0xfe, 0x68,
	0xf0, 0xcd, 0xbd, 0x87, 0x71, 0x7a, 0x10, 0xc4, 0x3b, 0xc9, 0x90, 0x9e, 0xc9, 0xac, 0x79, 0x76,
	0x14, 0xe4, 0x47, 0xf8, 0x6a, 0x82, 0x23, 0x91, 0x81, 0xd3, 0x09, 0x8f, 0x04, 0x06, 0x3d, 0xa8,
	0x18, 0x8b, 0x16, 0x73, 0x71, 0x97, 0x2a, 0x41, 0x0c, 0xc5, 0x1c, 0x4b, 0xb1, 0xaf, 0xc1, 0xf2,
	0x84, 0x9f, 0xa5, 0xc6, 0x5e, 0xd8, 0xae, 0xeb, 0x1b, 0x50, 0x91, 0x84, 0x54, 0xe1, 0x42, 0x84,
	0x63, 0x3a, 0xdd, 0x19, 0x07, 0x87, 0x14, 0x85, 0x2b, 0xc6, 0xfe, 0x57, 0xa1, 0x6b, 0x9a, 0xc3,
	0x7b, 0x49, 0x62, 0x23, 0x7c, 0x71, 0x11, 0xdb, 0x2c, 0xe3, 0x36, 0x5a, 0x50, 0x52, 0x00, 0xfc,
	0x1d, 0x68, 0x1f, 0x53, 0xb4, 0xcd, 0xb9, 0xf2, 0xaf, 0xc3, 0x52, 0x9a, 0x50, 0x1e, 0x8d, 0x69,
	0x36, 0x39, 0x10, 0xb1, 0x50, 0xbd, 0xb5, 0xd8, 0x44, 0xff, 0xbb, 0x45, 0xe4, 0x40, 0x76, 0xb7,
	0xa0, 0x4d, 0xb2, 0xc9, 0xc1, 0x2e, 0x9d, 0xf2, 0x33, 0xfd, 0xba, 0x56, 0x10, 0xbc, 0x7b, 0x72,
	0x67, 0x3c, 0xb1, 0x86, 0x95, 0x8e, 0x0b, 0x89, 0x48, 0x09, 0xf1, 0x33, 0x58, 0x79, 0xc8, 0xd2,
	0x49, 0x56, 0x73, 0x6a, 0xff, 0x1d, 0xa3, 0xfb, 0xbf, 0x76, 0x60, 0xe9, 0x83, 0x34, 0x0c, 0x62,
	0x81, 0x94, 0x29, 0xb9, 0x7c, 0xcd, 0x73, 0xac, 0xd7, 0xbc, 0x35, 0x68, 0xf1, 0xb3, 0x08, 0xf7,
	0x10, 0x0e, 0xa2, 0x87, 0x96, 0xef, 0xb8, 0xb6, 0xef, 0x18, 0xfe, 0x36, 0x6f, 0xf9, 0xdb, 0x8c,
	0xb9, 0x9b, 0x75, 0xe6, 0xfe, 0x3e, 0xf4, 0x08, 0x7d, 0x22, 0x44, 0xdb, 0x97, 0x26, 0xcd, 0x8b,
	0x5b, 0xf7, 0xb8, 0x7a, 0xeb, 0xe4, 0xa3, 0xe0, 0x1e, 0xac, 0x1c, 0xd6, 0xd8, 0x0f, 0x8d, 0xa2,
	0x7b, 0x96, 0x3a, 0x13, 0x93, 0xda, 0x85, 0xfe, 0x1d, 0x58, 0x52, 0xd7, 0x7d, 0x97, 0x4e, 0xdf,
	0x0b, 0x78, 0x20, 0xee, 0xef, 0x30, 0xe0, 0x01, 0xa6, 0x39, 0xf9, 0xed, 0x6f, 0xc1, 0x72, 0xc1,
	0x52, 0xc9, 0x79, 0xee, 0x81, 0xad, 0xc2, 0x42, 0xe1, 0x5e, 0x82, 0x01, 0x8e, 0xfc, 0x81, 0x50,
	0x34, 0x37, 0x15, 0xdd, 0x86, 0x6b, 0x87, 0x36, 0x53, 0x5d, 0xd0, 0xad, 0x56, 0xd5, 0x50, 0xd3,
	0x64, 0x06, 0xef, 0xbf, 0x2b, 0x9f, 0x1e, 0xd0, 0x61, 0x55, 0xe1, 0x5a, 0x5f, 0x65, 0x9e, 0x13,
	0xad, 0xfc, 0x77, 0xa0, 0xbb, 0x25, 0xbf, 0xde, 0xa3, 0x3c, 0x88, 0xe2, 0x73, 0xd5, 0xb2, 0x7e,
	0x51, 0x71, 0xf5, 0x4f, 0x17, 0x8f, 0xe1, 0x19, 0x59, 0x63, 0xe8, 0x5c, 0x2b, 0xb1, 0xb9, 0xf7,
	0x26, 0x74, 0x03, 0x83, 0x29, 0x6a, 0xa5, 0xa3, 0x9e, 0xb9, 0x1f, 0xb1, 0x80, 0x3e, 0x01, 0x8f,
	0x09, 0x7e, 0x42, 0xc5, 0x7c, 0x6f, 0xa4, 0x90, 0xde, 0x3b, 0xd0, 0x8b, 0x4d, 0x07, 0xd6, 0x66,
	0xd2, 0xa1, 0xd1, 0xf2, 0x6e, 0x52, 0xc1, 0xfa, 0xdf, 0x81, 0x15, 0x2c, 0xb6, 0xec, 0x7b, 0x5d,
	0x6f, 0xa7, 0xcb, 0xde, 0xe7, 0x5f, 0x38, 0xb0, 0x84, 0x6a, 0xef, 0x8d, 0xc4, 0xa6, 0xde, 0x16,
	0xb4, 0x95, 0x4e, 0x8f, 0x82, 0x0c, 0x05, 0xbd, 0x63, 0x69, 0x8e, 0x40, 0x1c, 0x3d, 0x0a, 0xb2,
	0x07, 0x09, 0x67, 0x53, 0x52, 0xae, 0xba, 0xf9, 0x0e, 0xf4, 0xec, 0x49, 0xb3, 0x7a, 0x73, 0x6b,
	0xaa, 0x37, 0x17, 0xab, 0xb7, 0xb7, 0x1b, 0x6f, 0x39, 0xfe, 0xaf, 0x1c, 0xb8, 0x36, 0xd0, 0x17,
	0x46, 0x4b, 0xf5, 0x1e, 0xde, 0xaa, 0xbc, 0x94, 0xea, 0x79, 0xb3, 0x6d, 0x30, 0xb0, 0x8a, 0x90,
	0x97, 0x82, 0x15, 0x0b, 0x85, 0x60, 0xf6, 0xe4, 0x45, 0xcb, 0x4a, 0x29, 0xd8, 0x2e, 0xdc, 0xa8,
	0xdc, 0xbe, 0xd7, 0xf7, 0x59, 0xa4, 0xee, 0x0c, 0x86, 0x10, 0xec, 0xb5, 0x6a, 0x52, 0x56, 0xa3,
	0x92, 0xb2, 0x7e, 0xe6, 0x40, 0x4f, 0x67, 0x82, 0x92, 0x4d, 0xad, 0xef, 0xbe, 0x7f, 0x5e, 0x0c,
	0xbd, 0x55, 0x1f, 0x43, 0x15, 0xbb, 0xa7, 0xa7, 0xaf, 0xb6, 0x91, 0xbe, 0xf6, 0x60, 0xb9, 0xf0,
	0x8f, 0xa7, 0x88, 0x53, 0x9b, 0x87, 0xda, 0xd5, 0xc0, 0xf8, 0x10, 0x3c, 0x33, 0x1f, 0x22, 0xcf,
	0xd7, 0x66, 0xb2, 0xe2, 0x8d, 0x4a, 0x56, 0x44, 0xe1, 0xcb, 0xdc, 0x18, 0xc1, 0x33, 0x96, 0xe3,
	0x23, 0xa7, 0x99, 0xb4, 0xd6, 0x36, 0xd3, 0xda, 0xeb, 0xb3, 0xd7, 0x60, 0xb5, 0x7a, 0x0d, 0x70,
	0x27, 0xe3, 0x32, 0xfc, 0xd2, 0x81, 0x15, 0xbb, 0x0a, 0x2d, 0x37, 0xbb, 0xa2, 0xfa, 0x6f, 0xa3,
	0x52, 0xd4, 0xdd, 0xac, 0x2b, 0x8f, 0x50, 0x32, 0x5d, 0x24, 0xfd, 0xc5, 0x81, 0x1b, 0x95, 0x8a,
	0xf4, 0xca, 0xe5, 0x7a, 0xc5, 0xae, 0x4b, 0xbf, 0x50, 0x53, 0xe1, 0xa1, 0x54, 0x58, 0xe7, 0xfd,
	0x27, 0x8a, 0xfc, 0x59, 0xd8, 0xd7, 0xaa, 0x51, 0xaf, 0x44, 0x0f, 0xb7, 0x4e, 0x8f, 0xf9, 0x4b,
	0xeb, 0xd1, 0xbc, 0xb0, 0x1e, 0x3f, 0x6a, 0x14, 0x3e, 0xa9, 0xda, 0x33, 0x54, 0xe3, 0xc1, 0x39,
	0x4d, 0xda, 0xb3, 0xb5, 0x4d, 0x9a, 0x5a, 0x54, 0xd3, 0xaa, 0xf5, 0xcf, 0x6b, 0xd5, 0x6e, 0xd5,
	0xb7, 0x6a, 0x05, 0xa3, 0x99, 0x86, 0xed, 0xc1, 0x39, 0x0d, 0xdb, 0xb3, 0xb5, 0x0d, 0x9b, 0x21,
	0xd0, 0x05, 0xdb, 0xb6, 0x37, 0xa1, 0xf5, 0x71, 0x10, 0x3f, 0x4e, 0x87, 0x14, 0xeb, 0x86, 0x5d,
	0x8c, 0xa5, 0xaa, 0x6e, 0xd8, 0x55, 0xe1, 0x34, 0x4b, 0x4f, 0xf1, 0xbd, 0xc9, 0x25, 0x6a, 0xe0,
	0xbf, 0x0a, 0x8b, 0xb8, 0x30, 0xf7, 0xd6, 0xa1, 0x99, 0x88, 0x0f, 0x0c, 0x08, 0xfa, 0x87, 0x49,
	0x9c, 0x27, 0x6a, 0xd2, 0xff, 0xa9, 0x03, 0x4b, 0x48, 0x32, 0x7e, 0xcf, 0x4c, 0x87, 0xb4, 0xf2,
	0x7b, 0x26, 0x62, 0xe4, 0xef, 0x99, 0x42, 0xae, 0xb7, 0xf1, 0x87, 0xe1, 0x9d, 0x64, 0x94, 0xa2,
	0x19, 0xf5, 0x11, 0x0f, 0x8a, 0xff, 0x50, 0xda, 0xd6, 0x88, 0xfe, 0x1c, 0x29, 0xe1, 0xf8, 0xb8,
	0xe2, 0xce, 0x3c, 0xae, 0x6c, 0xaf, 0x7f, 0xea, 0x1f, 0x46, 0x3c, 0x0e, 0x0e, 0xee, 0x6d, 0x6e,
	0xde, 0x0b, 0x93, 0x57, 0xc2, 0xa3, 0x20, 0x4a, 0x36, 0x37, 0x8b, 0xbf, 0x92, 0xff, 0xc1, 0x82,
	0xfc, 0xbf, 0xa7, 0xcd, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xc4, 0xc8, 0xf2, 0x35, 0x25,
	0x00, 0x00,
}
