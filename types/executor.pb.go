// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Genesis struct {
	Isrun bool `protobuf:"varint,1,opt,name=isrun" json:"isrun,omitempty"`
}

func (m *Genesis) Reset()                    { *m = Genesis{} }
func (m *Genesis) String() string            { return proto.CompactTextString(m) }
func (*Genesis) ProtoMessage()               {}
func (*Genesis) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Genesis) GetIsrun() bool {
	if m != nil {
		return m.Isrun
	}
	return false
}

// message for execs.coins
type CoinsAction struct {
	// Types that are valid to be assigned to Value:
	//	*CoinsAction_Transfer
	//	*CoinsAction_Withdraw
	//	*CoinsAction_Genesis
	Value isCoinsAction_Value `protobuf_oneof:"value"`
	Ty    int32               `protobuf:"varint,3,opt,name=ty" json:"ty,omitempty"`
}

func (m *CoinsAction) Reset()                    { *m = CoinsAction{} }
func (m *CoinsAction) String() string            { return proto.CompactTextString(m) }
func (*CoinsAction) ProtoMessage()               {}
func (*CoinsAction) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

type isCoinsAction_Value interface {
	isCoinsAction_Value()
}

type CoinsAction_Transfer struct {
	Transfer *CoinsTransfer `protobuf:"bytes,1,opt,name=transfer,oneof"`
}
type CoinsAction_Withdraw struct {
	Withdraw *CoinsWithdraw `protobuf:"bytes,4,opt,name=withdraw,oneof"`
}
type CoinsAction_Genesis struct {
	Genesis *CoinsGenesis `protobuf:"bytes,2,opt,name=genesis,oneof"`
}

func (*CoinsAction_Transfer) isCoinsAction_Value() {}
func (*CoinsAction_Withdraw) isCoinsAction_Value() {}
func (*CoinsAction_Genesis) isCoinsAction_Value()  {}

func (m *CoinsAction) GetValue() isCoinsAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CoinsAction) GetTransfer() *CoinsTransfer {
	if x, ok := m.GetValue().(*CoinsAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *CoinsAction) GetWithdraw() *CoinsWithdraw {
	if x, ok := m.GetValue().(*CoinsAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *CoinsAction) GetGenesis() *CoinsGenesis {
	if x, ok := m.GetValue().(*CoinsAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *CoinsAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CoinsAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CoinsAction_OneofMarshaler, _CoinsAction_OneofUnmarshaler, _CoinsAction_OneofSizer, []interface{}{
		(*CoinsAction_Transfer)(nil),
		(*CoinsAction_Withdraw)(nil),
		(*CoinsAction_Genesis)(nil),
	}
}

func _CoinsAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CoinsAction)
	// value
	switch x := m.Value.(type) {
	case *CoinsAction_Transfer:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *CoinsAction_Withdraw:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *CoinsAction_Genesis:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CoinsAction.Value has unexpected type %T", x)
	}
	return nil
}

func _CoinsAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CoinsAction)
	switch tag {
	case 1: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &CoinsAction_Transfer{msg}
		return true, err
	case 4: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &CoinsAction_Withdraw{msg}
		return true, err
	case 2: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &CoinsAction_Genesis{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CoinsAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CoinsAction)
	// value
	switch x := m.Value.(type) {
	case *CoinsAction_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CoinsAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CoinsAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 给某个地址凭空打币
// 只能执行一次，不能执行第二次
type CoinsGenesis struct {
	Amount        int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	ReturnAddress string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *CoinsGenesis) Reset()                    { *m = CoinsGenesis{} }
func (m *CoinsGenesis) String() string            { return proto.CompactTextString(m) }
func (*CoinsGenesis) ProtoMessage()               {}
func (*CoinsGenesis) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *CoinsGenesis) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CoinsGenesis) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type CoinsTransfer struct {
	Cointoken string `protobuf:"bytes,1,opt,name=cointoken" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
}

func (m *CoinsTransfer) Reset()                    { *m = CoinsTransfer{} }
func (m *CoinsTransfer) String() string            { return proto.CompactTextString(m) }
func (*CoinsTransfer) ProtoMessage()               {}
func (*CoinsTransfer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *CoinsTransfer) GetCointoken() string {
	if m != nil {
		return m.Cointoken
	}
	return ""
}

func (m *CoinsTransfer) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CoinsTransfer) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type CoinsWithdraw struct {
	Cointoken string `protobuf:"bytes,1,opt,name=cointoken" json:"cointoken,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
}

func (m *CoinsWithdraw) Reset()                    { *m = CoinsWithdraw{} }
func (m *CoinsWithdraw) String() string            { return proto.CompactTextString(m) }
func (*CoinsWithdraw) ProtoMessage()               {}
func (*CoinsWithdraw) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *CoinsWithdraw) GetCointoken() string {
	if m != nil {
		return m.Cointoken
	}
	return ""
}

func (m *CoinsWithdraw) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CoinsWithdraw) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type Hashlock struct {
	HashlockId    []byte `protobuf:"bytes,1,opt,name=hashlockId,proto3" json:"hashlockId,omitempty"`
	Status        int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	CreateTime    int64  `protobuf:"varint,3,opt,name=CreateTime" json:"CreateTime,omitempty"`
	ToAddress     string `protobuf:"bytes,4,opt,name=toAddress" json:"toAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,5,opt,name=returnAddress" json:"returnAddress,omitempty"`
	Amount        int64  `protobuf:"varint,6,opt,name=amount" json:"amount,omitempty"`
	Frozentime    int64  `protobuf:"varint,7,opt,name=frozentime" json:"frozentime,omitempty"`
}

func (m *Hashlock) Reset()                    { *m = Hashlock{} }
func (m *Hashlock) String() string            { return proto.CompactTextString(m) }
func (*Hashlock) ProtoMessage()               {}
func (*Hashlock) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *Hashlock) GetHashlockId() []byte {
	if m != nil {
		return m.HashlockId
	}
	return nil
}

func (m *Hashlock) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Hashlock) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Hashlock) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *Hashlock) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

func (m *Hashlock) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Hashlock) GetFrozentime() int64 {
	if m != nil {
		return m.Frozentime
	}
	return 0
}

// message for hashlock
type HashlockAction struct {
	// Types that are valid to be assigned to Value:
	//	*HashlockAction_Hlock
	//	*HashlockAction_Hsend
	//	*HashlockAction_Hunlock
	Value isHashlockAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *HashlockAction) Reset()                    { *m = HashlockAction{} }
func (m *HashlockAction) String() string            { return proto.CompactTextString(m) }
func (*HashlockAction) ProtoMessage()               {}
func (*HashlockAction) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

type isHashlockAction_Value interface {
	isHashlockAction_Value()
}

type HashlockAction_Hlock struct {
	Hlock *HashlockLock `protobuf:"bytes,1,opt,name=hlock,oneof"`
}
type HashlockAction_Hsend struct {
	Hsend *HashlockSend `protobuf:"bytes,2,opt,name=hsend,oneof"`
}
type HashlockAction_Hunlock struct {
	Hunlock *HashlockUnlock `protobuf:"bytes,3,opt,name=hunlock,oneof"`
}

func (*HashlockAction_Hlock) isHashlockAction_Value()   {}
func (*HashlockAction_Hsend) isHashlockAction_Value()   {}
func (*HashlockAction_Hunlock) isHashlockAction_Value() {}

func (m *HashlockAction) GetValue() isHashlockAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *HashlockAction) GetHlock() *HashlockLock {
	if x, ok := m.GetValue().(*HashlockAction_Hlock); ok {
		return x.Hlock
	}
	return nil
}

func (m *HashlockAction) GetHsend() *HashlockSend {
	if x, ok := m.GetValue().(*HashlockAction_Hsend); ok {
		return x.Hsend
	}
	return nil
}

func (m *HashlockAction) GetHunlock() *HashlockUnlock {
	if x, ok := m.GetValue().(*HashlockAction_Hunlock); ok {
		return x.Hunlock
	}
	return nil
}

func (m *HashlockAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HashlockAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HashlockAction_OneofMarshaler, _HashlockAction_OneofUnmarshaler, _HashlockAction_OneofSizer, []interface{}{
		(*HashlockAction_Hlock)(nil),
		(*HashlockAction_Hsend)(nil),
		(*HashlockAction_Hunlock)(nil),
	}
}

func _HashlockAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HashlockAction)
	// value
	switch x := m.Value.(type) {
	case *HashlockAction_Hlock:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hlock); err != nil {
			return err
		}
	case *HashlockAction_Hsend:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hsend); err != nil {
			return err
		}
	case *HashlockAction_Hunlock:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hunlock); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HashlockAction.Value has unexpected type %T", x)
	}
	return nil
}

func _HashlockAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HashlockAction)
	switch tag {
	case 1: // value.hlock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HashlockLock)
		err := b.DecodeMessage(msg)
		m.Value = &HashlockAction_Hlock{msg}
		return true, err
	case 2: // value.hsend
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HashlockSend)
		err := b.DecodeMessage(msg)
		m.Value = &HashlockAction_Hsend{msg}
		return true, err
	case 3: // value.hunlock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HashlockUnlock)
		err := b.DecodeMessage(msg)
		m.Value = &HashlockAction_Hunlock{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HashlockAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HashlockAction)
	// value
	switch x := m.Value.(type) {
	case *HashlockAction_Hlock:
		s := proto.Size(x.Hlock)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HashlockAction_Hsend:
		s := proto.Size(x.Hsend)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HashlockAction_Hunlock:
		s := proto.Size(x.Hunlock)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HashlockLock struct {
	Amount        int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Time          int64  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Hash          []byte `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	ToAddress     string `protobuf:"bytes,4,opt,name=toAddress" json:"toAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,5,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *HashlockLock) Reset()                    { *m = HashlockLock{} }
func (m *HashlockLock) String() string            { return proto.CompactTextString(m) }
func (*HashlockLock) ProtoMessage()               {}
func (*HashlockLock) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

func (m *HashlockLock) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *HashlockLock) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *HashlockLock) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *HashlockLock) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *HashlockLock) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type HashlockUnlock struct {
	Secret []byte `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (m *HashlockUnlock) Reset()                    { *m = HashlockUnlock{} }
func (m *HashlockUnlock) String() string            { return proto.CompactTextString(m) }
func (*HashlockUnlock) ProtoMessage()               {}
func (*HashlockUnlock) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

func (m *HashlockUnlock) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type HashlockSend struct {
	Secret []byte `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (m *HashlockSend) Reset()                    { *m = HashlockSend{} }
func (m *HashlockSend) String() string            { return proto.CompactTextString(m) }
func (*HashlockSend) ProtoMessage()               {}
func (*HashlockSend) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

func (m *HashlockSend) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type HashRecv struct {
	HashlockId []byte         `protobuf:"bytes,1,opt,name=HashlockId,proto3" json:"HashlockId,omitempty"`
	Infomation *Hashlockquery `protobuf:"bytes,2,opt,name=Infomation" json:"Infomation,omitempty"`
}

func (m *HashRecv) Reset()                    { *m = HashRecv{} }
func (m *HashRecv) String() string            { return proto.CompactTextString(m) }
func (*HashRecv) ProtoMessage()               {}
func (*HashRecv) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

func (m *HashRecv) GetHashlockId() []byte {
	if m != nil {
		return m.HashlockId
	}
	return nil
}

func (m *HashRecv) GetInfomation() *Hashlockquery {
	if m != nil {
		return m.Infomation
	}
	return nil
}

type Hashlockquery struct {
	Time        int64 `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	Status      int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Amount      int64 `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	CreateTime  int64 `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
	CurrentTime int64 `protobuf:"varint,5,opt,name=currentTime" json:"currentTime,omitempty"`
}

func (m *Hashlockquery) Reset()                    { *m = Hashlockquery{} }
func (m *Hashlockquery) String() string            { return proto.CompactTextString(m) }
func (*Hashlockquery) ProtoMessage()               {}
func (*Hashlockquery) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

func (m *Hashlockquery) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Hashlockquery) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Hashlockquery) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Hashlockquery) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Hashlockquery) GetCurrentTime() int64 {
	if m != nil {
		return m.CurrentTime
	}
	return 0
}

type Ticket struct {
	TicketId      string `protobuf:"bytes,1,opt,name=ticketId" json:"ticketId,omitempty"`
	Status        int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	IsGenesis     bool   `protobuf:"varint,3,opt,name=isGenesis" json:"isGenesis,omitempty"`
	CreateTime    int64  `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
	MinerTime     int64  `protobuf:"varint,5,opt,name=minerTime" json:"minerTime,omitempty"`
	MinerValue    int64  `protobuf:"varint,8,opt,name=minerValue" json:"minerValue,omitempty"`
	MinerAddress  string `protobuf:"bytes,6,opt,name=minerAddress" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,7,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *Ticket) Reset()                    { *m = Ticket{} }
func (m *Ticket) String() string            { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()               {}
func (*Ticket) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

func (m *Ticket) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *Ticket) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Ticket) GetIsGenesis() bool {
	if m != nil {
		return m.IsGenesis
	}
	return false
}

func (m *Ticket) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Ticket) GetMinerTime() int64 {
	if m != nil {
		return m.MinerTime
	}
	return 0
}

func (m *Ticket) GetMinerValue() int64 {
	if m != nil {
		return m.MinerValue
	}
	return 0
}

func (m *Ticket) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *Ticket) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

// message for execs.ticket
type TicketAction struct {
	// Types that are valid to be assigned to Value:
	//	*TicketAction_Tbind
	//	*TicketAction_Topen
	//	*TicketAction_Genesis
	//	*TicketAction_Tclose
	//	*TicketAction_Miner
	Value isTicketAction_Value `protobuf_oneof:"value"`
	Ty    int32                `protobuf:"varint,10,opt,name=ty" json:"ty,omitempty"`
}

func (m *TicketAction) Reset()                    { *m = TicketAction{} }
func (m *TicketAction) String() string            { return proto.CompactTextString(m) }
func (*TicketAction) ProtoMessage()               {}
func (*TicketAction) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

type isTicketAction_Value interface {
	isTicketAction_Value()
}

type TicketAction_Tbind struct {
	Tbind *TicketBind `protobuf:"bytes,5,opt,name=tbind,oneof"`
}
type TicketAction_Topen struct {
	Topen *TicketOpen `protobuf:"bytes,1,opt,name=topen,oneof"`
}
type TicketAction_Genesis struct {
	Genesis *TicketGenesis `protobuf:"bytes,2,opt,name=genesis,oneof"`
}
type TicketAction_Tclose struct {
	Tclose *TicketClose `protobuf:"bytes,3,opt,name=tclose,oneof"`
}
type TicketAction_Miner struct {
	Miner *TicketMiner `protobuf:"bytes,4,opt,name=miner,oneof"`
}

func (*TicketAction_Tbind) isTicketAction_Value()   {}
func (*TicketAction_Topen) isTicketAction_Value()   {}
func (*TicketAction_Genesis) isTicketAction_Value() {}
func (*TicketAction_Tclose) isTicketAction_Value()  {}
func (*TicketAction_Miner) isTicketAction_Value()   {}

func (m *TicketAction) GetValue() isTicketAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TicketAction) GetTbind() *TicketBind {
	if x, ok := m.GetValue().(*TicketAction_Tbind); ok {
		return x.Tbind
	}
	return nil
}

func (m *TicketAction) GetTopen() *TicketOpen {
	if x, ok := m.GetValue().(*TicketAction_Topen); ok {
		return x.Topen
	}
	return nil
}

func (m *TicketAction) GetGenesis() *TicketGenesis {
	if x, ok := m.GetValue().(*TicketAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *TicketAction) GetTclose() *TicketClose {
	if x, ok := m.GetValue().(*TicketAction_Tclose); ok {
		return x.Tclose
	}
	return nil
}

func (m *TicketAction) GetMiner() *TicketMiner {
	if x, ok := m.GetValue().(*TicketAction_Miner); ok {
		return x.Miner
	}
	return nil
}

func (m *TicketAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TicketAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TicketAction_OneofMarshaler, _TicketAction_OneofUnmarshaler, _TicketAction_OneofSizer, []interface{}{
		(*TicketAction_Tbind)(nil),
		(*TicketAction_Topen)(nil),
		(*TicketAction_Genesis)(nil),
		(*TicketAction_Tclose)(nil),
		(*TicketAction_Miner)(nil),
	}
}

func _TicketAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TicketAction)
	// value
	switch x := m.Value.(type) {
	case *TicketAction_Tbind:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tbind); err != nil {
			return err
		}
	case *TicketAction_Topen:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Topen); err != nil {
			return err
		}
	case *TicketAction_Genesis:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case *TicketAction_Tclose:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tclose); err != nil {
			return err
		}
	case *TicketAction_Miner:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Miner); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TicketAction.Value has unexpected type %T", x)
	}
	return nil
}

func _TicketAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TicketAction)
	switch tag {
	case 5: // value.tbind
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketBind)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Tbind{msg}
		return true, err
	case 1: // value.topen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketOpen)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Topen{msg}
		return true, err
	case 2: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Genesis{msg}
		return true, err
	case 3: // value.tclose
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketClose)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Tclose{msg}
		return true, err
	case 4: // value.miner
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TicketMiner)
		err := b.DecodeMessage(msg)
		m.Value = &TicketAction_Miner{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TicketAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TicketAction)
	// value
	switch x := m.Value.(type) {
	case *TicketAction_Tbind:
		s := proto.Size(x.Tbind)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Topen:
		s := proto.Size(x.Topen)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Tclose:
		s := proto.Size(x.Tclose)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TicketAction_Miner:
		s := proto.Size(x.Miner)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TicketMiner struct {
	Bits     uint32 `protobuf:"varint,1,opt,name=bits" json:"bits,omitempty"`
	Reward   int64  `protobuf:"varint,2,opt,name=reward" json:"reward,omitempty"`
	TicketId string `protobuf:"bytes,3,opt,name=ticketId" json:"ticketId,omitempty"`
	Modify   []byte `protobuf:"bytes,4,opt,name=modify,proto3" json:"modify,omitempty"`
}

func (m *TicketMiner) Reset()                    { *m = TicketMiner{} }
func (m *TicketMiner) String() string            { return proto.CompactTextString(m) }
func (*TicketMiner) ProtoMessage()               {}
func (*TicketMiner) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

func (m *TicketMiner) GetBits() uint32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *TicketMiner) GetReward() int64 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *TicketMiner) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *TicketMiner) GetModify() []byte {
	if m != nil {
		return m.Modify
	}
	return nil
}

type TicketBind struct {
	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *TicketBind) Reset()                    { *m = TicketBind{} }
func (m *TicketBind) String() string            { return proto.CompactTextString(m) }
func (*TicketBind) ProtoMessage()               {}
func (*TicketBind) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{15} }

func (m *TicketBind) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketBind) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type TicketOpen struct {
	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	Count         int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	ReturnAddress string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *TicketOpen) Reset()                    { *m = TicketOpen{} }
func (m *TicketOpen) String() string            { return proto.CompactTextString(m) }
func (*TicketOpen) ProtoMessage()               {}
func (*TicketOpen) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{16} }

func (m *TicketOpen) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketOpen) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TicketOpen) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type TicketGenesis struct {
	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress" json:"returnAddress,omitempty"`
	Count         int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *TicketGenesis) Reset()                    { *m = TicketGenesis{} }
func (m *TicketGenesis) String() string            { return proto.CompactTextString(m) }
func (*TicketGenesis) ProtoMessage()               {}
func (*TicketGenesis) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{17} }

func (m *TicketGenesis) GetMinerAddress() string {
	if m != nil {
		return m.MinerAddress
	}
	return ""
}

func (m *TicketGenesis) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

func (m *TicketGenesis) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TicketClose struct {
	TicketId []string `protobuf:"bytes,1,rep,name=ticketId" json:"ticketId,omitempty"`
}

func (m *TicketClose) Reset()                    { *m = TicketClose{} }
func (m *TicketClose) String() string            { return proto.CompactTextString(m) }
func (*TicketClose) ProtoMessage()               {}
func (*TicketClose) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{18} }

func (m *TicketClose) GetTicketId() []string {
	if m != nil {
		return m.TicketId
	}
	return nil
}

type TicketList struct {
	Addr   string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
}

func (m *TicketList) Reset()                    { *m = TicketList{} }
func (m *TicketList) String() string            { return proto.CompactTextString(m) }
func (*TicketList) ProtoMessage()               {}
func (*TicketList) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{19} }

func (m *TicketList) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TicketList) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type TicketInfos struct {
	TicketIds []string `protobuf:"bytes,1,rep,name=ticketIds" json:"ticketIds,omitempty"`
}

func (m *TicketInfos) Reset()                    { *m = TicketInfos{} }
func (m *TicketInfos) String() string            { return proto.CompactTextString(m) }
func (*TicketInfos) ProtoMessage()               {}
func (*TicketInfos) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{20} }

func (m *TicketInfos) GetTicketIds() []string {
	if m != nil {
		return m.TicketIds
	}
	return nil
}

type ReplyTicketList struct {
	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
}

func (m *ReplyTicketList) Reset()                    { *m = ReplyTicketList{} }
func (m *ReplyTicketList) String() string            { return proto.CompactTextString(m) }
func (*ReplyTicketList) ProtoMessage()               {}
func (*ReplyTicketList) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{21} }

func (m *ReplyTicketList) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

type ReplyWalletTickets struct {
	Tickets  []*Ticket `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
	Privkeys [][]byte  `protobuf:"bytes,2,rep,name=privkeys,proto3" json:"privkeys,omitempty"`
}

func (m *ReplyWalletTickets) Reset()                    { *m = ReplyWalletTickets{} }
func (m *ReplyWalletTickets) String() string            { return proto.CompactTextString(m) }
func (*ReplyWalletTickets) ProtoMessage()               {}
func (*ReplyWalletTickets) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{22} }

func (m *ReplyWalletTickets) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

func (m *ReplyWalletTickets) GetPrivkeys() [][]byte {
	if m != nil {
		return m.Privkeys
	}
	return nil
}

type ReceiptTicket struct {
	TicketId   string `protobuf:"bytes,1,opt,name=ticketId" json:"ticketId,omitempty"`
	Status     int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	PrevStatus int32  `protobuf:"varint,3,opt,name=prevStatus" json:"prevStatus,omitempty"`
	Addr       string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *ReceiptTicket) Reset()                    { *m = ReceiptTicket{} }
func (m *ReceiptTicket) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTicket) ProtoMessage()               {}
func (*ReceiptTicket) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{23} }

func (m *ReceiptTicket) GetTicketId() string {
	if m != nil {
		return m.TicketId
	}
	return ""
}

func (m *ReceiptTicket) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptTicket) GetPrevStatus() int32 {
	if m != nil {
		return m.PrevStatus
	}
	return 0
}

func (m *ReceiptTicket) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ReceiptTicketBind struct {
	OldMinerAddress string `protobuf:"bytes,1,opt,name=oldMinerAddress" json:"oldMinerAddress,omitempty"`
	NewMinerAddress string `protobuf:"bytes,2,opt,name=newMinerAddress" json:"newMinerAddress,omitempty"`
	ReturnAddress   string `protobuf:"bytes,3,opt,name=returnAddress" json:"returnAddress,omitempty"`
}

func (m *ReceiptTicketBind) Reset()                    { *m = ReceiptTicketBind{} }
func (m *ReceiptTicketBind) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTicketBind) ProtoMessage()               {}
func (*ReceiptTicketBind) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{24} }

func (m *ReceiptTicketBind) GetOldMinerAddress() string {
	if m != nil {
		return m.OldMinerAddress
	}
	return ""
}

func (m *ReceiptTicketBind) GetNewMinerAddress() string {
	if m != nil {
		return m.NewMinerAddress
	}
	return ""
}

func (m *ReceiptTicketBind) GetReturnAddress() string {
	if m != nil {
		return m.ReturnAddress
	}
	return ""
}

type ExecTxList struct {
	StateHash []byte         `protobuf:"bytes,1,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	Txs       []*Transaction `protobuf:"bytes,2,rep,name=txs" json:"txs,omitempty"`
	BlockTime int64          `protobuf:"varint,3,opt,name=blockTime" json:"blockTime,omitempty"`
	Height    int64          `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
}

func (m *ExecTxList) Reset()                    { *m = ExecTxList{} }
func (m *ExecTxList) String() string            { return proto.CompactTextString(m) }
func (*ExecTxList) ProtoMessage()               {}
func (*ExecTxList) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{25} }

func (m *ExecTxList) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

func (m *ExecTxList) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *ExecTxList) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ExecTxList) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Query struct {
	Execer   []byte `protobuf:"bytes,1,opt,name=execer,proto3" json:"execer,omitempty"`
	FuncName string `protobuf:"bytes,2,opt,name=funcName" json:"funcName,omitempty"`
	Payload  []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{26} }

func (m *Query) GetExecer() []byte {
	if m != nil {
		return m.Execer
	}
	return nil
}

func (m *Query) GetFuncName() string {
	if m != nil {
		return m.FuncName
	}
	return ""
}

func (m *Query) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// message for retrieve start
type RetrievePara struct {
	DefaultAddress string `protobuf:"bytes,1,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	Status         int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	CreateTime     int64  `protobuf:"varint,3,opt,name=createTime" json:"createTime,omitempty"`
	PrepareTime    int64  `protobuf:"varint,4,opt,name=prepareTime" json:"prepareTime,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,5,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
}

func (m *RetrievePara) Reset()                    { *m = RetrievePara{} }
func (m *RetrievePara) String() string            { return proto.CompactTextString(m) }
func (*RetrievePara) ProtoMessage()               {}
func (*RetrievePara) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{27} }

func (m *RetrievePara) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *RetrievePara) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RetrievePara) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *RetrievePara) GetPrepareTime() int64 {
	if m != nil {
		return m.PrepareTime
	}
	return 0
}

func (m *RetrievePara) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

type Retrieve struct {
	BackupAddress string          `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	RetPara       []*RetrievePara `protobuf:"bytes,2,rep,name=retPara" json:"retPara,omitempty"`
}

func (m *Retrieve) Reset()                    { *m = Retrieve{} }
func (m *Retrieve) String() string            { return proto.CompactTextString(m) }
func (*Retrieve) ProtoMessage()               {}
func (*Retrieve) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{28} }

func (m *Retrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *Retrieve) GetRetPara() []*RetrievePara {
	if m != nil {
		return m.RetPara
	}
	return nil
}

type RetrieveAction struct {
	// Types that are valid to be assigned to Value:
	//	*RetrieveAction_PreRet
	//	*RetrieveAction_PerfRet
	//	*RetrieveAction_Backup
	//	*RetrieveAction_Cancel
	Value isRetrieveAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,5,opt,name=ty" json:"ty,omitempty"`
}

func (m *RetrieveAction) Reset()                    { *m = RetrieveAction{} }
func (m *RetrieveAction) String() string            { return proto.CompactTextString(m) }
func (*RetrieveAction) ProtoMessage()               {}
func (*RetrieveAction) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{29} }

type isRetrieveAction_Value interface {
	isRetrieveAction_Value()
}

type RetrieveAction_PreRet struct {
	PreRet *PreRetrieve `protobuf:"bytes,1,opt,name=preRet,oneof"`
}
type RetrieveAction_PerfRet struct {
	PerfRet *PerformRetrieve `protobuf:"bytes,2,opt,name=perfRet,oneof"`
}
type RetrieveAction_Backup struct {
	Backup *BackupRetrieve `protobuf:"bytes,3,opt,name=backup,oneof"`
}
type RetrieveAction_Cancel struct {
	Cancel *CancelRetrieve `protobuf:"bytes,4,opt,name=cancel,oneof"`
}

func (*RetrieveAction_PreRet) isRetrieveAction_Value()  {}
func (*RetrieveAction_PerfRet) isRetrieveAction_Value() {}
func (*RetrieveAction_Backup) isRetrieveAction_Value()  {}
func (*RetrieveAction_Cancel) isRetrieveAction_Value()  {}

func (m *RetrieveAction) GetValue() isRetrieveAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RetrieveAction) GetPreRet() *PreRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_PreRet); ok {
		return x.PreRet
	}
	return nil
}

func (m *RetrieveAction) GetPerfRet() *PerformRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_PerfRet); ok {
		return x.PerfRet
	}
	return nil
}

func (m *RetrieveAction) GetBackup() *BackupRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_Backup); ok {
		return x.Backup
	}
	return nil
}

func (m *RetrieveAction) GetCancel() *CancelRetrieve {
	if x, ok := m.GetValue().(*RetrieveAction_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *RetrieveAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RetrieveAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RetrieveAction_OneofMarshaler, _RetrieveAction_OneofUnmarshaler, _RetrieveAction_OneofSizer, []interface{}{
		(*RetrieveAction_PreRet)(nil),
		(*RetrieveAction_PerfRet)(nil),
		(*RetrieveAction_Backup)(nil),
		(*RetrieveAction_Cancel)(nil),
	}
}

func _RetrieveAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RetrieveAction)
	// value
	switch x := m.Value.(type) {
	case *RetrieveAction_PreRet:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PreRet); err != nil {
			return err
		}
	case *RetrieveAction_PerfRet:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PerfRet); err != nil {
			return err
		}
	case *RetrieveAction_Backup:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Backup); err != nil {
			return err
		}
	case *RetrieveAction_Cancel:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RetrieveAction.Value has unexpected type %T", x)
	}
	return nil
}

func _RetrieveAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RetrieveAction)
	switch tag {
	case 1: // value.preRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PreRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_PreRet{msg}
		return true, err
	case 2: // value.perfRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PerformRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_PerfRet{msg}
		return true, err
	case 3: // value.backup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BackupRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_Backup{msg}
		return true, err
	case 4: // value.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CancelRetrieve)
		err := b.DecodeMessage(msg)
		m.Value = &RetrieveAction_Cancel{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RetrieveAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RetrieveAction)
	// value
	switch x := m.Value.(type) {
	case *RetrieveAction_PreRet:
		s := proto.Size(x.PreRet)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_PerfRet:
		s := proto.Size(x.PerfRet)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_Backup:
		s := proto.Size(x.Backup)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RetrieveAction_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BackupRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,3,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
}

func (m *BackupRetrieve) Reset()                    { *m = BackupRetrieve{} }
func (m *BackupRetrieve) String() string            { return proto.CompactTextString(m) }
func (*BackupRetrieve) ProtoMessage()               {}
func (*BackupRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{30} }

func (m *BackupRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *BackupRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *BackupRetrieve) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

type PreRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *PreRetrieve) Reset()                    { *m = PreRetrieve{} }
func (m *PreRetrieve) String() string            { return proto.CompactTextString(m) }
func (*PreRetrieve) ProtoMessage()               {}
func (*PreRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{31} }

func (m *PreRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *PreRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type PerformRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *PerformRetrieve) Reset()                    { *m = PerformRetrieve{} }
func (m *PerformRetrieve) String() string            { return proto.CompactTextString(m) }
func (*PerformRetrieve) ProtoMessage()               {}
func (*PerformRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{32} }

func (m *PerformRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *PerformRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type CancelRetrieve struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *CancelRetrieve) Reset()                    { *m = CancelRetrieve{} }
func (m *CancelRetrieve) String() string            { return proto.CompactTextString(m) }
func (*CancelRetrieve) ProtoMessage()               {}
func (*CancelRetrieve) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{33} }

func (m *CancelRetrieve) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *CancelRetrieve) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type ReqRetrieveInfo struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
}

func (m *ReqRetrieveInfo) Reset()                    { *m = ReqRetrieveInfo{} }
func (m *ReqRetrieveInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqRetrieveInfo) ProtoMessage()               {}
func (*ReqRetrieveInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{34} }

func (m *ReqRetrieveInfo) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *ReqRetrieveInfo) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

type RetrieveQuery struct {
	BackupAddress  string `protobuf:"bytes,1,opt,name=backupAddress" json:"backupAddress,omitempty"`
	DefaultAddress string `protobuf:"bytes,2,opt,name=defaultAddress" json:"defaultAddress,omitempty"`
	DelayPeriod    int64  `protobuf:"varint,3,opt,name=delayPeriod" json:"delayPeriod,omitempty"`
	PrepareTime    int64  `protobuf:"varint,4,opt,name=prepareTime" json:"prepareTime,omitempty"`
	RemainTime     int64  `protobuf:"varint,5,opt,name=remainTime" json:"remainTime,omitempty"`
	Status         int32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
}

func (m *RetrieveQuery) Reset()                    { *m = RetrieveQuery{} }
func (m *RetrieveQuery) String() string            { return proto.CompactTextString(m) }
func (*RetrieveQuery) ProtoMessage()               {}
func (*RetrieveQuery) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{35} }

func (m *RetrieveQuery) GetBackupAddress() string {
	if m != nil {
		return m.BackupAddress
	}
	return ""
}

func (m *RetrieveQuery) GetDefaultAddress() string {
	if m != nil {
		return m.DefaultAddress
	}
	return ""
}

func (m *RetrieveQuery) GetDelayPeriod() int64 {
	if m != nil {
		return m.DelayPeriod
	}
	return 0
}

func (m *RetrieveQuery) GetPrepareTime() int64 {
	if m != nil {
		return m.PrepareTime
	}
	return 0
}

func (m *RetrieveQuery) GetRemainTime() int64 {
	if m != nil {
		return m.RemainTime
	}
	return 0
}

func (m *RetrieveQuery) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////////
// message for token start/////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
type TokenAction struct {
	// Types that are valid to be assigned to Value:
	//	*TokenAction_Tokenprecreate
	//	*TokenAction_Tokenfinishcreate
	//	*TokenAction_Tokenrevokecreate
	//	*TokenAction_Transfer
	//	*TokenAction_Withdraw
	//	*TokenAction_Genesis
	Value isTokenAction_Value `protobuf_oneof:"value"`
	Ty    int32               `protobuf:"varint,7,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *TokenAction) Reset()                    { *m = TokenAction{} }
func (m *TokenAction) String() string            { return proto.CompactTextString(m) }
func (*TokenAction) ProtoMessage()               {}
func (*TokenAction) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{36} }

type isTokenAction_Value interface {
	isTokenAction_Value()
}

type TokenAction_Tokenprecreate struct {
	Tokenprecreate *TokenPreCreate `protobuf:"bytes,1,opt,name=tokenprecreate,oneof"`
}
type TokenAction_Tokenfinishcreate struct {
	Tokenfinishcreate *TokenFinishCreate `protobuf:"bytes,2,opt,name=tokenfinishcreate,oneof"`
}
type TokenAction_Tokenrevokecreate struct {
	Tokenrevokecreate *TokenRevokeCreate `protobuf:"bytes,3,opt,name=tokenrevokecreate,oneof"`
}
type TokenAction_Transfer struct {
	Transfer *CoinsTransfer `protobuf:"bytes,4,opt,name=transfer,oneof"`
}
type TokenAction_Withdraw struct {
	Withdraw *CoinsWithdraw `protobuf:"bytes,5,opt,name=withdraw,oneof"`
}
type TokenAction_Genesis struct {
	Genesis *CoinsGenesis `protobuf:"bytes,6,opt,name=genesis,oneof"`
}

func (*TokenAction_Tokenprecreate) isTokenAction_Value()    {}
func (*TokenAction_Tokenfinishcreate) isTokenAction_Value() {}
func (*TokenAction_Tokenrevokecreate) isTokenAction_Value() {}
func (*TokenAction_Transfer) isTokenAction_Value()          {}
func (*TokenAction_Withdraw) isTokenAction_Value()          {}
func (*TokenAction_Genesis) isTokenAction_Value()           {}

func (m *TokenAction) GetValue() isTokenAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TokenAction) GetTokenprecreate() *TokenPreCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenprecreate); ok {
		return x.Tokenprecreate
	}
	return nil
}

func (m *TokenAction) GetTokenfinishcreate() *TokenFinishCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenfinishcreate); ok {
		return x.Tokenfinishcreate
	}
	return nil
}

func (m *TokenAction) GetTokenrevokecreate() *TokenRevokeCreate {
	if x, ok := m.GetValue().(*TokenAction_Tokenrevokecreate); ok {
		return x.Tokenrevokecreate
	}
	return nil
}

func (m *TokenAction) GetTransfer() *CoinsTransfer {
	if x, ok := m.GetValue().(*TokenAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *TokenAction) GetWithdraw() *CoinsWithdraw {
	if x, ok := m.GetValue().(*TokenAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *TokenAction) GetGenesis() *CoinsGenesis {
	if x, ok := m.GetValue().(*TokenAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *TokenAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TokenAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TokenAction_OneofMarshaler, _TokenAction_OneofUnmarshaler, _TokenAction_OneofSizer, []interface{}{
		(*TokenAction_Tokenprecreate)(nil),
		(*TokenAction_Tokenfinishcreate)(nil),
		(*TokenAction_Tokenrevokecreate)(nil),
		(*TokenAction_Transfer)(nil),
		(*TokenAction_Withdraw)(nil),
		(*TokenAction_Genesis)(nil),
	}
}

func _TokenAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TokenAction)
	// value
	switch x := m.Value.(type) {
	case *TokenAction_Tokenprecreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenprecreate); err != nil {
			return err
		}
	case *TokenAction_Tokenfinishcreate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenfinishcreate); err != nil {
			return err
		}
	case *TokenAction_Tokenrevokecreate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenrevokecreate); err != nil {
			return err
		}
	case *TokenAction_Transfer:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *TokenAction_Withdraw:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *TokenAction_Genesis:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TokenAction.Value has unexpected type %T", x)
	}
	return nil
}

func _TokenAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TokenAction)
	switch tag {
	case 1: // value.tokenprecreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenPreCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenprecreate{msg}
		return true, err
	case 2: // value.tokenfinishcreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenFinishCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenfinishcreate{msg}
		return true, err
	case 3: // value.tokenrevokecreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenRevokeCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Tokenrevokecreate{msg}
		return true, err
	case 4: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Transfer{msg}
		return true, err
	case 5: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Withdraw{msg}
		return true, err
	case 6: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CoinsGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &TokenAction_Genesis{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TokenAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TokenAction)
	// value
	switch x := m.Value.(type) {
	case *TokenAction_Tokenprecreate:
		s := proto.Size(x.Tokenprecreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Tokenfinishcreate:
		s := proto.Size(x.Tokenfinishcreate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Tokenrevokecreate:
		s := proto.Size(x.Tokenrevokecreate)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokenAction_Genesis:
		s := proto.Size(x.Genesis)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 创建token，支持最大精确度是6位小数,即存入数据库的实际总额需要放大1e6倍
type TokenPreCreate struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction" json:"introduction,omitempty"`
	Total        int64  `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Price        int64  `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	Owner        string `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenPreCreate) Reset()                    { *m = TokenPreCreate{} }
func (m *TokenPreCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenPreCreate) ProtoMessage()               {}
func (*TokenPreCreate) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{37} }

func (m *TokenPreCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TokenPreCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenPreCreate) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *TokenPreCreate) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TokenPreCreate) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TokenPreCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type TokenFinishCreate struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenFinishCreate) Reset()                    { *m = TokenFinishCreate{} }
func (m *TokenFinishCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenFinishCreate) ProtoMessage()               {}
func (*TokenFinishCreate) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{38} }

func (m *TokenFinishCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenFinishCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type TokenRevokeCreate struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *TokenRevokeCreate) Reset()                    { *m = TokenRevokeCreate{} }
func (m *TokenRevokeCreate) String() string            { return proto.CompactTextString(m) }
func (*TokenRevokeCreate) ProtoMessage()               {}
func (*TokenRevokeCreate) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{39} }

func (m *TokenRevokeCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenRevokeCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type Token struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction" json:"introduction,omitempty"`
	Total        int64  `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Price        int64  `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	Owner        string `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
	Creator      string `protobuf:"bytes,7,opt,name=creator" json:"creator,omitempty"`
	Status       int32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{40} }

func (m *Token) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Token) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Token) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *Token) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Token) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Token) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Token) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Token) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReqTokens struct {
	Queryall bool     `protobuf:"varint,1,opt,name=queryall" json:"queryall,omitempty"`
	Status   int32    `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Tokens   []string `protobuf:"bytes,3,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *ReqTokens) Reset()                    { *m = ReqTokens{} }
func (m *ReqTokens) String() string            { return proto.CompactTextString(m) }
func (*ReqTokens) ProtoMessage()               {}
func (*ReqTokens) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{41} }

func (m *ReqTokens) GetQueryall() bool {
	if m != nil {
		return m.Queryall
	}
	return false
}

func (m *ReqTokens) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqTokens) GetTokens() []string {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type ReplyTokens struct {
	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *ReplyTokens) Reset()                    { *m = ReplyTokens{} }
func (m *ReplyTokens) String() string            { return proto.CompactTextString(m) }
func (*ReplyTokens) ProtoMessage()               {}
func (*ReplyTokens) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{42} }

func (m *ReplyTokens) GetTokens() []*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type ReceiptToken struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
}

func (m *ReceiptToken) Reset()                    { *m = ReceiptToken{} }
func (m *ReceiptToken) String() string            { return proto.CompactTextString(m) }
func (*ReceiptToken) ProtoMessage()               {}
func (*ReceiptToken) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{43} }

func (m *ReceiptToken) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReceiptToken) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptToken) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////////
// message for Trade start/////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
type Trade struct {
	// Types that are valid to be assigned to Value:
	//	*Trade_Tokensell
	//	*Trade_Tokenbuy
	//	*Trade_Tokenrevokesell
	Value isTrade_Value `protobuf_oneof:"value"`
	Ty    int32         `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *Trade) Reset()                    { *m = Trade{} }
func (m *Trade) String() string            { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()               {}
func (*Trade) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{44} }

type isTrade_Value interface {
	isTrade_Value()
}

type Trade_Tokensell struct {
	Tokensell *TradeForSell `protobuf:"bytes,1,opt,name=tokensell,oneof"`
}
type Trade_Tokenbuy struct {
	Tokenbuy *TradeForBuy `protobuf:"bytes,2,opt,name=tokenbuy,oneof"`
}
type Trade_Tokenrevokesell struct {
	Tokenrevokesell *TradeForRevokeSell `protobuf:"bytes,3,opt,name=tokenrevokesell,oneof"`
}

func (*Trade_Tokensell) isTrade_Value()       {}
func (*Trade_Tokenbuy) isTrade_Value()        {}
func (*Trade_Tokenrevokesell) isTrade_Value() {}

func (m *Trade) GetValue() isTrade_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Trade) GetTokensell() *TradeForSell {
	if x, ok := m.GetValue().(*Trade_Tokensell); ok {
		return x.Tokensell
	}
	return nil
}

func (m *Trade) GetTokenbuy() *TradeForBuy {
	if x, ok := m.GetValue().(*Trade_Tokenbuy); ok {
		return x.Tokenbuy
	}
	return nil
}

func (m *Trade) GetTokenrevokesell() *TradeForRevokeSell {
	if x, ok := m.GetValue().(*Trade_Tokenrevokesell); ok {
		return x.Tokenrevokesell
	}
	return nil
}

func (m *Trade) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Trade) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Trade_OneofMarshaler, _Trade_OneofUnmarshaler, _Trade_OneofSizer, []interface{}{
		(*Trade_Tokensell)(nil),
		(*Trade_Tokenbuy)(nil),
		(*Trade_Tokenrevokesell)(nil),
	}
}

func _Trade_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Trade)
	// value
	switch x := m.Value.(type) {
	case *Trade_Tokensell:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokensell); err != nil {
			return err
		}
	case *Trade_Tokenbuy:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenbuy); err != nil {
			return err
		}
	case *Trade_Tokenrevokesell:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tokenrevokesell); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Trade.Value has unexpected type %T", x)
	}
	return nil
}

func _Trade_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Trade)
	switch tag {
	case 1: // value.tokensell
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForSell)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_Tokensell{msg}
		return true, err
	case 2: // value.tokenbuy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForBuy)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_Tokenbuy{msg}
		return true, err
	case 3: // value.tokenrevokesell
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForRevokeSell)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_Tokenrevokesell{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Trade_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Trade)
	// value
	switch x := m.Value.(type) {
	case *Trade_Tokensell:
		s := proto.Size(x.Tokensell)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trade_Tokenbuy:
		s := proto.Size(x.Tokenbuy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trade_Tokenrevokesell:
		s := proto.Size(x.Tokenrevokesell)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 创建众筹交易,确定一手交易的token的数量，单价以及总共有多少手token可以进行众筹
type TradeForSell struct {
	Tokensymbol       string `protobuf:"bytes,1,opt,name=tokensymbol" json:"tokensymbol,omitempty"`
	Amountperboardlot int64  `protobuf:"varint,2,opt,name=amountperboardlot" json:"amountperboardlot,omitempty"`
	Minboardlot       int64  `protobuf:"varint,3,opt,name=minboardlot" json:"minboardlot,omitempty"`
	Priceperboardlot  int64  `protobuf:"varint,4,opt,name=priceperboardlot" json:"priceperboardlot,omitempty"`
	Totalboardlot     int64  `protobuf:"varint,5,opt,name=totalboardlot" json:"totalboardlot,omitempty"`
	Starttime         int64  `protobuf:"varint,6,opt,name=starttime" json:"starttime,omitempty"`
	Stoptime          int64  `protobuf:"varint,7,opt,name=stoptime" json:"stoptime,omitempty"`
	Crowdfund         bool   `protobuf:"varint,8,opt,name=crowdfund" json:"crowdfund,omitempty"`
}

func (m *TradeForSell) Reset()                    { *m = TradeForSell{} }
func (m *TradeForSell) String() string            { return proto.CompactTextString(m) }
func (*TradeForSell) ProtoMessage()               {}
func (*TradeForSell) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{45} }

func (m *TradeForSell) GetTokensymbol() string {
	if m != nil {
		return m.Tokensymbol
	}
	return ""
}

func (m *TradeForSell) GetAmountperboardlot() int64 {
	if m != nil {
		return m.Amountperboardlot
	}
	return 0
}

func (m *TradeForSell) GetMinboardlot() int64 {
	if m != nil {
		return m.Minboardlot
	}
	return 0
}

func (m *TradeForSell) GetPriceperboardlot() int64 {
	if m != nil {
		return m.Priceperboardlot
	}
	return 0
}

func (m *TradeForSell) GetTotalboardlot() int64 {
	if m != nil {
		return m.Totalboardlot
	}
	return 0
}

func (m *TradeForSell) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *TradeForSell) GetStoptime() int64 {
	if m != nil {
		return m.Stoptime
	}
	return 0
}

func (m *TradeForSell) GetCrowdfund() bool {
	if m != nil {
		return m.Crowdfund
	}
	return false
}

type SellOrder struct {
	Tokensymbol       string `protobuf:"bytes,1,opt,name=tokensymbol" json:"tokensymbol,omitempty"`
	Address           string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Amountperboardlot int64  `protobuf:"varint,3,opt,name=amountperboardlot" json:"amountperboardlot,omitempty"`
	Minboardlot       int64  `protobuf:"varint,4,opt,name=minboardlot" json:"minboardlot,omitempty"`
	Priceperboardlot  int64  `protobuf:"varint,5,opt,name=priceperboardlot" json:"priceperboardlot,omitempty"`
	Totalboardlot     int64  `protobuf:"varint,6,opt,name=totalboardlot" json:"totalboardlot,omitempty"`
	Soldboardlot      int64  `protobuf:"varint,7,opt,name=soldboardlot" json:"soldboardlot,omitempty"`
	Starttime         int64  `protobuf:"varint,8,opt,name=starttime" json:"starttime,omitempty"`
	Stoptime          int64  `protobuf:"varint,9,opt,name=stoptime" json:"stoptime,omitempty"`
	Crowdfund         bool   `protobuf:"varint,10,opt,name=crowdfund" json:"crowdfund,omitempty"`
	Sellid            string `protobuf:"bytes,11,opt,name=sellid" json:"sellid,omitempty"`
	Status            int32  `protobuf:"varint,12,opt,name=status" json:"status,omitempty"`
	Height            int64  `protobuf:"varint,13,opt,name=height" json:"height,omitempty"`
}

func (m *SellOrder) Reset()                    { *m = SellOrder{} }
func (m *SellOrder) String() string            { return proto.CompactTextString(m) }
func (*SellOrder) ProtoMessage()               {}
func (*SellOrder) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{46} }

func (m *SellOrder) GetTokensymbol() string {
	if m != nil {
		return m.Tokensymbol
	}
	return ""
}

func (m *SellOrder) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SellOrder) GetAmountperboardlot() int64 {
	if m != nil {
		return m.Amountperboardlot
	}
	return 0
}

func (m *SellOrder) GetMinboardlot() int64 {
	if m != nil {
		return m.Minboardlot
	}
	return 0
}

func (m *SellOrder) GetPriceperboardlot() int64 {
	if m != nil {
		return m.Priceperboardlot
	}
	return 0
}

func (m *SellOrder) GetTotalboardlot() int64 {
	if m != nil {
		return m.Totalboardlot
	}
	return 0
}

func (m *SellOrder) GetSoldboardlot() int64 {
	if m != nil {
		return m.Soldboardlot
	}
	return 0
}

func (m *SellOrder) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *SellOrder) GetStoptime() int64 {
	if m != nil {
		return m.Stoptime
	}
	return 0
}

func (m *SellOrder) GetCrowdfund() bool {
	if m != nil {
		return m.Crowdfund
	}
	return false
}

func (m *SellOrder) GetSellid() string {
	if m != nil {
		return m.Sellid
	}
	return ""
}

func (m *SellOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SellOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type SellOrderReceipt struct {
	Sellid string `protobuf:"bytes,1,opt,name=sellid" json:"sellid,omitempty"`
}

func (m *SellOrderReceipt) Reset()                    { *m = SellOrderReceipt{} }
func (m *SellOrderReceipt) String() string            { return proto.CompactTextString(m) }
func (*SellOrderReceipt) ProtoMessage()               {}
func (*SellOrderReceipt) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{47} }

func (m *SellOrderReceipt) GetSellid() string {
	if m != nil {
		return m.Sellid
	}
	return ""
}

type ReqAddrTokens struct {
	Addr       string   `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Status     int32    `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Token      []string `protobuf:"bytes,3,rep,name=token" json:"token,omitempty"`
	PageNumber int32    `protobuf:"varint,4,opt,name=pageNumber" json:"pageNumber,omitempty"`
	PageSize   int32    `protobuf:"varint,5,opt,name=pageSize" json:"pageSize,omitempty"`
}

func (m *ReqAddrTokens) Reset()                    { *m = ReqAddrTokens{} }
func (m *ReqAddrTokens) String() string            { return proto.CompactTextString(m) }
func (*ReqAddrTokens) ProtoMessage()               {}
func (*ReqAddrTokens) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{48} }

func (m *ReqAddrTokens) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqAddrTokens) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqAddrTokens) GetToken() []string {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ReqAddrTokens) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *ReqAddrTokens) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ReplySellOrders struct {
	Selloders []*SellOrder `protobuf:"bytes,1,rep,name=selloders" json:"selloders,omitempty"`
}

func (m *ReplySellOrders) Reset()                    { *m = ReplySellOrders{} }
func (m *ReplySellOrders) String() string            { return proto.CompactTextString(m) }
func (*ReplySellOrders) ProtoMessage()               {}
func (*ReplySellOrders) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{49} }

func (m *ReplySellOrders) GetSelloders() []*SellOrder {
	if m != nil {
		return m.Selloders
	}
	return nil
}

type TokenRecv struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Recv  int64  `protobuf:"varint,2,opt,name=recv" json:"recv,omitempty"`
}

func (m *TokenRecv) Reset()                    { *m = TokenRecv{} }
func (m *TokenRecv) String() string            { return proto.CompactTextString(m) }
func (*TokenRecv) ProtoMessage()               {}
func (*TokenRecv) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{50} }

func (m *TokenRecv) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenRecv) GetRecv() int64 {
	if m != nil {
		return m.Recv
	}
	return 0
}

type ReplyAddrRecvForTokens struct {
	Tokenrecv []*TokenRecv `protobuf:"bytes,1,rep,name=tokenrecv" json:"tokenrecv,omitempty"`
}

func (m *ReplyAddrRecvForTokens) Reset()                    { *m = ReplyAddrRecvForTokens{} }
func (m *ReplyAddrRecvForTokens) String() string            { return proto.CompactTextString(m) }
func (*ReplyAddrRecvForTokens) ProtoMessage()               {}
func (*ReplyAddrRecvForTokens) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{51} }

func (m *ReplyAddrRecvForTokens) GetTokenrecv() []*TokenRecv {
	if m != nil {
		return m.Tokenrecv
	}
	return nil
}

// 购买者发起交易用来购买token持有者之前挂单出售的token
// 其中的hash为token出售者发起出售交易的hash
type TradeForBuy struct {
	Sellid      string `protobuf:"bytes,1,opt,name=sellid" json:"sellid,omitempty"`
	Boardlotcnt int64  `protobuf:"varint,2,opt,name=boardlotcnt" json:"boardlotcnt,omitempty"`
}

func (m *TradeForBuy) Reset()                    { *m = TradeForBuy{} }
func (m *TradeForBuy) String() string            { return proto.CompactTextString(m) }
func (*TradeForBuy) ProtoMessage()               {}
func (*TradeForBuy) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{52} }

func (m *TradeForBuy) GetSellid() string {
	if m != nil {
		return m.Sellid
	}
	return ""
}

func (m *TradeForBuy) GetBoardlotcnt() int64 {
	if m != nil {
		return m.Boardlotcnt
	}
	return 0
}

// 允许token的持有者撤销之前未成交出售token的挂单
type TradeForRevokeSell struct {
	Sellid string `protobuf:"bytes,1,opt,name=sellid" json:"sellid,omitempty"`
}

func (m *TradeForRevokeSell) Reset()                    { *m = TradeForRevokeSell{} }
func (m *TradeForRevokeSell) String() string            { return proto.CompactTextString(m) }
func (*TradeForRevokeSell) ProtoMessage()               {}
func (*TradeForRevokeSell) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{53} }

func (m *TradeForRevokeSell) GetSellid() string {
	if m != nil {
		return m.Sellid
	}
	return ""
}

type ReceiptTradeBase struct {
	Tokensymbol       string `protobuf:"bytes,1,opt,name=tokensymbol" json:"tokensymbol,omitempty"`
	Owner             string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Amountperboardlot string `protobuf:"bytes,3,opt,name=amountperboardlot" json:"amountperboardlot,omitempty"`
	Minboardlot       int64  `protobuf:"varint,4,opt,name=minboardlot" json:"minboardlot,omitempty"`
	Priceperboardlot  string `protobuf:"bytes,5,opt,name=priceperboardlot" json:"priceperboardlot,omitempty"`
	Totalboardlot     int64  `protobuf:"varint,6,opt,name=totalboardlot" json:"totalboardlot,omitempty"`
	Soldboardlot      int64  `protobuf:"varint,7,opt,name=soldboardlot" json:"soldboardlot,omitempty"`
	Starttime         int64  `protobuf:"varint,8,opt,name=starttime" json:"starttime,omitempty"`
	Stoptime          int64  `protobuf:"varint,9,opt,name=stoptime" json:"stoptime,omitempty"`
	Crowdfund         bool   `protobuf:"varint,10,opt,name=crowdfund" json:"crowdfund,omitempty"`
	Sellid            string `protobuf:"bytes,11,opt,name=sellid" json:"sellid,omitempty"`
	Status            string `protobuf:"bytes,12,opt,name=status" json:"status,omitempty"`
}

func (m *ReceiptTradeBase) Reset()                    { *m = ReceiptTradeBase{} }
func (m *ReceiptTradeBase) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTradeBase) ProtoMessage()               {}
func (*ReceiptTradeBase) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{54} }

func (m *ReceiptTradeBase) GetTokensymbol() string {
	if m != nil {
		return m.Tokensymbol
	}
	return ""
}

func (m *ReceiptTradeBase) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptTradeBase) GetAmountperboardlot() string {
	if m != nil {
		return m.Amountperboardlot
	}
	return ""
}

func (m *ReceiptTradeBase) GetMinboardlot() int64 {
	if m != nil {
		return m.Minboardlot
	}
	return 0
}

func (m *ReceiptTradeBase) GetPriceperboardlot() string {
	if m != nil {
		return m.Priceperboardlot
	}
	return ""
}

func (m *ReceiptTradeBase) GetTotalboardlot() int64 {
	if m != nil {
		return m.Totalboardlot
	}
	return 0
}

func (m *ReceiptTradeBase) GetSoldboardlot() int64 {
	if m != nil {
		return m.Soldboardlot
	}
	return 0
}

func (m *ReceiptTradeBase) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *ReceiptTradeBase) GetStoptime() int64 {
	if m != nil {
		return m.Stoptime
	}
	return 0
}

func (m *ReceiptTradeBase) GetCrowdfund() bool {
	if m != nil {
		return m.Crowdfund
	}
	return false
}

func (m *ReceiptTradeBase) GetSellid() string {
	if m != nil {
		return m.Sellid
	}
	return ""
}

func (m *ReceiptTradeBase) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ReceiptTradeSell struct {
	Base *ReceiptTradeBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
}

func (m *ReceiptTradeSell) Reset()                    { *m = ReceiptTradeSell{} }
func (m *ReceiptTradeSell) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTradeSell) ProtoMessage()               {}
func (*ReceiptTradeSell) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{55} }

func (m *ReceiptTradeSell) GetBase() *ReceiptTradeBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptTradeBuy struct {
	Buyeraddr         string `protobuf:"bytes,1,opt,name=buyeraddr" json:"buyeraddr,omitempty"`
	Sellid            string `protobuf:"bytes,2,opt,name=sellid" json:"sellid,omitempty"`
	Token             string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	Boardlotcnt       int64  `protobuf:"varint,4,opt,name=boardlotcnt" json:"boardlotcnt,omitempty"`
	Amountperboardlot string `protobuf:"bytes,5,opt,name=amountperboardlot" json:"amountperboardlot,omitempty"`
	Priceperboardlot  string `protobuf:"bytes,6,opt,name=priceperboardlot" json:"priceperboardlot,omitempty"`
	Buytxhash         string `protobuf:"bytes,7,opt,name=buytxhash" json:"buytxhash,omitempty"`
}

func (m *ReceiptTradeBuy) Reset()                    { *m = ReceiptTradeBuy{} }
func (m *ReceiptTradeBuy) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTradeBuy) ProtoMessage()               {}
func (*ReceiptTradeBuy) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{56} }

func (m *ReceiptTradeBuy) GetBuyeraddr() string {
	if m != nil {
		return m.Buyeraddr
	}
	return ""
}

func (m *ReceiptTradeBuy) GetSellid() string {
	if m != nil {
		return m.Sellid
	}
	return ""
}

func (m *ReceiptTradeBuy) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReceiptTradeBuy) GetBoardlotcnt() int64 {
	if m != nil {
		return m.Boardlotcnt
	}
	return 0
}

func (m *ReceiptTradeBuy) GetAmountperboardlot() string {
	if m != nil {
		return m.Amountperboardlot
	}
	return ""
}

func (m *ReceiptTradeBuy) GetPriceperboardlot() string {
	if m != nil {
		return m.Priceperboardlot
	}
	return ""
}

func (m *ReceiptTradeBuy) GetBuytxhash() string {
	if m != nil {
		return m.Buytxhash
	}
	return ""
}

type ReceiptTradeRevoke struct {
	Base *ReceiptTradeBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
}

func (m *ReceiptTradeRevoke) Reset()                    { *m = ReceiptTradeRevoke{} }
func (m *ReceiptTradeRevoke) String() string            { return proto.CompactTextString(m) }
func (*ReceiptTradeRevoke) ProtoMessage()               {}
func (*ReceiptTradeRevoke) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{57} }

func (m *ReceiptTradeRevoke) GetBase() *ReceiptTradeBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type TradeBuyDone struct {
	Token             string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Boardlotcnt       int64  `protobuf:"varint,2,opt,name=boardlotcnt" json:"boardlotcnt,omitempty"`
	Amountperboardlot string `protobuf:"bytes,3,opt,name=amountperboardlot" json:"amountperboardlot,omitempty"`
	Priceperboardlot  string `protobuf:"bytes,4,opt,name=priceperboardlot" json:"priceperboardlot,omitempty"`
	Buytxhash         string `protobuf:"bytes,5,opt,name=buytxhash" json:"buytxhash,omitempty"`
	Height            int64  `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
}

func (m *TradeBuyDone) Reset()                    { *m = TradeBuyDone{} }
func (m *TradeBuyDone) String() string            { return proto.CompactTextString(m) }
func (*TradeBuyDone) ProtoMessage()               {}
func (*TradeBuyDone) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{58} }

func (m *TradeBuyDone) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TradeBuyDone) GetBoardlotcnt() int64 {
	if m != nil {
		return m.Boardlotcnt
	}
	return 0
}

func (m *TradeBuyDone) GetAmountperboardlot() string {
	if m != nil {
		return m.Amountperboardlot
	}
	return ""
}

func (m *TradeBuyDone) GetPriceperboardlot() string {
	if m != nil {
		return m.Priceperboardlot
	}
	return ""
}

func (m *TradeBuyDone) GetBuytxhash() string {
	if m != nil {
		return m.Buytxhash
	}
	return ""
}

func (m *TradeBuyDone) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ReplyTradeBuyOrders struct {
	Tradebuydones []*TradeBuyDone `protobuf:"bytes,1,rep,name=tradebuydones" json:"tradebuydones,omitempty"`
}

func (m *ReplyTradeBuyOrders) Reset()                    { *m = ReplyTradeBuyOrders{} }
func (m *ReplyTradeBuyOrders) String() string            { return proto.CompactTextString(m) }
func (*ReplyTradeBuyOrders) ProtoMessage()               {}
func (*ReplyTradeBuyOrders) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{59} }

func (m *ReplyTradeBuyOrders) GetTradebuydones() []*TradeBuyDone {
	if m != nil {
		return m.Tradebuydones
	}
	return nil
}

// 配置修改部分
type ArrayConfig struct {
	Value []string `protobuf:"bytes,3,rep,name=value" json:"value,omitempty"`
}

func (m *ArrayConfig) Reset()                    { *m = ArrayConfig{} }
func (m *ArrayConfig) String() string            { return proto.CompactTextString(m) }
func (*ArrayConfig) ProtoMessage()               {}
func (*ArrayConfig) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{60} }

func (m *ArrayConfig) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type StringConfig struct {
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *StringConfig) Reset()                    { *m = StringConfig{} }
func (m *StringConfig) String() string            { return proto.CompactTextString(m) }
func (*StringConfig) ProtoMessage()               {}
func (*StringConfig) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{61} }

func (m *StringConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Int32Config struct {
	Value int32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *Int32Config) Reset()                    { *m = Int32Config{} }
func (m *Int32Config) String() string            { return proto.CompactTextString(m) }
func (*Int32Config) ProtoMessage()               {}
func (*Int32Config) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{62} }

func (m *Int32Config) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ConfigItem struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*ConfigItem_Arr
	//	*ConfigItem_Str
	//	*ConfigItem_Int
	Value isConfigItem_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,11,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *ConfigItem) Reset()                    { *m = ConfigItem{} }
func (m *ConfigItem) String() string            { return proto.CompactTextString(m) }
func (*ConfigItem) ProtoMessage()               {}
func (*ConfigItem) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{63} }

type isConfigItem_Value interface {
	isConfigItem_Value()
}

type ConfigItem_Arr struct {
	Arr *ArrayConfig `protobuf:"bytes,3,opt,name=arr,oneof"`
}
type ConfigItem_Str struct {
	Str *StringConfig `protobuf:"bytes,4,opt,name=str,oneof"`
}
type ConfigItem_Int struct {
	Int *Int32Config `protobuf:"bytes,5,opt,name=int,oneof"`
}

func (*ConfigItem_Arr) isConfigItem_Value() {}
func (*ConfigItem_Str) isConfigItem_Value() {}
func (*ConfigItem_Int) isConfigItem_Value() {}

func (m *ConfigItem) GetValue() isConfigItem_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ConfigItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConfigItem) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ConfigItem) GetArr() *ArrayConfig {
	if x, ok := m.GetValue().(*ConfigItem_Arr); ok {
		return x.Arr
	}
	return nil
}

func (m *ConfigItem) GetStr() *StringConfig {
	if x, ok := m.GetValue().(*ConfigItem_Str); ok {
		return x.Str
	}
	return nil
}

func (m *ConfigItem) GetInt() *Int32Config {
	if x, ok := m.GetValue().(*ConfigItem_Int); ok {
		return x.Int
	}
	return nil
}

func (m *ConfigItem) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConfigItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ConfigItem_OneofMarshaler, _ConfigItem_OneofUnmarshaler, _ConfigItem_OneofSizer, []interface{}{
		(*ConfigItem_Arr)(nil),
		(*ConfigItem_Str)(nil),
		(*ConfigItem_Int)(nil),
	}
}

func _ConfigItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ConfigItem)
	// value
	switch x := m.Value.(type) {
	case *ConfigItem_Arr:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Arr); err != nil {
			return err
		}
	case *ConfigItem_Str:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Str); err != nil {
			return err
		}
	case *ConfigItem_Int:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Int); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConfigItem.Value has unexpected type %T", x)
	}
	return nil
}

func _ConfigItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ConfigItem)
	switch tag {
	case 3: // value.arr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ArrayConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Arr{msg}
		return true, err
	case 4: // value.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StringConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Str{msg}
		return true, err
	case 5: // value.int
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Int32Config)
		err := b.DecodeMessage(msg)
		m.Value = &ConfigItem_Int{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConfigItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ConfigItem)
	// value
	switch x := m.Value.(type) {
	case *ConfigItem_Arr:
		s := proto.Size(x.Arr)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConfigItem_Str:
		s := proto.Size(x.Str)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConfigItem_Int:
		s := proto.Size(x.Int)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ModifyConfig struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Op    string `protobuf:"bytes,3,opt,name=op" json:"op,omitempty"`
	Addr  string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *ModifyConfig) Reset()                    { *m = ModifyConfig{} }
func (m *ModifyConfig) String() string            { return proto.CompactTextString(m) }
func (*ModifyConfig) ProtoMessage()               {}
func (*ModifyConfig) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{64} }

func (m *ModifyConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ModifyConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ModifyConfig) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *ModifyConfig) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ManageAction struct {
	// Types that are valid to be assigned to Value:
	//	*ManageAction_Modify
	Value isManageAction_Value `protobuf_oneof:"value"`
	Ty    int32                `protobuf:"varint,2,opt,name=Ty" json:"Ty,omitempty"`
}

func (m *ManageAction) Reset()                    { *m = ManageAction{} }
func (m *ManageAction) String() string            { return proto.CompactTextString(m) }
func (*ManageAction) ProtoMessage()               {}
func (*ManageAction) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{65} }

type isManageAction_Value interface {
	isManageAction_Value()
}

type ManageAction_Modify struct {
	Modify *ModifyConfig `protobuf:"bytes,1,opt,name=modify,oneof"`
}

func (*ManageAction_Modify) isManageAction_Value() {}

func (m *ManageAction) GetValue() isManageAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ManageAction) GetModify() *ModifyConfig {
	if x, ok := m.GetValue().(*ManageAction_Modify); ok {
		return x.Modify
	}
	return nil
}

func (m *ManageAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ManageAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ManageAction_OneofMarshaler, _ManageAction_OneofUnmarshaler, _ManageAction_OneofSizer, []interface{}{
		(*ManageAction_Modify)(nil),
	}
}

func _ManageAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ManageAction)
	// value
	switch x := m.Value.(type) {
	case *ManageAction_Modify:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Modify); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ManageAction.Value has unexpected type %T", x)
	}
	return nil
}

func _ManageAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ManageAction)
	switch tag {
	case 1: // value.modify
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModifyConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ManageAction_Modify{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ManageAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ManageAction)
	// value
	switch x := m.Value.(type) {
	case *ManageAction_Modify:
		s := proto.Size(x.Modify)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReceiptConfig struct {
	Prev    *ConfigItem `protobuf:"bytes,1,opt,name=prev" json:"prev,omitempty"`
	Current *ConfigItem `protobuf:"bytes,2,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptConfig) Reset()                    { *m = ReceiptConfig{} }
func (m *ReceiptConfig) String() string            { return proto.CompactTextString(m) }
func (*ReceiptConfig) ProtoMessage()               {}
func (*ReceiptConfig) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{66} }

func (m *ReceiptConfig) GetPrev() *ConfigItem {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptConfig) GetCurrent() *ConfigItem {
	if m != nil {
		return m.Current
	}
	return nil
}

type ReplyConfig struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ReplyConfig) Reset()                    { *m = ReplyConfig{} }
func (m *ReplyConfig) String() string            { return proto.CompactTextString(m) }
func (*ReplyConfig) ProtoMessage()               {}
func (*ReplyConfig) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{67} }

func (m *ReplyConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReplyConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// 获取Token未完成卖单的交易列表
// 	 fromSellId : 第一次传参为空，获取卖单单价最低的列表。 当要获得下一页时， 传当前页最后一个；当要获得上一页时， 传当前页第一个。
// 	 count :获取交易列表的个数。
// 	 direction :查找方式；0，上一页；1，下一页。  越靠后的也单价越贵
type ReqTokenSellOrder struct {
	TokenSymbol string `protobuf:"bytes,1,opt,name=tokenSymbol" json:"tokenSymbol,omitempty"`
	FromSellId  string `protobuf:"bytes,2,opt,name=fromSellId" json:"fromSellId,omitempty"`
	Count       int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Direction   int32  `protobuf:"varint,4,opt,name=direction" json:"direction,omitempty"`
}

func (m *ReqTokenSellOrder) Reset()                    { *m = ReqTokenSellOrder{} }
func (m *ReqTokenSellOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqTokenSellOrder) ProtoMessage()               {}
func (*ReqTokenSellOrder) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{68} }

func (m *ReqTokenSellOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReqTokenSellOrder) GetFromSellId() string {
	if m != nil {
		return m.FromSellId
	}
	return ""
}

func (m *ReqTokenSellOrder) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqTokenSellOrder) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////////////
// message for Privacy start/////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
type PrivacyAction struct {
	// Types that are valid to be assigned to Value:
	//	*PrivacyAction_Public2Privacy
	//	*PrivacyAction_Privacy2Privacy
	//	*PrivacyAction_Privacy2Public
	Value isPrivacyAction_Value `protobuf_oneof:"value"`
	Ty    int32                 `protobuf:"varint,4,opt,name=ty" json:"ty,omitempty"`
}

func (m *PrivacyAction) Reset()                    { *m = PrivacyAction{} }
func (m *PrivacyAction) String() string            { return proto.CompactTextString(m) }
func (*PrivacyAction) ProtoMessage()               {}
func (*PrivacyAction) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{69} }

type isPrivacyAction_Value interface {
	isPrivacyAction_Value()
}

type PrivacyAction_Public2Privacy struct {
	Public2Privacy *Public2Privacy `protobuf:"bytes,1,opt,name=public2privacy,oneof"`
}
type PrivacyAction_Privacy2Privacy struct {
	Privacy2Privacy *Privacy2Privacy `protobuf:"bytes,2,opt,name=privacy2privacy,oneof"`
}
type PrivacyAction_Privacy2Public struct {
	Privacy2Public *Privacy2Public `protobuf:"bytes,3,opt,name=privacy2public,oneof"`
}

func (*PrivacyAction_Public2Privacy) isPrivacyAction_Value()  {}
func (*PrivacyAction_Privacy2Privacy) isPrivacyAction_Value() {}
func (*PrivacyAction_Privacy2Public) isPrivacyAction_Value()  {}

func (m *PrivacyAction) GetValue() isPrivacyAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PrivacyAction) GetPublic2Privacy() *Public2Privacy {
	if x, ok := m.GetValue().(*PrivacyAction_Public2Privacy); ok {
		return x.Public2Privacy
	}
	return nil
}

func (m *PrivacyAction) GetPrivacy2Privacy() *Privacy2Privacy {
	if x, ok := m.GetValue().(*PrivacyAction_Privacy2Privacy); ok {
		return x.Privacy2Privacy
	}
	return nil
}

func (m *PrivacyAction) GetPrivacy2Public() *Privacy2Public {
	if x, ok := m.GetValue().(*PrivacyAction_Privacy2Public); ok {
		return x.Privacy2Public
	}
	return nil
}

func (m *PrivacyAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PrivacyAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PrivacyAction_OneofMarshaler, _PrivacyAction_OneofUnmarshaler, _PrivacyAction_OneofSizer, []interface{}{
		(*PrivacyAction_Public2Privacy)(nil),
		(*PrivacyAction_Privacy2Privacy)(nil),
		(*PrivacyAction_Privacy2Public)(nil),
	}
}

func _PrivacyAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PrivacyAction)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction_Public2Privacy:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Public2Privacy); err != nil {
			return err
		}
	case *PrivacyAction_Privacy2Privacy:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Privacy); err != nil {
			return err
		}
	case *PrivacyAction_Privacy2Public:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Privacy2Public); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PrivacyAction.Value has unexpected type %T", x)
	}
	return nil
}

func _PrivacyAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PrivacyAction)
	switch tag {
	case 1: // value.public2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Public2Privacy)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Public2Privacy{msg}
		return true, err
	case 2: // value.privacy2privacy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Privacy)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Privacy2Privacy{msg}
		return true, err
	case 3: // value.privacy2public
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Privacy2Public)
		err := b.DecodeMessage(msg)
		m.Value = &PrivacyAction_Privacy2Public{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PrivacyAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PrivacyAction)
	// value
	switch x := m.Value.(type) {
	case *PrivacyAction_Public2Privacy:
		s := proto.Size(x.Public2Privacy)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction_Privacy2Privacy:
		s := proto.Size(x.Privacy2Privacy)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PrivacyAction_Privacy2Public:
		s := proto.Size(x.Privacy2Public)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Public2Privacy struct {
	Tokenname string `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	//    bytes RpubKeytx     = 3; //txpubkey, rG => R
	//    bytes onetimePubKey = 4; //Hs(rA)G + B
	Note   string         `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Output *PrivacyOutput `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Public2Privacy) Reset()                    { *m = Public2Privacy{} }
func (m *Public2Privacy) String() string            { return proto.CompactTextString(m) }
func (*Public2Privacy) ProtoMessage()               {}
func (*Public2Privacy) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{70} }

func (m *Public2Privacy) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Public2Privacy) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Public2Privacy) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Public2Privacy) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Privacy struct {
	Tokenname string `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	//    bytes RpubKeytx     = 3; //txpubkey, rG
	//    bytes onetimePubKey = 4; //Hs(rA)G + B
	Note   string         `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Input  *PrivacyInput  `protobuf:"bytes,6,opt,name=input" json:"input,omitempty"`
	Output *PrivacyOutput `protobuf:"bytes,7,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Privacy) Reset()                    { *m = Privacy2Privacy{} }
func (m *Privacy2Privacy) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Privacy) ProtoMessage()               {}
func (*Privacy2Privacy) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{71} }

func (m *Privacy2Privacy) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Privacy) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Privacy) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Privacy) GetInput() *PrivacyInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Privacy) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type Privacy2Public struct {
	Tokenname string         `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Note      string         `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	Input     *PrivacyInput  `protobuf:"bytes,4,opt,name=input" json:"input,omitempty"`
	Output    *PrivacyOutput `protobuf:"bytes,5,opt,name=output" json:"output,omitempty"`
}

func (m *Privacy2Public) Reset()                    { *m = Privacy2Public{} }
func (m *Privacy2Public) String() string            { return proto.CompactTextString(m) }
func (*Privacy2Public) ProtoMessage()               {}
func (*Privacy2Public) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{72} }

func (m *Privacy2Public) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *Privacy2Public) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privacy2Public) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Privacy2Public) GetInput() *PrivacyInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Privacy2Public) GetOutput() *PrivacyOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type UTXOGlobalIndex struct {
	Height   int64  `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Txindex  int32  `protobuf:"varint,2,opt,name=txindex" json:"txindex,omitempty"`
	Outindex int32  `protobuf:"varint,3,opt,name=outindex" json:"outindex,omitempty"`
	Txhash   []byte `protobuf:"bytes,4,opt,name=txhash,proto3" json:"txhash,omitempty"`
}

func (m *UTXOGlobalIndex) Reset()                    { *m = UTXOGlobalIndex{} }
func (m *UTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*UTXOGlobalIndex) ProtoMessage()               {}
func (*UTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{73} }

func (m *UTXOGlobalIndex) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *UTXOGlobalIndex) GetTxindex() int32 {
	if m != nil {
		return m.Txindex
	}
	return 0
}

func (m *UTXOGlobalIndex) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

func (m *UTXOGlobalIndex) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

// privacy input
type KeyInput struct {
	Amount          int64              `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
	KeyImage        []byte             `protobuf:"bytes,3,opt,name=keyImage,proto3" json:"keyImage,omitempty"`
}

func (m *KeyInput) Reset()                    { *m = KeyInput{} }
func (m *KeyInput) String() string            { return proto.CompactTextString(m) }
func (*KeyInput) ProtoMessage()               {}
func (*KeyInput) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{74} }

func (m *KeyInput) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyInput) GetUtxoGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

func (m *KeyInput) GetKeyImage() []byte {
	if m != nil {
		return m.KeyImage
	}
	return nil
}

type PrivacyInput struct {
	Keyinput []*KeyInput `protobuf:"bytes,1,rep,name=keyinput" json:"keyinput,omitempty"`
}

func (m *PrivacyInput) Reset()                    { *m = PrivacyInput{} }
func (m *PrivacyInput) String() string            { return proto.CompactTextString(m) }
func (*PrivacyInput) ProtoMessage()               {}
func (*PrivacyInput) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{75} }

func (m *PrivacyInput) GetKeyinput() []*KeyInput {
	if m != nil {
		return m.Keyinput
	}
	return nil
}

// privacy output
type KeyOutput struct {
	Amount        int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Ometimepubkey []byte `protobuf:"bytes,2,opt,name=ometimepubkey,proto3" json:"ometimepubkey,omitempty"`
}

func (m *KeyOutput) Reset()                    { *m = KeyOutput{} }
func (m *KeyOutput) String() string            { return proto.CompactTextString(m) }
func (*KeyOutput) ProtoMessage()               {}
func (*KeyOutput) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{76} }

func (m *KeyOutput) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *KeyOutput) GetOmetimepubkey() []byte {
	if m != nil {
		return m.Ometimepubkey
	}
	return nil
}

type PrivacyOutput struct {
	RpubKeytx []byte       `protobuf:"bytes,1,opt,name=RpubKeytx,proto3" json:"RpubKeytx,omitempty"`
	Keyoutput []*KeyOutput `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *PrivacyOutput) Reset()                    { *m = PrivacyOutput{} }
func (m *PrivacyOutput) String() string            { return proto.CompactTextString(m) }
func (*PrivacyOutput) ProtoMessage()               {}
func (*PrivacyOutput) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{77} }

func (m *PrivacyOutput) GetRpubKeytx() []byte {
	if m != nil {
		return m.RpubKeytx
	}
	return nil
}

func (m *PrivacyOutput) GetKeyoutput() []*KeyOutput {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

type GroupUTXOGlobalIndex struct {
	Amount          int64              `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoGlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,2,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
}

func (m *GroupUTXOGlobalIndex) Reset()                    { *m = GroupUTXOGlobalIndex{} }
func (m *GroupUTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*GroupUTXOGlobalIndex) ProtoMessage()               {}
func (*GroupUTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{78} }

func (m *GroupUTXOGlobalIndex) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GroupUTXOGlobalIndex) GetUtxoGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

type LocalUTXOItem struct {
	Height        int64  `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Txindex       int32  `protobuf:"varint,2,opt,name=txindex" json:"txindex,omitempty"`
	Outindex      int32  `protobuf:"varint,3,opt,name=outindex" json:"outindex,omitempty"`
	Txhash        []byte `protobuf:"bytes,4,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Ometimepubkey []byte `protobuf:"bytes,5,opt,name=ometimepubkey,proto3" json:"ometimepubkey,omitempty"`
}

func (m *LocalUTXOItem) Reset()                    { *m = LocalUTXOItem{} }
func (m *LocalUTXOItem) String() string            { return proto.CompactTextString(m) }
func (*LocalUTXOItem) ProtoMessage()               {}
func (*LocalUTXOItem) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{79} }

func (m *LocalUTXOItem) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *LocalUTXOItem) GetTxindex() int32 {
	if m != nil {
		return m.Txindex
	}
	return 0
}

func (m *LocalUTXOItem) GetOutindex() int32 {
	if m != nil {
		return m.Outindex
	}
	return 0
}

func (m *LocalUTXOItem) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

func (m *LocalUTXOItem) GetOmetimepubkey() []byte {
	if m != nil {
		return m.Ometimepubkey
	}
	return nil
}

type ReqUTXOPubKeys struct {
	TokenName            string                  `protobuf:"bytes,1,opt,name=tokenName" json:"tokenName,omitempty"`
	GroupUTXOGlobalIndex []*GroupUTXOGlobalIndex `protobuf:"bytes,2,rep,name=groupUTXOGlobalIndex" json:"groupUTXOGlobalIndex,omitempty"`
}

func (m *ReqUTXOPubKeys) Reset()                    { *m = ReqUTXOPubKeys{} }
func (m *ReqUTXOPubKeys) String() string            { return proto.CompactTextString(m) }
func (*ReqUTXOPubKeys) ProtoMessage()               {}
func (*ReqUTXOPubKeys) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{80} }

func (m *ReqUTXOPubKeys) GetTokenName() string {
	if m != nil {
		return m.TokenName
	}
	return ""
}

func (m *ReqUTXOPubKeys) GetGroupUTXOGlobalIndex() []*GroupUTXOGlobalIndex {
	if m != nil {
		return m.GroupUTXOGlobalIndex
	}
	return nil
}

type GroupUTXOPubKey struct {
	Amount int64    `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Pubkey [][]byte `protobuf:"bytes,2,rep,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (m *GroupUTXOPubKey) Reset()                    { *m = GroupUTXOPubKey{} }
func (m *GroupUTXOPubKey) String() string            { return proto.CompactTextString(m) }
func (*GroupUTXOPubKey) ProtoMessage()               {}
func (*GroupUTXOPubKey) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{81} }

func (m *GroupUTXOPubKey) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GroupUTXOPubKey) GetPubkey() [][]byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

type ResUTXOPubKeys struct {
	GroupUTXOPubKeys []*GroupUTXOPubKey `protobuf:"bytes,1,rep,name=groupUTXOPubKeys" json:"groupUTXOPubKeys,omitempty"`
}

func (m *ResUTXOPubKeys) Reset()                    { *m = ResUTXOPubKeys{} }
func (m *ResUTXOPubKeys) String() string            { return proto.CompactTextString(m) }
func (*ResUTXOPubKeys) ProtoMessage()               {}
func (*ResUTXOPubKeys) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{82} }

func (m *ResUTXOPubKeys) GetGroupUTXOPubKeys() []*GroupUTXOPubKey {
	if m != nil {
		return m.GroupUTXOPubKeys
	}
	return nil
}

type ReqPrivacyToken struct {
	Token  string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Amount int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *ReqPrivacyToken) Reset()                    { *m = ReqPrivacyToken{} }
func (m *ReqPrivacyToken) String() string            { return proto.CompactTextString(m) }
func (*ReqPrivacyToken) ProtoMessage()               {}
func (*ReqPrivacyToken) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{83} }

func (m *ReqPrivacyToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReqPrivacyToken) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type ReplyPrivacyAmounts struct {
	Amount []int64 `protobuf:"varint,1,rep,packed,name=amount" json:"amount,omitempty"`
}

func (m *ReplyPrivacyAmounts) Reset()                    { *m = ReplyPrivacyAmounts{} }
func (m *ReplyPrivacyAmounts) String() string            { return proto.CompactTextString(m) }
func (*ReplyPrivacyAmounts) ProtoMessage()               {}
func (*ReplyPrivacyAmounts) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{84} }

func (m *ReplyPrivacyAmounts) GetAmount() []int64 {
	if m != nil {
		return m.Amount
	}
	return nil
}

type ReplyUTXOsOfAmount struct {
	GlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,1,rep,name=globalIndex" json:"globalIndex,omitempty"`
}

func (m *ReplyUTXOsOfAmount) Reset()                    { *m = ReplyUTXOsOfAmount{} }
func (m *ReplyUTXOsOfAmount) String() string            { return proto.CompactTextString(m) }
func (*ReplyUTXOsOfAmount) ProtoMessage()               {}
func (*ReplyUTXOsOfAmount) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{85} }

func (m *ReplyUTXOsOfAmount) GetGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.GlobalIndex
	}
	return nil
}

type ReceiptPrivacyOutput struct {
	Token     string       `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Keyoutput []*KeyOutput `protobuf:"bytes,2,rep,name=keyoutput" json:"keyoutput,omitempty"`
}

func (m *ReceiptPrivacyOutput) Reset()                    { *m = ReceiptPrivacyOutput{} }
func (m *ReceiptPrivacyOutput) String() string            { return proto.CompactTextString(m) }
func (*ReceiptPrivacyOutput) ProtoMessage()               {}
func (*ReceiptPrivacyOutput) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{86} }

func (m *ReceiptPrivacyOutput) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReceiptPrivacyOutput) GetKeyoutput() []*KeyOutput {
	if m != nil {
		return m.Keyoutput
	}
	return nil
}

type AmountsOfUTXO struct {
	AmountMap map[int64]bool `protobuf:"bytes,1,rep,name=amountMap" json:"amountMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *AmountsOfUTXO) Reset()                    { *m = AmountsOfUTXO{} }
func (m *AmountsOfUTXO) String() string            { return proto.CompactTextString(m) }
func (*AmountsOfUTXO) ProtoMessage()               {}
func (*AmountsOfUTXO) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{87} }

func (m *AmountsOfUTXO) GetAmountMap() map[int64]bool {
	if m != nil {
		return m.AmountMap
	}
	return nil
}

type TokenNamesOfUTXO struct {
	TokensMap map[string]bool `protobuf:"bytes,1,rep,name=tokensMap" json:"tokensMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *TokenNamesOfUTXO) Reset()                    { *m = TokenNamesOfUTXO{} }
func (m *TokenNamesOfUTXO) String() string            { return proto.CompactTextString(m) }
func (*TokenNamesOfUTXO) ProtoMessage()               {}
func (*TokenNamesOfUTXO) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{88} }

func (m *TokenNamesOfUTXO) GetTokensMap() map[string]bool {
	if m != nil {
		return m.TokensMap
	}
	return nil
}

func init() {
	proto.RegisterType((*Genesis)(nil), "types.Genesis")
	proto.RegisterType((*CoinsAction)(nil), "types.CoinsAction")
	proto.RegisterType((*CoinsGenesis)(nil), "types.CoinsGenesis")
	proto.RegisterType((*CoinsTransfer)(nil), "types.CoinsTransfer")
	proto.RegisterType((*CoinsWithdraw)(nil), "types.CoinsWithdraw")
	proto.RegisterType((*Hashlock)(nil), "types.Hashlock")
	proto.RegisterType((*HashlockAction)(nil), "types.HashlockAction")
	proto.RegisterType((*HashlockLock)(nil), "types.HashlockLock")
	proto.RegisterType((*HashlockUnlock)(nil), "types.HashlockUnlock")
	proto.RegisterType((*HashlockSend)(nil), "types.HashlockSend")
	proto.RegisterType((*HashRecv)(nil), "types.HashRecv")
	proto.RegisterType((*Hashlockquery)(nil), "types.Hashlockquery")
	proto.RegisterType((*Ticket)(nil), "types.Ticket")
	proto.RegisterType((*TicketAction)(nil), "types.TicketAction")
	proto.RegisterType((*TicketMiner)(nil), "types.TicketMiner")
	proto.RegisterType((*TicketBind)(nil), "types.TicketBind")
	proto.RegisterType((*TicketOpen)(nil), "types.TicketOpen")
	proto.RegisterType((*TicketGenesis)(nil), "types.TicketGenesis")
	proto.RegisterType((*TicketClose)(nil), "types.TicketClose")
	proto.RegisterType((*TicketList)(nil), "types.TicketList")
	proto.RegisterType((*TicketInfos)(nil), "types.TicketInfos")
	proto.RegisterType((*ReplyTicketList)(nil), "types.ReplyTicketList")
	proto.RegisterType((*ReplyWalletTickets)(nil), "types.ReplyWalletTickets")
	proto.RegisterType((*ReceiptTicket)(nil), "types.ReceiptTicket")
	proto.RegisterType((*ReceiptTicketBind)(nil), "types.ReceiptTicketBind")
	proto.RegisterType((*ExecTxList)(nil), "types.ExecTxList")
	proto.RegisterType((*Query)(nil), "types.Query")
	proto.RegisterType((*RetrievePara)(nil), "types.RetrievePara")
	proto.RegisterType((*Retrieve)(nil), "types.Retrieve")
	proto.RegisterType((*RetrieveAction)(nil), "types.RetrieveAction")
	proto.RegisterType((*BackupRetrieve)(nil), "types.BackupRetrieve")
	proto.RegisterType((*PreRetrieve)(nil), "types.PreRetrieve")
	proto.RegisterType((*PerformRetrieve)(nil), "types.PerformRetrieve")
	proto.RegisterType((*CancelRetrieve)(nil), "types.CancelRetrieve")
	proto.RegisterType((*ReqRetrieveInfo)(nil), "types.ReqRetrieveInfo")
	proto.RegisterType((*RetrieveQuery)(nil), "types.RetrieveQuery")
	proto.RegisterType((*TokenAction)(nil), "types.TokenAction")
	proto.RegisterType((*TokenPreCreate)(nil), "types.TokenPreCreate")
	proto.RegisterType((*TokenFinishCreate)(nil), "types.TokenFinishCreate")
	proto.RegisterType((*TokenRevokeCreate)(nil), "types.TokenRevokeCreate")
	proto.RegisterType((*Token)(nil), "types.Token")
	proto.RegisterType((*ReqTokens)(nil), "types.ReqTokens")
	proto.RegisterType((*ReplyTokens)(nil), "types.ReplyTokens")
	proto.RegisterType((*ReceiptToken)(nil), "types.ReceiptToken")
	proto.RegisterType((*Trade)(nil), "types.Trade")
	proto.RegisterType((*TradeForSell)(nil), "types.TradeForSell")
	proto.RegisterType((*SellOrder)(nil), "types.SellOrder")
	proto.RegisterType((*SellOrderReceipt)(nil), "types.SellOrderReceipt")
	proto.RegisterType((*ReqAddrTokens)(nil), "types.ReqAddrTokens")
	proto.RegisterType((*ReplySellOrders)(nil), "types.ReplySellOrders")
	proto.RegisterType((*TokenRecv)(nil), "types.TokenRecv")
	proto.RegisterType((*ReplyAddrRecvForTokens)(nil), "types.ReplyAddrRecvForTokens")
	proto.RegisterType((*TradeForBuy)(nil), "types.TradeForBuy")
	proto.RegisterType((*TradeForRevokeSell)(nil), "types.TradeForRevokeSell")
	proto.RegisterType((*ReceiptTradeBase)(nil), "types.ReceiptTradeBase")
	proto.RegisterType((*ReceiptTradeSell)(nil), "types.ReceiptTradeSell")
	proto.RegisterType((*ReceiptTradeBuy)(nil), "types.ReceiptTradeBuy")
	proto.RegisterType((*ReceiptTradeRevoke)(nil), "types.ReceiptTradeRevoke")
	proto.RegisterType((*TradeBuyDone)(nil), "types.TradeBuyDone")
	proto.RegisterType((*ReplyTradeBuyOrders)(nil), "types.ReplyTradeBuyOrders")
	proto.RegisterType((*ArrayConfig)(nil), "types.ArrayConfig")
	proto.RegisterType((*StringConfig)(nil), "types.StringConfig")
	proto.RegisterType((*Int32Config)(nil), "types.Int32Config")
	proto.RegisterType((*ConfigItem)(nil), "types.ConfigItem")
	proto.RegisterType((*ModifyConfig)(nil), "types.ModifyConfig")
	proto.RegisterType((*ManageAction)(nil), "types.ManageAction")
	proto.RegisterType((*ReceiptConfig)(nil), "types.ReceiptConfig")
	proto.RegisterType((*ReplyConfig)(nil), "types.ReplyConfig")
	proto.RegisterType((*ReqTokenSellOrder)(nil), "types.ReqTokenSellOrder")
	proto.RegisterType((*PrivacyAction)(nil), "types.PrivacyAction")
	proto.RegisterType((*Public2Privacy)(nil), "types.Public2Privacy")
	proto.RegisterType((*Privacy2Privacy)(nil), "types.Privacy2Privacy")
	proto.RegisterType((*Privacy2Public)(nil), "types.Privacy2Public")
	proto.RegisterType((*UTXOGlobalIndex)(nil), "types.UTXOGlobalIndex")
	proto.RegisterType((*KeyInput)(nil), "types.KeyInput")
	proto.RegisterType((*PrivacyInput)(nil), "types.PrivacyInput")
	proto.RegisterType((*KeyOutput)(nil), "types.keyOutput")
	proto.RegisterType((*PrivacyOutput)(nil), "types.PrivacyOutput")
	proto.RegisterType((*GroupUTXOGlobalIndex)(nil), "types.GroupUTXOGlobalIndex")
	proto.RegisterType((*LocalUTXOItem)(nil), "types.LocalUTXOItem")
	proto.RegisterType((*ReqUTXOPubKeys)(nil), "types.ReqUTXOPubKeys")
	proto.RegisterType((*GroupUTXOPubKey)(nil), "types.GroupUTXOPubKey")
	proto.RegisterType((*ResUTXOPubKeys)(nil), "types.ResUTXOPubKeys")
	proto.RegisterType((*ReqPrivacyToken)(nil), "types.ReqPrivacyToken")
	proto.RegisterType((*ReplyPrivacyAmounts)(nil), "types.ReplyPrivacyAmounts")
	proto.RegisterType((*ReplyUTXOsOfAmount)(nil), "types.replyUTXOsOfAmount")
	proto.RegisterType((*ReceiptPrivacyOutput)(nil), "types.ReceiptPrivacyOutput")
	proto.RegisterType((*AmountsOfUTXO)(nil), "types.AmountsOfUTXO")
	proto.RegisterType((*TokenNamesOfUTXO)(nil), "types.TokenNamesOfUTXO")
}

func init() { proto.RegisterFile("executor.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 3065 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0xcd, 0x8f, 0x1c, 0x47,
	0x15, 0xdf, 0x9e, 0xef, 0x79, 0x33, 0xb3, 0xbb, 0xee, 0x2c, 0x66, 0x09, 0x96, 0x89, 0x3a, 0xc6,
	0x71, 0x62, 0xc7, 0x09, 0x6b, 0x22, 0x85, 0x80, 0x14, 0x76, 0x9d, 0xc4, 0xb3, 0x8a, 0xed, 0x5d,
	0xca, 0x9b, 0x98, 0xf0, 0x15, 0x7a, 0xba, 0x6b, 0x76, 0x5b, 0xd3, 0xd3, 0xdd, 0xae, 0xee, 0xde,
	0xdd, 0xc9, 0x85, 0x88, 0x03, 0x22, 0x07, 0x24, 0x84, 0x00, 0x21, 0x71, 0xe3, 0x88, 0xc4, 0x05,
	0x10, 0x57, 0x2e, 0xdc, 0x90, 0x38, 0x22, 0x71, 0xe1, 0x3f, 0x80, 0x2b, 0x57, 0x54, 0x55, 0xaf,
	0xba, 0xab, 0xbb, 0x67, 0xec, 0x59, 0xb2, 0x44, 0x88, 0xdb, 0xd4, 0xab, 0x5f, 0xbd, 0x7a, 0xf5,
	0xbe, 0xab, 0x7a, 0x60, 0x95, 0x9e, 0x52, 0x27, 0x4d, 0x42, 0x76, 0x33, 0x62, 0x61, 0x12, 0x9a,
	0xcd, 0x64, 0x16, 0xd1, 0xf8, 0xe9, 0x0b, 0x09, 0xb3, 0x83, 0xd8, 0x76, 0x12, 0x2f, 0x0c, 0xe4,
	0x8c, 0xf5, 0x39, 0x68, 0xdf, 0xa1, 0x01, 0x8d, 0xbd, 0xd8, 0xdc, 0x80, 0xa6, 0x17, 0xb3, 0x34,
	0xd8, 0x34, 0x9e, 0x31, 0xae, 0x75, 0x88, 0x1c, 0x58, 0x7f, 0x34, 0xa0, 0x77, 0x3b, 0xf4, 0x82,
	0x78, 0x5b, 0x2c, 0x33, 0xb7, 0xa0, 0x23, 0xb8, 0x8c, 0x29, 0x13, 0xc0, 0xde, 0xd6, 0xc6, 0x4d,
	0xc1, 0xfd, 0xa6, 0x40, 0x1d, 0xe0, 0xdc, 0x70, 0x85, 0x64, 0x38, 0xbe, 0xe6, 0xc4, 0x4b, 0x8e,
	0x5c, 0x66, 0x9f, 0x6c, 0x36, 0xaa, 0x6b, 0x1e, 0xe2, 0x1c, 0x5f, 0xa3, 0x70, 0xe6, 0x4b, 0xd0,
	0x3e, 0x94, 0x82, 0x6d, 0xd6, 0xc4, 0x92, 0xa7, 0xf4, 0x25, 0x28, 0xf3, 0x70, 0x85, 0x28, 0x94,
	0xb9, 0x0a, 0xb5, 0x64, 0xb6, 0x59, 0x7f, 0xc6, 0xb8, 0xd6, 0x24, 0xb5, 0x64, 0xb6, 0xd3, 0x86,
	0xe6, 0xb1, 0xed, 0xa7, 0xd4, 0xba, 0x0b, 0x7d, 0x7d, 0x8d, 0x79, 0x11, 0x5a, 0xf6, 0x34, 0x4c,
	0x83, 0x44, 0x30, 0xae, 0x13, 0x1c, 0x99, 0x57, 0x60, 0xc0, 0x68, 0x92, 0xb2, 0x60, 0xdb, 0x75,
	0x19, 0x8d, 0x63, 0xc1, 0xab, 0x4b, 0x8a, 0x44, 0xeb, 0x3d, 0x18, 0x14, 0x0e, 0x6a, 0x5e, 0x82,
	0xae, 0x13, 0x7a, 0x41, 0x12, 0x4e, 0xa8, 0x54, 0x5d, 0x97, 0xe4, 0x84, 0x85, 0x9b, 0x99, 0xd0,
	0x08, 0xc2, 0x84, 0xe2, 0x1e, 0xe2, 0x77, 0xc6, 0x5a, 0xe9, 0xe3, 0x1c, 0x59, 0xff, 0xdd, 0x80,
	0xce, 0xd0, 0x8e, 0x8f, 0xfc, 0xd0, 0x99, 0x98, 0x97, 0x01, 0x8e, 0xf0, 0xf7, 0xae, 0x2b, 0xf8,
	0xf6, 0x89, 0x46, 0xe1, 0x8c, 0xe3, 0xc4, 0x4e, 0x52, 0xa9, 0xf9, 0x26, 0xc1, 0x11, 0x5f, 0x77,
	0x9b, 0x51, 0x3b, 0xa1, 0x07, 0xde, 0x54, 0xb2, 0xaf, 0x13, 0x8d, 0xc2, 0xc5, 0x4d, 0x42, 0xa5,
	0xbc, 0x86, 0x14, 0x37, 0x23, 0x54, 0xd5, 0xdb, 0x9c, 0xa3, 0x5e, 0xed, 0x50, 0xad, 0xc2, 0xa1,
	0x2e, 0x03, 0x8c, 0x59, 0xf8, 0x01, 0x0d, 0x12, 0xbe, 0x77, 0x5b, 0xee, 0x9d, 0x53, 0xac, 0x3f,
	0x18, 0xb0, 0xaa, 0x0e, 0x88, 0x9e, 0x7a, 0x1d, 0x9a, 0x62, 0x88, 0x6e, 0xaa, 0xfc, 0x47, 0xa1,
	0xee, 0x86, 0xce, 0x64, 0xb8, 0x42, 0x24, 0x46, 0x80, 0x63, 0x1a, 0xb8, 0x25, 0x67, 0x53, 0xe0,
	0x07, 0x34, 0x70, 0x05, 0x98, 0x63, 0xcc, 0x2f, 0x40, 0xfb, 0x28, 0x0d, 0x04, 0xef, 0xba, 0x80,
	0x7f, 0xaa, 0x04, 0x7f, 0x47, 0x4c, 0x72, 0xef, 0x44, 0x1c, 0x7a, 0x67, 0xa3, 0xea, 0x9d, 0x3f,
	0x31, 0xa0, 0xaf, 0x8b, 0xa4, 0x69, 0xc0, 0x28, 0x9b, 0x55, 0x9c, 0x5d, 0x1a, 0x5b, 0xfc, 0xe6,
	0x34, 0x6e, 0x37, 0x21, 0x45, 0x9f, 0x88, 0xdf, 0xe7, 0x61, 0x05, 0xeb, 0x5a, 0xae, 0x4c, 0x79,
	0x14, 0xe1, 0x13, 0xd4, 0x61, 0x34, 0x41, 0x7f, 0xc1, 0x91, 0x75, 0x35, 0x97, 0x9e, 0xeb, 0x68,
	0x21, 0xee, 0xbb, 0xd2, 0xff, 0x08, 0x75, 0x8e, 0xb9, 0x2d, 0x87, 0x15, 0xff, 0xcb, 0x29, 0xe6,
	0x17, 0x01, 0x76, 0x83, 0x71, 0x38, 0xb5, 0xb9, 0x19, 0xd1, 0x20, 0x1b, 0x25, 0x0d, 0x3f, 0x4a,
	0x29, 0x9b, 0x11, 0x0d, 0x67, 0xfd, 0xcc, 0x80, 0x41, 0x61, 0x36, 0xd3, 0x98, 0xa1, 0x69, 0x6c,
	0x91, 0x6f, 0xe7, 0x5a, 0xaf, 0x97, 0xfd, 0xce, 0xc9, 0x7d, 0xbe, 0x21, 0xfd, 0x2e, 0xa7, 0x98,
	0xcf, 0x40, 0xcf, 0x49, 0x19, 0xa3, 0x41, 0x22, 0x00, 0x4d, 0x01, 0xd0, 0x49, 0xd6, 0xf7, 0x6b,
	0xd0, 0x3a, 0xf0, 0x9c, 0x09, 0x4d, 0xcc, 0xa7, 0xa1, 0x93, 0x88, 0x5f, 0x78, 0xec, 0x2e, 0xc9,
	0xc6, 0x0b, 0x05, 0xbb, 0x04, 0x5d, 0x4f, 0xa5, 0x2e, 0x21, 0x5b, 0x87, 0xe4, 0x84, 0x27, 0x8a,
	0x77, 0x09, 0xba, 0x53, 0x2f, 0xa0, 0x4c, 0x13, 0x2e, 0x27, 0xf0, 0xd5, 0x62, 0xf0, 0x2e, 0xf7,
	0xc4, 0xcd, 0x8e, 0x5c, 0x9d, 0x53, 0x4c, 0x0b, 0xfa, 0x62, 0xa4, 0x7c, 0xa5, 0x25, 0x64, 0x2e,
	0xd0, 0xaa, 0x0e, 0xd5, 0x9e, 0xe7, 0x50, 0x1f, 0xd5, 0xa0, 0x2f, 0x95, 0x80, 0xc1, 0xf9, 0x3c,
	0x34, 0x93, 0x91, 0x17, 0xb8, 0x42, 0xa8, 0xde, 0xd6, 0x05, 0x34, 0xaf, 0xc4, 0xec, 0x78, 0x32,
	0xda, 0x04, 0x42, 0x40, 0xc3, 0x08, 0x33, 0x60, 0x19, 0xba, 0x17, 0xd1, 0x40, 0x40, 0x39, 0xc2,
	0x7c, 0xb9, 0x5c, 0x34, 0x36, 0x0a, 0xe0, 0x39, 0x55, 0xe3, 0x06, 0xb4, 0x12, 0xc7, 0x0f, 0x63,
	0x8a, 0x91, 0x6c, 0x16, 0x16, 0xdc, 0xe6, 0x33, 0xc3, 0x15, 0x82, 0x18, 0xf3, 0x05, 0x68, 0x8a,
	0xc3, 0x63, 0x15, 0x2b, 0x82, 0xef, 0xf1, 0x19, 0x2e, 0x8b, 0x80, 0x60, 0xc4, 0x43, 0x35, 0xe2,
	0xa7, 0xd0, 0xd3, 0x16, 0x70, 0x2f, 0x1d, 0x79, 0x49, 0x2c, 0x4e, 0x37, 0x20, 0xe2, 0x37, 0x77,
	0x06, 0x46, 0x4f, 0x6c, 0xe6, 0xaa, 0xd4, 0x2e, 0x47, 0x05, 0x07, 0xaa, 0x57, 0x1d, 0x68, 0x1a,
	0xba, 0xde, 0x58, 0x66, 0x99, 0x3e, 0xc1, 0x91, 0xf5, 0x2e, 0x40, 0xae, 0xd5, 0x8a, 0x49, 0x8d,
	0x65, 0x4c, 0x5a, 0x9b, 0x67, 0x52, 0x5f, 0xf1, 0xe5, 0x26, 0x58, 0x8a, 0xef, 0x06, 0x34, 0x9d,
	0xac, 0x5e, 0x35, 0x89, 0x1c, 0x2c, 0x59, 0x76, 0x43, 0x18, 0x14, 0x6c, 0x78, 0x7e, 0x07, 0xc9,
	0xc5, 0xaa, 0x6b, 0x62, 0x59, 0xcf, 0x2b, 0x2b, 0x09, 0x1f, 0x28, 0x85, 0x6e, 0x5d, 0xd7, 0xbc,
	0xf5, 0xaa, 0xd2, 0xc4, 0x5d, 0x2f, 0x16, 0x79, 0xda, 0x76, 0x5d, 0x86, 0x02, 0x89, 0xdf, 0x5a,
	0x70, 0xd7, 0xf5, 0xe0, 0xb6, 0xae, 0xab, 0x4d, 0x78, 0x1e, 0x13, 0xb1, 0xae, 0x98, 0xc6, 0xb8,
	0x4b, 0x4e, 0xb0, 0x5e, 0x83, 0x35, 0x42, 0x23, 0x7f, 0xa6, 0xed, 0xf5, 0x1c, 0xb4, 0xe5, 0xbc,
	0x84, 0xf7, 0xb6, 0x06, 0x05, 0x8f, 0x24, 0x6a, 0xd6, 0x7a, 0x0f, 0x4c, 0xb1, 0xf6, 0xa1, 0xed,
	0xfb, 0x34, 0x91, 0xb3, 0xf1, 0xd2, 0xcb, 0xf9, 0xe9, 0x23, 0xe6, 0x1d, 0x4f, 0xe8, 0x8c, 0xeb,
	0xb0, 0x7e, 0xad, 0x4f, 0xb2, 0xb1, 0x75, 0x02, 0x03, 0x42, 0x1d, 0xea, 0x45, 0xc9, 0xc7, 0xc8,
	0x72, 0x97, 0x01, 0x22, 0x46, 0x8f, 0x1f, 0xe8, 0x4a, 0xd2, 0x28, 0x99, 0x52, 0x1b, 0xb9, 0x52,
	0xad, 0x1f, 0x19, 0x70, 0xa1, 0xb0, 0xb3, 0x70, 0xf0, 0x6b, 0xb0, 0x16, 0xfa, 0xee, 0xbd, 0xaa,
	0x6b, 0x94, 0xc9, 0x1c, 0x19, 0xd0, 0x93, 0x02, 0x52, 0xfa, 0x47, 0x99, 0xbc, 0xa4, 0x8b, 0xfe,
	0xc0, 0x00, 0x78, 0xf3, 0x94, 0x3a, 0x07, 0xa7, 0xc2, 0x36, 0x97, 0xa0, 0xcb, 0x0f, 0x47, 0x79,
	0x4d, 0xc2, 0x22, 0x97, 0x13, 0xcc, 0x2b, 0x50, 0x4f, 0x4e, 0xa5, 0x32, 0xb5, 0x3c, 0x92, 0xb7,
	0xe7, 0x84, 0x4f, 0x73, 0x1e, 0x23, 0x5e, 0xcf, 0xb4, 0x86, 0x2b, 0x27, 0x70, 0x65, 0x1e, 0x51,
	0xef, 0xf0, 0x28, 0xc1, 0xc4, 0x8f, 0x23, 0xeb, 0x1d, 0x68, 0x7e, 0x4d, 0x14, 0xc0, 0x8b, 0xd0,
	0xe2, 0x17, 0x01, 0xec, 0xd4, 0xfb, 0x04, 0x47, 0xdc, 0x42, 0xe3, 0x34, 0x70, 0xee, 0xdb, 0xd8,
	0x4e, 0x74, 0x49, 0x36, 0x36, 0x37, 0xa1, 0x1d, 0xd9, 0x33, 0x3f, 0xb4, 0x5d, 0xec, 0x2a, 0xd4,
	0xd0, 0xfa, 0xad, 0x01, 0x7d, 0x42, 0x13, 0xe6, 0xd1, 0x63, 0xba, 0x6f, 0x33, 0xdb, 0xbc, 0x0a,
	0xab, 0x2e, 0x1d, 0xdb, 0xa9, 0x9f, 0x14, 0x35, 0x5d, 0xa2, 0x3e, 0xce, 0xe8, 0x4e, 0xa5, 0x9f,
	0x2c, 0xd6, 0xd6, 0x88, 0xd1, 0xc8, 0x66, 0x7a, 0x75, 0xd3, 0x49, 0x1c, 0xe1, 0x52, 0xdf, 0x9e,
	0xed, 0x53, 0xe6, 0x85, 0xae, 0xaa, 0xbe, 0x1a, 0xc9, 0x7a, 0x1f, 0x3a, 0x4a, 0x66, 0x6e, 0xc6,
	0x91, 0xed, 0x4c, 0xd2, 0xa8, 0x28, 0x6e, 0x91, 0x68, 0xbe, 0x08, 0x6d, 0x46, 0x13, 0x7e, 0x40,
	0xb4, 0x8e, 0xea, 0x05, 0xf5, 0xb3, 0x13, 0x85, 0xb1, 0xfe, 0x61, 0xc0, 0xaa, 0x9a, 0xc1, 0xda,
	0x76, 0x03, 0x5a, 0x11, 0xa3, 0x04, 0x7b, 0xa0, 0xdc, 0xbc, 0xfb, 0x82, 0x28, 0x90, 0xbc, 0xa6,
	0x48, 0x8c, 0xb9, 0x05, 0xed, 0x88, 0xb2, 0x31, 0x87, 0xcb, 0x9a, 0x75, 0x51, 0xc1, 0x29, 0x1b,
	0x87, 0x6c, 0xaa, 0x2d, 0x51, 0x40, 0xf3, 0x25, 0x68, 0x49, 0xa1, 0x4b, 0xfd, 0xe7, 0x8e, 0x20,
	0xea, 0x9b, 0x48, 0x18, 0x5f, 0xe0, 0xd8, 0x81, 0x43, 0x7d, 0xac, 0x5c, 0x6a, 0xc1, 0x6d, 0x41,
	0xd4, 0x17, 0x48, 0x18, 0x56, 0xaf, 0x66, 0xb5, 0x7a, 0x7d, 0x68, 0xc0, 0x6a, 0x71, 0x9b, 0x25,
	0xf5, 0x5a, 0xf5, 0x96, 0xda, 0x5c, 0x6f, 0x29, 0xd9, 0xb4, 0x5e, 0xb5, 0xe9, 0x37, 0xa1, 0xa7,
	0xa9, 0xf2, 0x7c, 0xb7, 0xb7, 0xde, 0x87, 0xb5, 0x92, 0xe2, 0xcf, 0x79, 0x83, 0xef, 0xc0, 0x6a,
	0x51, 0xeb, 0xe7, 0x7f, 0x00, 0x42, 0x1f, 0x29, 0xe6, 0xbc, 0xb0, 0x9c, 0xf3, 0x06, 0x7f, 0x33,
	0x78, 0xc6, 0x97, 0xec, 0x65, 0x9e, 0xf9, 0x84, 0x1d, 0x60, 0x89, 0xc4, 0x70, 0x19, 0x80, 0xd1,
	0xa9, 0xed, 0x05, 0x5a, 0xe3, 0xab, 0x51, 0xb4, 0x94, 0xd4, 0x2a, 0x14, 0xe4, 0x9f, 0xd6, 0xa1,
	0x77, 0xc0, 0x6f, 0xd7, 0x18, 0xca, 0xaf, 0xc3, 0xaa, 0xb8, 0x6c, 0x47, 0x8c, 0xca, 0xc4, 0x84,
	0x21, 0xad, 0xe2, 0x47, 0x60, 0xf7, 0x19, 0x95, 0xb7, 0xe0, 0xe1, 0x0a, 0x29, 0xc1, 0xcd, 0x21,
	0x5c, 0x10, 0x94, 0xb1, 0x17, 0x78, 0xf1, 0x11, 0xf2, 0x90, 0x71, 0xbe, 0xa9, 0xf3, 0x78, 0x4b,
	0xcc, 0x67, 0x6c, 0xaa, 0x8b, 0x32, 0x4e, 0x8c, 0x1e, 0x87, 0x13, 0x25, 0x4d, 0xbd, 0xca, 0x89,
	0x88, 0xf9, 0x12, 0x27, 0x7d, 0x51, 0xe1, 0x09, 0xa7, 0xf1, 0x1f, 0x3c, 0xe1, 0x34, 0xcf, 0xfe,
	0x84, 0xd3, 0x5a, 0xf6, 0x09, 0xe7, 0x60, 0x26, 0x2e, 0x10, 0x4d, 0x52, 0x3b, 0xd0, 0x92, 0xce,
	0xaf, 0x0c, 0x58, 0x2d, 0xaa, 0x5a, 0xbc, 0x72, 0xd8, 0x78, 0xb9, 0xeb, 0x12, 0xf1, 0x5b, 0x58,
	0x75, 0x36, 0x1d, 0x85, 0x3e, 0x7a, 0x16, 0x8e, 0x78, 0xaf, 0xe8, 0x05, 0x09, 0x0b, 0xdd, 0x54,
	0x58, 0x15, 0xcb, 0x77, 0x81, 0xc6, 0xbb, 0xc0, 0x24, 0x4c, 0x6c, 0x1f, 0xbd, 0x49, 0x0e, 0x38,
	0x35, 0x62, 0x9e, 0xa3, 0x5c, 0x48, 0x0e, 0x38, 0x35, 0x3c, 0xe1, 0xd7, 0x00, 0x79, 0x21, 0x92,
	0x03, 0x6b, 0x1b, 0x2e, 0x54, 0x4c, 0xa9, 0x89, 0x64, 0x14, 0x44, 0xca, 0x58, 0xd4, 0xe6, 0xb1,
	0xd0, 0x6d, 0x78, 0x46, 0x16, 0x7f, 0x36, 0xa0, 0x29, 0x78, 0xfc, 0xef, 0x69, 0x88, 0xf7, 0x16,
	0xc2, 0x05, 0x43, 0x86, 0xb7, 0x44, 0x35, 0xd4, 0xe2, 0xb1, 0x53, 0x88, 0xc7, 0x87, 0xd0, 0x25,
	0xf4, 0x91, 0x38, 0x8f, 0xe8, 0x42, 0xc5, 0xc5, 0xde, 0xf6, 0x7d, 0x7c, 0xa3, 0xcc, 0xc6, 0x8f,
	0xbb, 0xd7, 0x8b, 0x00, 0xe0, 0x3d, 0x1b, 0xef, 0xa7, 0x71, 0x64, 0xdd, 0x82, 0x9e, 0x6c, 0xa6,
	0x25, 0xeb, 0x2b, 0x19, 0x4c, 0x36, 0xc2, 0xfd, 0x42, 0x44, 0xa9, 0x45, 0x07, 0xbc, 0x01, 0x92,
	0x0d, 0xa7, 0x7a, 0x81, 0x5b, 0xde, 0x32, 0x0b, 0x2f, 0x01, 0x7f, 0xe1, 0x16, 0x63, 0xb6, 0x4b,
	0xcd, 0x5b, 0xd0, 0x95, 0x3b, 0x51, 0x3c, 0x61, 0x1e, 0x32, 0x02, 0xf0, 0x56, 0xc8, 0x1e, 0x50,
	0xdf, 0x1f, 0xae, 0x90, 0x1c, 0x67, 0xbe, 0x0c, 0x1d, 0x31, 0x18, 0xa5, 0x33, 0x4c, 0x2c, 0x66,
	0x69, 0xcd, 0x4e, 0x3a, 0x13, 0xb1, 0x8c, 0x28, 0xf3, 0x4d, 0x58, 0xd3, 0x92, 0x82, 0xd8, 0x4c,
	0xe6, 0x91, 0xcf, 0x94, 0x16, 0x4a, 0x37, 0xc4, 0x2d, 0xcb, 0x6b, 0x16, 0x3f, 0x69, 0xfd, 0x9a,
	0x5f, 0xf6, 0x35, 0x79, 0x79, 0xbe, 0x96, 0xf2, 0xea, 0xca, 0xd2, 0x49, 0xe6, 0x0d, 0xb8, 0x20,
	0x1f, 0x5c, 0x22, 0xca, 0x46, 0xa1, 0xcd, 0x5c, 0x3f, 0x54, 0xcf, 0x9a, 0xd5, 0x09, 0xce, 0x6f,
	0xea, 0x05, 0x19, 0x0e, 0x2b, 0x84, 0x46, 0x32, 0x5f, 0x80, 0x75, 0xe1, 0x88, 0x3a, 0x3b, 0xe9,
	0xb6, 0x15, 0x3a, 0xaf, 0x5e, 0xc2, 0x95, 0x33, 0xa0, 0xf4, 0xe4, 0x22, 0x11, 0xdb, 0x79, 0x96,
	0x88, 0x17, 0x25, 0xf9, 0x36, 0x99, 0x13, 0xb8, 0x6b, 0xc6, 0x49, 0x18, 0x69, 0x8f, 0x93, 0xd9,
	0x58, 0xbc, 0xe2, 0xb2, 0xf0, 0xc4, 0x1d, 0xa7, 0x81, 0x2b, 0xdc, 0xbb, 0x43, 0x72, 0x82, 0xf5,
	0x9b, 0x3a, 0x74, 0xb9, 0x92, 0xf6, 0x98, 0x4b, 0xd9, 0x12, 0x9a, 0xda, 0x84, 0xb6, 0x5d, 0x28,
	0x9f, 0x6a, 0x38, 0x5f, 0x87, 0xf5, 0x25, 0x75, 0xd8, 0x58, 0x4e, 0x87, 0xcd, 0x65, 0x75, 0xd8,
	0x9a, 0xa7, 0x43, 0x0b, 0xfa, 0x71, 0xe8, 0xbb, 0x19, 0x48, 0x6a, 0xaa, 0x40, 0x2b, 0xea, 0xb9,
	0xf3, 0x38, 0x3d, 0x77, 0x1f, 0xa7, 0x67, 0x28, 0xe9, 0x59, 0x3e, 0x4c, 0xfa, 0xbe, 0xe7, 0x6e,
	0xf6, 0x30, 0x56, 0xc5, 0x48, 0x8b, 0xca, 0x7e, 0x39, 0x71, 0xe0, 0xe5, 0x6a, 0x50, 0xb8, 0x5c,
	0xbd, 0x00, 0xeb, 0x99, 0xb9, 0x30, 0x19, 0x68, 0xbc, 0x0d, 0x9d, 0x37, 0xbf, 0xa1, 0x0e, 0x08,
	0x7d, 0xc4, 0x1b, 0x1b, 0xcc, 0x33, 0x8f, 0x7f, 0x1c, 0x28, 0xa6, 0x2e, 0x91, 0x6f, 0x27, 0x34,
	0xc0, 0xcc, 0x25, 0x07, 0xe2, 0xa6, 0x6c, 0x1f, 0xd2, 0xfb, 0xe9, 0x74, 0x84, 0xe5, 0x9b, 0xdf,
	0x94, 0x33, 0x8a, 0xb8, 0xaa, 0xdb, 0x87, 0xf4, 0x81, 0xf7, 0x01, 0xc5, 0xf6, 0x3d, 0x1b, 0x5b,
	0xdb, 0xf8, 0x82, 0x90, 0x1d, 0x20, 0x36, 0x6f, 0x42, 0x97, 0x0b, 0x1b, 0xf2, 0x01, 0xe6, 0xbe,
	0x75, 0xcc, 0x02, 0xf9, 0x31, 0x73, 0x88, 0xf5, 0x0a, 0x74, 0xb1, 0x42, 0x39, 0xc7, 0xb9, 0x84,
	0xf2, 0x38, 0x28, 0xa1, 0x09, 0x0d, 0x46, 0x9d, 0x63, 0xf5, 0x50, 0xcd, 0x7f, 0x5b, 0x43, 0xb8,
	0x28, 0x76, 0xe6, 0xaa, 0xe0, 0x4b, 0xdf, 0x0a, 0x95, 0x46, 0x6e, 0x62, 0xce, 0x13, 0x4b, 0x8a,
	0x02, 0x64, 0x1b, 0x91, 0x1c, 0x62, 0xdd, 0x81, 0x9e, 0x96, 0xd7, 0x16, 0xa9, 0x9e, 0xbb, 0xb7,
	0x72, 0x29, 0x27, 0xfb, 0x42, 0xa2, 0x93, 0xac, 0x1b, 0x60, 0x56, 0xf3, 0xdc, 0x42, 0x53, 0xfe,
	0xa2, 0x0e, 0xeb, 0x2a, 0xf7, 0xf3, 0x55, 0x3b, 0x76, 0x4c, 0x97, 0x88, 0xd6, 0xf9, 0x95, 0x60,
	0x61, 0xa4, 0x76, 0xcf, 0x37, 0x52, 0xbb, 0xff, 0xc7, 0x91, 0xda, 0xcd, 0xea, 0xe7, 0xeb, 0x45,
	0xcb, 0x08, 0x33, 0x5e, 0x87, 0xc6, 0xc8, 0x8e, 0x55, 0xb7, 0xfe, 0xe9, 0xec, 0x06, 0x5f, 0x34,
	0x20, 0x11, 0x20, 0xeb, 0x5f, 0x06, 0x8f, 0x0b, 0x6d, 0x2a, 0x9d, 0x89, 0x97, 0x97, 0x74, 0x46,
	0x99, 0x16, 0xad, 0x39, 0x41, 0x13, 0xb1, 0x56, 0x10, 0x51, 0x0b, 0x59, 0x2d, 0x20, 0x4a, 0xbe,
	0xd8, 0xa8, 0xf8, 0xe2, 0x7c, 0x87, 0x68, 0x2e, 0x72, 0x88, 0x79, 0xe6, 0x6e, 0x2d, 0x30, 0xb7,
	0x3c, 0x47, 0x72, 0x2a, 0x3e, 0x13, 0xb5, 0xb3, 0x73, 0x48, 0x82, 0xb5, 0x0d, 0xa6, 0x7e, 0x70,
	0x19, 0x07, 0x67, 0x53, 0xde, 0x5f, 0x0d, 0x2c, 0xf6, 0x3b, 0xe9, 0xec, 0x8d, 0x30, 0xa0, 0x0b,
	0x92, 0xc2, 0x13, 0xe3, 0xf1, 0x8c, 0x41, 0xb1, 0xa8, 0xc0, 0x3f, 0x51, 0x07, 0xcd, 0x92, 0x0e,
	0xb4, 0x44, 0xdf, 0x2a, 0x24, 0xfa, 0x7d, 0x78, 0x4a, 0x76, 0x88, 0x78, 0x38, 0x4c, 0x98, 0x5f,
	0x82, 0x41, 0xc2, 0x29, 0xa3, 0x74, 0xe6, 0x86, 0x01, 0x55, 0x49, 0xb3, 0xd0, 0xa7, 0xa1, 0x2a,
	0x48, 0x11, 0x69, 0x3d, 0x0b, 0xbd, 0x6d, 0xc6, 0xec, 0xd9, 0xed, 0x30, 0x18, 0x7b, 0x87, 0x5c,
	0x51, 0xa2, 0x5f, 0x52, 0xf9, 0x5d, 0x36, 0x4f, 0x57, 0xa0, 0xff, 0x20, 0x61, 0x5e, 0x70, 0x58,
	0x45, 0x19, 0x39, 0xea, 0x59, 0xe8, 0xed, 0x06, 0xc9, 0xad, 0xad, 0x79, 0xa0, 0xa6, 0x02, 0xfd,
	0xc9, 0x00, 0x90, 0x80, 0xdd, 0x84, 0x4e, 0xcd, 0x75, 0xa8, 0x4f, 0xe8, 0x0c, 0xcd, 0xc2, 0x7f,
	0x66, 0xd5, 0xa8, 0xa6, 0x55, 0xa3, 0xab, 0x50, 0xb7, 0x19, 0x2b, 0x7d, 0x0d, 0xd1, 0xc4, 0x1e,
	0xae, 0x10, 0x0e, 0x30, 0x9f, 0x83, 0x7a, 0x9c, 0xa8, 0xfb, 0xa3, 0x3a, 0xbd, 0x2e, 0x39, 0x07,
	0xc6, 0x89, 0x60, 0xe8, 0x05, 0x09, 0x5e, 0x1a, 0x15, 0x43, 0x4d, 0x78, 0x8e, 0xf3, 0x82, 0x04,
	0x2f, 0x7f, 0xbd, 0xea, 0xe5, 0xef, 0x1b, 0xd0, 0xbf, 0x27, 0x3e, 0x65, 0xe0, 0x61, 0xab, 0xe7,
	0xc8, 0x8e, 0x5f, 0xd3, 0x74, 0xc4, 0x19, 0x86, 0x11, 0xaa, 0xad, 0x16, 0x46, 0x73, 0xdf, 0x90,
	0xdf, 0x85, 0xfe, 0x3d, 0x3b, 0xb0, 0x0f, 0xd5, 0xd3, 0xdd, 0x8b, 0xd9, 0x47, 0x94, 0x62, 0xfb,
	0xad, 0x0b, 0x30, 0x5c, 0x51, 0xdf, 0x56, 0x50, 0xe6, 0x5a, 0x55, 0x66, 0x27, 0x7b, 0x14, 0x47,
	0xa1, 0x3f, 0x0f, 0x8d, 0x88, 0xd1, 0xe3, 0xd2, 0x37, 0xac, 0xdc, 0x3a, 0x44, 0x4c, 0x9b, 0xd7,
	0xa1, 0x8d, 0xdf, 0x0e, 0xb1, 0x97, 0x9f, 0x83, 0x54, 0x08, 0xeb, 0x15, 0xbc, 0xc3, 0x9c, 0x4d,
	0x2f, 0xd6, 0x47, 0xe2, 0xdd, 0x5c, 0x5e, 0xaa, 0xaa, 0x9d, 0xe7, 0x83, 0x6a, 0x2d, 0x93, 0x24,
	0xfc, 0x04, 0x3f, 0xe5, 0x4b, 0x76, 0x55, 0xe2, 0xd3, 0x28, 0xf3, 0xbf, 0xa3, 0xf0, 0xe0, 0x73,
	0x3d, 0x46, 0xe5, 0xb5, 0x52, 0xb6, 0x2b, 0x39, 0xc1, 0xfa, 0xa7, 0x01, 0x83, 0x7d, 0xe6, 0x1d,
	0xdb, 0xce, 0x2c, 0x7f, 0x71, 0x89, 0xd2, 0x91, 0xef, 0x39, 0x5b, 0x91, 0xa4, 0x97, 0x5e, 0x5c,
	0xf6, 0xe5, 0x24, 0x2e, 0x1a, 0xae, 0x90, 0x12, 0xdc, 0xdc, 0x81, 0x35, 0xfc, 0x99, 0x71, 0x28,
	0xbd, 0xab, 0xe2, 0x6c, 0xce, 0xa2, 0xbc, 0x40, 0x08, 0xa1, 0x48, 0x82, 0x7b, 0xe9, 0x9d, 0x35,
	0x63, 0x21, 0x26, 0x85, 0x10, 0x05, 0xf8, 0xe2, 0xbb, 0xd1, 0x0f, 0x0d, 0x58, 0x2d, 0x1e, 0x41,
	0x7e, 0xb0, 0x9f, 0xd0, 0x40, 0xbb, 0xac, 0xe7, 0x84, 0x27, 0xfe, 0xcb, 0xa3, 0x99, 0xff, 0xcb,
	0xc3, 0xbc, 0x01, 0xad, 0x30, 0x4d, 0xa2, 0x54, 0xd6, 0xeb, 0xfc, 0x89, 0x06, 0x77, 0xda, 0x13,
	0x73, 0x04, 0x31, 0xd6, 0xef, 0x0d, 0x58, 0x2b, 0xe9, 0xe2, 0x1c, 0x65, 0x79, 0x1e, 0x9a, 0x5e,
	0xc0, 0x45, 0x29, 0x3e, 0xfd, 0xe0, 0x46, 0xbb, 0x7c, 0x8a, 0x48, 0xc4, 0x19, 0xc5, 0xfe, 0x1d,
	0xd7, 0x60, 0x41, 0xff, 0x1f, 0x53, 0xea, 0xfa, 0x3c, 0xa9, 0x1b, 0x67, 0x90, 0xba, 0xb9, 0x84,
	0xd4, 0x27, 0xb0, 0xf6, 0xce, 0xc1, 0xd7, 0xf7, 0xee, 0xf8, 0xe1, 0xc8, 0xf6, 0x77, 0x03, 0x97,
	0x9e, 0x6a, 0x85, 0xc7, 0xd0, 0x0b, 0x0f, 0xbf, 0xe1, 0x25, 0xa7, 0x1e, 0x87, 0x60, 0x66, 0x51,
	0x43, 0xde, 0x53, 0x85, 0x69, 0x22, 0xa7, 0x64, 0x90, 0x65, 0x63, 0xf1, 0xd0, 0x21, 0x2b, 0x1c,
	0x7e, 0xfe, 0xc5, 0x12, 0xff, 0xa1, 0x01, 0x9d, 0xb7, 0xa9, 0x14, 0x7d, 0xe1, 0x7f, 0x4b, 0xbe,
	0x0a, 0x6b, 0x69, 0x72, 0x1a, 0x6a, 0xd2, 0xe1, 0xb7, 0x0f, 0x15, 0x33, 0x25, 0xd9, 0x49, 0x19,
	0xce, 0x45, 0x9b, 0xd0, 0xd9, 0xee, 0xd4, 0x3e, 0xa4, 0xf8, 0xdd, 0x28, 0x1b, 0x5b, 0x5f, 0x86,
	0xbe, 0xae, 0x40, 0xf3, 0xba, 0xc0, 0x4a, 0x3d, 0xcb, 0xea, 0xb9, 0x86, 0xdb, 0x28, 0x41, 0x49,
	0x06, 0xb0, 0x76, 0xa1, 0x3b, 0xa1, 0xa8, 0xcd, 0x85, 0xf2, 0x5f, 0x81, 0x41, 0x38, 0xa5, 0xbc,
	0xb7, 0x8c, 0xd2, 0x11, 0x4f, 0x82, 0x35, 0x21, 0x42, 0x91, 0x68, 0x7d, 0x3b, 0xcb, 0x35, 0xc8,
	0xee, 0x12, 0x74, 0x49, 0x94, 0x8e, 0xde, 0xa6, 0xb3, 0xe4, 0x54, 0x7d, 0xa2, 0xcb, 0x08, 0xfc,
	0x66, 0x32, 0xa1, 0x33, 0xb4, 0x71, 0xad, 0x70, 0x33, 0xc9, 0x24, 0x22, 0x39, 0xc4, 0x8a, 0x60,
	0xe3, 0x0e, 0x0b, 0xd3, 0x68, 0x8e, 0x9d, 0xff, 0x3b, 0x4a, 0xb7, 0x7e, 0x69, 0xc0, 0xe0, 0x6e,
	0xe8, 0xd8, 0x3e, 0x47, 0x8a, 0x1a, 0xff, 0x89, 0xf8, 0x54, 0x55, 0xdd, 0xcd, 0x79, 0xea, 0xfe,
	0x1e, 0xac, 0x12, 0xfa, 0x88, 0x8b, 0xb6, 0x2f, 0x54, 0x1a, 0x67, 0x71, 0x7a, 0xbf, 0x1c, 0xa7,
	0xe2, 0xcb, 0xe3, 0x1e, 0x6c, 0x1c, 0xce, 0xd1, 0x1f, 0x2a, 0xe5, 0xb3, 0xa8, 0x94, 0x79, 0x2a,
	0x26, 0x73, 0x17, 0xf2, 0xeb, 0x6e, 0x86, 0x96, 0x22, 0x2c, 0xb4, 0xc5, 0x45, 0x68, 0x65, 0x9e,
	0x53, 0xe7, 0x27, 0xc5, 0x33, 0x1c, 0xf0, 0x33, 0xc4, 0xfa, 0x19, 0x76, 0x60, 0xfd, 0xb0, 0xc8,
	0x54, 0xb5, 0x80, 0x17, 0xcb, 0x12, 0xca, 0x69, 0x52, 0xc1, 0x5b, 0xaf, 0x8b, 0x4f, 0x34, 0xe8,
	0x8b, 0xf2, 0x29, 0x71, 0x7e, 0xd7, 0xbc, 0x20, 0x75, 0x59, 0x2f, 0x62, 0x6f, 0xaa, 0x4a, 0xa7,
	0xa0, 0xc6, 0x85, 0xd3, 0xd5, 0x35, 0xf8, 0x7d, 0x30, 0x19, 0x87, 0x73, 0x19, 0xe2, 0xbd, 0xb1,
	0x84, 0x9b, 0xaf, 0x42, 0xef, 0x50, 0x53, 0xb3, 0xf1, 0x58, 0xdf, 0xd3, 0xa1, 0xd6, 0xb7, 0x60,
	0x03, 0xbb, 0x9b, 0x62, 0x3c, 0xcd, 0x3f, 0xc4, 0x59, 0xe3, 0xe8, 0xc7, 0x06, 0x0c, 0xf0, 0x44,
	0x7b, 0x63, 0x2e, 0x87, 0xb9, 0x0d, 0x5d, 0x79, 0x92, 0x7b, 0x76, 0x84, 0x72, 0x3e, 0xab, 0x3a,
	0x53, 0x1d, 0x88, 0xa3, 0x7b, 0x76, 0xf4, 0x66, 0x90, 0xb0, 0x19, 0xc9, 0x57, 0x3d, 0xfd, 0x15,
	0x58, 0x2d, 0x4e, 0xea, 0xed, 0x52, 0x7d, 0x4e, 0xbb, 0xd4, 0xc1, 0x76, 0xe9, 0xb5, 0xda, 0xab,
	0x86, 0xf5, 0x73, 0x03, 0xd6, 0x0f, 0x94, 0xa3, 0x2a, 0xa9, 0xde, 0x50, 0xaf, 0xb5, 0xb9, 0x54,
	0x57, 0xf5, 0x97, 0x0b, 0x0d, 0x2b, 0x09, 0x71, 0x2e, 0x58, 0xb6, 0x90, 0x0b, 0x56, 0x9c, 0x7c,
	0x52, 0x1f, 0xa7, 0x0b, 0x36, 0x6a, 0x89, 0x7f, 0xf1, 0xde, 0xfa, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x54, 0x9a, 0x81, 0xf5, 0xf1, 0x2b, 0x00, 0x00,
}
