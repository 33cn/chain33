// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Wallet struct {
	MinFee int64  `protobuf:"varint,1,opt,name=minFee" json:"minFee,omitempty"`
	DbPath string `protobuf:"bytes,2,opt,name=dbPath" json:"dbPath,omitempty"`
}

func (m *Wallet) Reset()                    { *m = Wallet{} }
func (m *Wallet) String() string            { return proto.CompactTextString(m) }
func (*Wallet) ProtoMessage()               {}
func (*Wallet) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Wallet) GetMinFee() int64 {
	if m != nil {
		return m.MinFee
	}
	return 0
}

func (m *Wallet) GetDbPath() string {
	if m != nil {
		return m.DbPath
	}
	return ""
}

type WalletTxDetail struct {
	Tx        *Transaction `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
	Receipt   *ReceiptData `protobuf:"bytes,2,opt,name=receipt" json:"receipt,omitempty"`
	Height    int64        `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Index     int64        `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	Blocktime int64        `protobuf:"varint,5,opt,name=blocktime" json:"blocktime,omitempty"`
	Amount    int64        `protobuf:"varint,6,opt,name=amount" json:"amount,omitempty"`
	Fromaddr  string       `protobuf:"bytes,7,opt,name=fromaddr" json:"fromaddr,omitempty"`
	Txhash    []byte       `protobuf:"bytes,8,opt,name=txhash,proto3" json:"txhash,omitempty"`
}

func (m *WalletTxDetail) Reset()                    { *m = WalletTxDetail{} }
func (m *WalletTxDetail) String() string            { return proto.CompactTextString(m) }
func (*WalletTxDetail) ProtoMessage()               {}
func (*WalletTxDetail) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *WalletTxDetail) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *WalletTxDetail) GetReceipt() *ReceiptData {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func (m *WalletTxDetail) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *WalletTxDetail) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *WalletTxDetail) GetBlocktime() int64 {
	if m != nil {
		return m.Blocktime
	}
	return 0
}

func (m *WalletTxDetail) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *WalletTxDetail) GetFromaddr() string {
	if m != nil {
		return m.Fromaddr
	}
	return ""
}

func (m *WalletTxDetail) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

type WalletTxDetails struct {
	TxDetails []*WalletTxDetail `protobuf:"bytes,1,rep,name=txDetails" json:"txDetails,omitempty"`
}

func (m *WalletTxDetails) Reset()                    { *m = WalletTxDetails{} }
func (m *WalletTxDetails) String() string            { return proto.CompactTextString(m) }
func (*WalletTxDetails) ProtoMessage()               {}
func (*WalletTxDetails) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *WalletTxDetails) GetTxDetails() []*WalletTxDetail {
	if m != nil {
		return m.TxDetails
	}
	return nil
}

type WalletAccountStore struct {
	Privkey   string `protobuf:"bytes,1,opt,name=privkey" json:"privkey,omitempty"`
	Label     string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Addr      string `protobuf:"bytes,3,opt,name=addr" json:"addr,omitempty"`
	TimeStamp string `protobuf:"bytes,4,opt,name=timeStamp" json:"timeStamp,omitempty"`
}

func (m *WalletAccountStore) Reset()                    { *m = WalletAccountStore{} }
func (m *WalletAccountStore) String() string            { return proto.CompactTextString(m) }
func (*WalletAccountStore) ProtoMessage()               {}
func (*WalletAccountStore) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *WalletAccountStore) GetPrivkey() string {
	if m != nil {
		return m.Privkey
	}
	return ""
}

func (m *WalletAccountStore) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *WalletAccountStore) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *WalletAccountStore) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

type WalletPwHash struct {
	PwHash  []byte `protobuf:"bytes,1,opt,name=pwHash,proto3" json:"pwHash,omitempty"`
	Randstr string `protobuf:"bytes,2,opt,name=randstr" json:"randstr,omitempty"`
}

func (m *WalletPwHash) Reset()                    { *m = WalletPwHash{} }
func (m *WalletPwHash) String() string            { return proto.CompactTextString(m) }
func (*WalletPwHash) ProtoMessage()               {}
func (*WalletPwHash) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *WalletPwHash) GetPwHash() []byte {
	if m != nil {
		return m.PwHash
	}
	return nil
}

func (m *WalletPwHash) GetRandstr() string {
	if m != nil {
		return m.Randstr
	}
	return ""
}

type WalletStatus struct {
	IsLock       bool `protobuf:"varint,1,opt,name=isLock" json:"isLock,omitempty"`
	IsAutoMining bool `protobuf:"varint,2,opt,name=isAutoMining" json:"isAutoMining,omitempty"`
	HasSeed      bool `protobuf:"varint,3,opt,name=hasSeed" json:"hasSeed,omitempty"`
}

func (m *WalletStatus) Reset()                    { *m = WalletStatus{} }
func (m *WalletStatus) String() string            { return proto.CompactTextString(m) }
func (*WalletStatus) ProtoMessage()               {}
func (*WalletStatus) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *WalletStatus) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

func (m *WalletStatus) GetIsAutoMining() bool {
	if m != nil {
		return m.IsAutoMining
	}
	return false
}

func (m *WalletStatus) GetHasSeed() bool {
	if m != nil {
		return m.HasSeed
	}
	return false
}

type WalletAccounts struct {
	Wallets []*WalletAccount `protobuf:"bytes,1,rep,name=wallets" json:"wallets,omitempty"`
}

func (m *WalletAccounts) Reset()                    { *m = WalletAccounts{} }
func (m *WalletAccounts) String() string            { return proto.CompactTextString(m) }
func (*WalletAccounts) ProtoMessage()               {}
func (*WalletAccounts) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *WalletAccounts) GetWallets() []*WalletAccount {
	if m != nil {
		return m.Wallets
	}
	return nil
}

type WalletAccount struct {
	Acc   *Account `protobuf:"bytes,1,opt,name=acc" json:"acc,omitempty"`
	Label string   `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *WalletAccount) Reset()                    { *m = WalletAccount{} }
func (m *WalletAccount) String() string            { return proto.CompactTextString(m) }
func (*WalletAccount) ProtoMessage()               {}
func (*WalletAccount) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *WalletAccount) GetAcc() *Account {
	if m != nil {
		return m.Acc
	}
	return nil
}

func (m *WalletAccount) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type ReceiptBalance struct {
	Prev    int64 `protobuf:"varint,1,opt,name=prev" json:"prev,omitempty"`
	Current int64 `protobuf:"varint,2,opt,name=current" json:"current,omitempty"`
	Delt    int64 `protobuf:"varint,3,opt,name=delt" json:"delt,omitempty"`
}

func (m *ReceiptBalance) Reset()                    { *m = ReceiptBalance{} }
func (m *ReceiptBalance) String() string            { return proto.CompactTextString(m) }
func (*ReceiptBalance) ProtoMessage()               {}
func (*ReceiptBalance) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *ReceiptBalance) GetPrev() int64 {
	if m != nil {
		return m.Prev
	}
	return 0
}

func (m *ReceiptBalance) GetCurrent() int64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *ReceiptBalance) GetDelt() int64 {
	if m != nil {
		return m.Delt
	}
	return 0
}

func init() {
	proto.RegisterType((*Wallet)(nil), "types.Wallet")
	proto.RegisterType((*WalletTxDetail)(nil), "types.WalletTxDetail")
	proto.RegisterType((*WalletTxDetails)(nil), "types.WalletTxDetails")
	proto.RegisterType((*WalletAccountStore)(nil), "types.WalletAccountStore")
	proto.RegisterType((*WalletPwHash)(nil), "types.WalletPwHash")
	proto.RegisterType((*WalletStatus)(nil), "types.WalletStatus")
	proto.RegisterType((*WalletAccounts)(nil), "types.WalletAccounts")
	proto.RegisterType((*WalletAccount)(nil), "types.WalletAccount")
	proto.RegisterType((*ReceiptBalance)(nil), "types.ReceiptBalance")
}

func init() { proto.RegisterFile("wallet.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xbd, 0x6f, 0xdb, 0x3e,
	0x10, 0x85, 0xac, 0xf8, 0x8b, 0x71, 0xfc, 0xfb, 0x95, 0x48, 0x0b, 0xc1, 0xe8, 0x60, 0x70, 0xf2,
	0x50, 0x78, 0x48, 0x96, 0x8e, 0x49, 0x11, 0xa4, 0x1d, 0x5a, 0x20, 0xa0, 0x03, 0x74, 0x3e, 0x53,
	0x6c, 0x44, 0x58, 0x96, 0x04, 0xf2, 0xec, 0x38, 0xff, 0x7a, 0xa7, 0x82, 0x47, 0xb2, 0x86, 0x80,
	0x6e, 0x7c, 0xf7, 0xf1, 0xee, 0xde, 0xd3, 0x89, 0xcd, 0x5e, 0xa1, 0xae, 0x35, 0xae, 0x3b, 0xdb,
	0x62, 0xcb, 0x87, 0xf8, 0xd6, 0x69, 0xb7, 0x78, 0x87, 0x16, 0x1a, 0x07, 0x0a, 0x4d, 0xdb, 0x84,
	0xcc, 0xe2, 0xff, 0x6d, 0xdd, 0xaa, 0x9d, 0xaa, 0xc0, 0xa4, 0xc8, 0x15, 0x28, 0xd5, 0x1e, 0x9a,
	0xd8, 0x2a, 0x3e, 0xb3, 0xd1, 0x4f, 0xa2, 0xe2, 0x1f, 0xd8, 0x68, 0x6f, 0x9a, 0x47, 0xad, 0x8b,
	0x6c, 0x99, 0xad, 0x72, 0x19, 0x91, 0x8f, 0x97, 0xdb, 0x27, 0xc0, 0xaa, 0x18, 0x2c, 0xb3, 0xd5,
	0x54, 0x46, 0x24, 0x7e, 0x67, 0x6c, 0x1e, 0x5a, 0x9f, 0x4f, 0x0f, 0x1a, 0xc1, 0xd4, 0x5c, 0xb0,
	0x01, 0x9e, 0xa8, 0xfd, 0xf2, 0x86, 0xaf, 0x69, 0xa9, 0xf5, 0xf3, 0x79, 0x27, 0x39, 0xc0, 0x13,
	0xff, 0xc4, 0xc6, 0x56, 0x2b, 0x6d, 0x3a, 0x24, 0xbe, 0x73, 0xa1, 0x0c, 0xd1, 0x07, 0x40, 0x90,
	0xa9, 0xc4, 0x0f, 0xaf, 0xb4, 0x79, 0xa9, 0xb0, 0xc8, 0xc3, 0x52, 0x01, 0xf1, 0x6b, 0x36, 0x34,
	0x4d, 0xa9, 0x4f, 0xc5, 0x05, 0x85, 0x03, 0xe0, 0x1f, 0xd9, 0x94, 0xf4, 0xa2, 0xd9, 0xeb, 0x62,
	0x48, 0x99, 0x73, 0xc0, 0x73, 0xc1, 0xde, 0x4b, 0x2f, 0x46, 0x81, 0x2b, 0x20, 0xbe, 0x60, 0x93,
	0x5f, 0xb6, 0xdd, 0x43, 0x59, 0xda, 0x62, 0x4c, 0x12, 0xff, 0x62, 0xdf, 0x83, 0xa7, 0x0a, 0x5c,
	0x55, 0x4c, 0x96, 0xd9, 0x6a, 0x26, 0x23, 0x12, 0x8f, 0xec, 0xbf, 0xbe, 0x76, 0xc7, 0x6f, 0xd9,
	0x14, 0x13, 0x28, 0xb2, 0x65, 0xbe, 0xba, 0xbc, 0x79, 0x1f, 0xa5, 0xf5, 0x4b, 0xe5, 0xb9, 0x4e,
	0x1c, 0x19, 0x0f, 0xc9, 0xfb, 0xf0, 0x55, 0x36, 0xd8, 0x5a, 0xcd, 0x0b, 0x36, 0xee, 0xac, 0x39,
	0xee, 0xf4, 0x1b, 0x99, 0x39, 0x95, 0x09, 0x7a, 0xdd, 0x35, 0x6c, 0x75, 0x1d, 0xbf, 0x45, 0x00,
	0x9c, 0xb3, 0x0b, 0xda, 0x3e, 0xa7, 0x20, 0xbd, 0xbd, 0x17, 0x5e, 0xf5, 0x06, 0x61, 0xdf, 0x91,
	0x4b, 0x53, 0x79, 0x0e, 0x88, 0x3b, 0x36, 0x0b, 0x73, 0x9f, 0x5e, 0xbf, 0x81, 0xab, 0xbc, 0xce,
	0x8e, 0x5e, 0x34, 0x70, 0x26, 0x23, 0xf2, 0x9b, 0x58, 0x68, 0x4a, 0x87, 0x36, 0x4e, 0x4c, 0x50,
	0x94, 0x89, 0x61, 0x83, 0x80, 0x07, 0xe7, 0x19, 0x8c, 0xfb, 0xde, 0xaa, 0x1d, 0x31, 0x4c, 0x64,
	0x44, 0x5c, 0xb0, 0x99, 0x71, 0xf7, 0x07, 0x6c, 0x7f, 0x98, 0xc6, 0x34, 0x2f, 0x44, 0x33, 0x91,
	0xbd, 0x98, 0x9f, 0x52, 0x81, 0xdb, 0x68, 0x5d, 0x92, 0x84, 0x89, 0x4c, 0x50, 0xdc, 0xa5, 0x1b,
	0x8b, 0xfe, 0x38, 0xbe, 0x66, 0xe3, 0x70, 0xfb, 0xc9, 0xe4, 0xeb, 0x9e, 0xc9, 0xb1, 0x4e, 0xa6,
	0x22, 0xf1, 0x95, 0x5d, 0xf5, 0x32, 0x7c, 0xc9, 0x72, 0x50, 0x2a, 0x5e, 0xe9, 0x3c, 0x36, 0xa7,
	0x36, 0x9f, 0xfa, 0xb7, 0xc9, 0x42, 0xb2, 0x79, 0x3c, 0xd1, 0x2f, 0x50, 0x43, 0xa3, 0xb4, 0xb7,
	0xbd, 0xb3, 0xfa, 0x18, 0xff, 0x17, 0x7a, 0x7b, 0x29, 0xea, 0x60, 0xad, 0x6e, 0xc2, 0x79, 0xe7,
	0x32, 0x41, 0x5f, 0x5d, 0xea, 0x3a, 0x1d, 0x32, 0xbd, 0xb7, 0x23, 0xfa, 0x09, 0x6f, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x6e, 0xe2, 0xa0, 0xcc, 0xcf, 0x03, 0x00, 0x00,
}
