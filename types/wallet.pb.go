// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 钱包模块存贮的tx交易详细信息
// 	 tx : tx交易信息
// 	 receipt :交易收据信息
// 	 height :交易所在的区块高度
// 	 index :交易所在区块中的索引
// 	 blocktime :交易所在区块的时标
// 	 amount :交易量
// 	 fromaddr :交易打出地址
// 	 txhash : 交易对应的哈希值
// 	 actionName  :交易对应的函数调用
type WalletTxDetail struct {
	Tx         *Transaction `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
	Receipt    *ReceiptData `protobuf:"bytes,2,opt,name=receipt" json:"receipt,omitempty"`
	Height     int64        `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Index      int64        `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	Blocktime  int64        `protobuf:"varint,5,opt,name=blocktime" json:"blocktime,omitempty"`
	Amount     int64        `protobuf:"varint,6,opt,name=amount" json:"amount,omitempty"`
	Fromaddr   string       `protobuf:"bytes,7,opt,name=fromaddr" json:"fromaddr,omitempty"`
	Txhash     []byte       `protobuf:"bytes,8,opt,name=txhash,proto3" json:"txhash,omitempty"`
	ActionName string       `protobuf:"bytes,9,opt,name=actionName" json:"actionName,omitempty"`
}

func (m *WalletTxDetail) Reset()                    { *m = WalletTxDetail{} }
func (m *WalletTxDetail) String() string            { return proto.CompactTextString(m) }
func (*WalletTxDetail) ProtoMessage()               {}
func (*WalletTxDetail) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *WalletTxDetail) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *WalletTxDetail) GetReceipt() *ReceiptData {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func (m *WalletTxDetail) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *WalletTxDetail) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *WalletTxDetail) GetBlocktime() int64 {
	if m != nil {
		return m.Blocktime
	}
	return 0
}

func (m *WalletTxDetail) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *WalletTxDetail) GetFromaddr() string {
	if m != nil {
		return m.Fromaddr
	}
	return ""
}

func (m *WalletTxDetail) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

func (m *WalletTxDetail) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

type WalletTxDetails struct {
	TxDetails []*WalletTxDetail `protobuf:"bytes,1,rep,name=txDetails" json:"txDetails,omitempty"`
}

func (m *WalletTxDetails) Reset()                    { *m = WalletTxDetails{} }
func (m *WalletTxDetails) String() string            { return proto.CompactTextString(m) }
func (*WalletTxDetails) ProtoMessage()               {}
func (*WalletTxDetails) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{1} }

func (m *WalletTxDetails) GetTxDetails() []*WalletTxDetail {
	if m != nil {
		return m.TxDetails
	}
	return nil
}

// 钱包模块存贮的账户信息
// 	 privkey : 账户地址对应的私钥
// 	 label :账户地址对应的标签
// 	 addr :账户地址
// 	 timeStamp :创建账户时的时标
type WalletAccountStore struct {
	Privkey   string `protobuf:"bytes,1,opt,name=privkey" json:"privkey,omitempty"`
	Label     string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Addr      string `protobuf:"bytes,3,opt,name=addr" json:"addr,omitempty"`
	TimeStamp string `protobuf:"bytes,4,opt,name=timeStamp" json:"timeStamp,omitempty"`
}

func (m *WalletAccountStore) Reset()                    { *m = WalletAccountStore{} }
func (m *WalletAccountStore) String() string            { return proto.CompactTextString(m) }
func (*WalletAccountStore) ProtoMessage()               {}
func (*WalletAccountStore) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{2} }

func (m *WalletAccountStore) GetPrivkey() string {
	if m != nil {
		return m.Privkey
	}
	return ""
}

func (m *WalletAccountStore) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *WalletAccountStore) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *WalletAccountStore) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

type WalletAccountPrivacy struct {
	ViewPubkey   []byte `protobuf:"bytes,1,opt,name=viewPubkey,proto3" json:"viewPubkey,omitempty"`
	ViewPrivKey  []byte `protobuf:"bytes,2,opt,name=viewPrivKey,proto3" json:"viewPrivKey,omitempty"`
	SpendPubkey  []byte `protobuf:"bytes,3,opt,name=spendPubkey,proto3" json:"spendPubkey,omitempty"`
	SpendPrivKey []byte `protobuf:"bytes,4,opt,name=spendPrivKey,proto3" json:"spendPrivKey,omitempty"`
}

func (m *WalletAccountPrivacy) Reset()                    { *m = WalletAccountPrivacy{} }
func (m *WalletAccountPrivacy) String() string            { return proto.CompactTextString(m) }
func (*WalletAccountPrivacy) ProtoMessage()               {}
func (*WalletAccountPrivacy) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{3} }

func (m *WalletAccountPrivacy) GetViewPubkey() []byte {
	if m != nil {
		return m.ViewPubkey
	}
	return nil
}

func (m *WalletAccountPrivacy) GetViewPrivKey() []byte {
	if m != nil {
		return m.ViewPrivKey
	}
	return nil
}

func (m *WalletAccountPrivacy) GetSpendPubkey() []byte {
	if m != nil {
		return m.SpendPubkey
	}
	return nil
}

func (m *WalletAccountPrivacy) GetSpendPrivKey() []byte {
	if m != nil {
		return m.SpendPrivKey
	}
	return nil
}

// 钱包模块通过一个随机值对钱包密码加密
// 	 pwHash : 对钱包密码和一个随机值组合进行哈希计算
// 	 randstr :对钱包密码加密的一个随机值
type WalletPwHash struct {
	PwHash  []byte `protobuf:"bytes,1,opt,name=pwHash,proto3" json:"pwHash,omitempty"`
	Randstr string `protobuf:"bytes,2,opt,name=randstr" json:"randstr,omitempty"`
}

func (m *WalletPwHash) Reset()                    { *m = WalletPwHash{} }
func (m *WalletPwHash) String() string            { return proto.CompactTextString(m) }
func (*WalletPwHash) ProtoMessage()               {}
func (*WalletPwHash) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{4} }

func (m *WalletPwHash) GetPwHash() []byte {
	if m != nil {
		return m.PwHash
	}
	return nil
}

func (m *WalletPwHash) GetRandstr() string {
	if m != nil {
		return m.Randstr
	}
	return ""
}

// 钱包当前的状态
// 	 isWalletLock : 钱包是否锁状态，true锁定，false解锁
// 	 isAutoMining :钱包是否开启挖矿功能，true开启挖矿，false关闭挖矿
// 	 isHasSeed : 钱包是否有种子，true已有，false没有
// 	 isTicketLock :钱包挖矿买票锁状态，true锁定，false解锁，只能用于挖矿转账
type WalletStatus struct {
	IsWalletLock bool `protobuf:"varint,1,opt,name=isWalletLock" json:"isWalletLock,omitempty"`
	IsAutoMining bool `protobuf:"varint,2,opt,name=isAutoMining" json:"isAutoMining,omitempty"`
	IsHasSeed    bool `protobuf:"varint,3,opt,name=isHasSeed" json:"isHasSeed,omitempty"`
	IsTicketLock bool `protobuf:"varint,4,opt,name=isTicketLock" json:"isTicketLock,omitempty"`
}

func (m *WalletStatus) Reset()                    { *m = WalletStatus{} }
func (m *WalletStatus) String() string            { return proto.CompactTextString(m) }
func (*WalletStatus) ProtoMessage()               {}
func (*WalletStatus) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{5} }

func (m *WalletStatus) GetIsWalletLock() bool {
	if m != nil {
		return m.IsWalletLock
	}
	return false
}

func (m *WalletStatus) GetIsAutoMining() bool {
	if m != nil {
		return m.IsAutoMining
	}
	return false
}

func (m *WalletStatus) GetIsHasSeed() bool {
	if m != nil {
		return m.IsHasSeed
	}
	return false
}

func (m *WalletStatus) GetIsTicketLock() bool {
	if m != nil {
		return m.IsTicketLock
	}
	return false
}

type WalletAccounts struct {
	Wallets []*WalletAccount `protobuf:"bytes,1,rep,name=wallets" json:"wallets,omitempty"`
}

func (m *WalletAccounts) Reset()                    { *m = WalletAccounts{} }
func (m *WalletAccounts) String() string            { return proto.CompactTextString(m) }
func (*WalletAccounts) ProtoMessage()               {}
func (*WalletAccounts) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{6} }

func (m *WalletAccounts) GetWallets() []*WalletAccount {
	if m != nil {
		return m.Wallets
	}
	return nil
}

type WalletAccount struct {
	Acc   *Account `protobuf:"bytes,1,opt,name=acc" json:"acc,omitempty"`
	Label string   `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *WalletAccount) Reset()                    { *m = WalletAccount{} }
func (m *WalletAccount) String() string            { return proto.CompactTextString(m) }
func (*WalletAccount) ProtoMessage()               {}
func (*WalletAccount) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{7} }

func (m *WalletAccount) GetAcc() *Account {
	if m != nil {
		return m.Acc
	}
	return nil
}

func (m *WalletAccount) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

// 钱包解锁
// 	 passwd : 钱包密码
// 	 timeout :钱包解锁时间，0，一直解锁，非0值，超时之后继续锁定
// 	 walletOrTicket :解锁整个钱包还是只解锁挖矿买票功能，1只解锁挖矿买票，0解锁整个钱包
type WalletUnLock struct {
	Passwd         string `protobuf:"bytes,1,opt,name=passwd" json:"passwd,omitempty"`
	Timeout        int64  `protobuf:"varint,2,opt,name=timeout" json:"timeout,omitempty"`
	WalletOrTicket bool   `protobuf:"varint,3,opt,name=walletOrTicket" json:"walletOrTicket,omitempty"`
}

func (m *WalletUnLock) Reset()                    { *m = WalletUnLock{} }
func (m *WalletUnLock) String() string            { return proto.CompactTextString(m) }
func (*WalletUnLock) ProtoMessage()               {}
func (*WalletUnLock) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{8} }

func (m *WalletUnLock) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *WalletUnLock) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *WalletUnLock) GetWalletOrTicket() bool {
	if m != nil {
		return m.WalletOrTicket
	}
	return false
}

type GenSeedLang struct {
	Lang int32 `protobuf:"varint,1,opt,name=lang" json:"lang,omitempty"`
}

func (m *GenSeedLang) Reset()                    { *m = GenSeedLang{} }
func (m *GenSeedLang) String() string            { return proto.CompactTextString(m) }
func (*GenSeedLang) ProtoMessage()               {}
func (*GenSeedLang) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{9} }

func (m *GenSeedLang) GetLang() int32 {
	if m != nil {
		return m.Lang
	}
	return 0
}

type GetSeedByPw struct {
	Passwd string `protobuf:"bytes,1,opt,name=passwd" json:"passwd,omitempty"`
}

func (m *GetSeedByPw) Reset()                    { *m = GetSeedByPw{} }
func (m *GetSeedByPw) String() string            { return proto.CompactTextString(m) }
func (*GetSeedByPw) ProtoMessage()               {}
func (*GetSeedByPw) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{10} }

func (m *GetSeedByPw) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

// 存储钱包的种子
// 	 seed : 钱包种子
// 	 passwd :钱包密码
type SaveSeedByPw struct {
	Seed   string `protobuf:"bytes,1,opt,name=seed" json:"seed,omitempty"`
	Passwd string `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
}

func (m *SaveSeedByPw) Reset()                    { *m = SaveSeedByPw{} }
func (m *SaveSeedByPw) String() string            { return proto.CompactTextString(m) }
func (*SaveSeedByPw) ProtoMessage()               {}
func (*SaveSeedByPw) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{11} }

func (m *SaveSeedByPw) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

func (m *SaveSeedByPw) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type ReplySeed struct {
	Seed string `protobuf:"bytes,1,opt,name=seed" json:"seed,omitempty"`
}

func (m *ReplySeed) Reset()                    { *m = ReplySeed{} }
func (m *ReplySeed) String() string            { return proto.CompactTextString(m) }
func (*ReplySeed) ProtoMessage()               {}
func (*ReplySeed) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{12} }

func (m *ReplySeed) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

type ReqWalletSetPasswd struct {
	Oldpass string `protobuf:"bytes,1,opt,name=oldpass" json:"oldpass,omitempty"`
	Newpass string `protobuf:"bytes,2,opt,name=newpass" json:"newpass,omitempty"`
}

func (m *ReqWalletSetPasswd) Reset()                    { *m = ReqWalletSetPasswd{} }
func (m *ReqWalletSetPasswd) String() string            { return proto.CompactTextString(m) }
func (*ReqWalletSetPasswd) ProtoMessage()               {}
func (*ReqWalletSetPasswd) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{13} }

func (m *ReqWalletSetPasswd) GetOldpass() string {
	if m != nil {
		return m.Oldpass
	}
	return ""
}

func (m *ReqWalletSetPasswd) GetNewpass() string {
	if m != nil {
		return m.Newpass
	}
	return ""
}

type ReqNewAccount struct {
	Label string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
}

func (m *ReqNewAccount) Reset()                    { *m = ReqNewAccount{} }
func (m *ReqNewAccount) String() string            { return proto.CompactTextString(m) }
func (*ReqNewAccount) ProtoMessage()               {}
func (*ReqNewAccount) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{14} }

func (m *ReqNewAccount) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type MinerFlag struct {
	Flag    int32 `protobuf:"varint,1,opt,name=flag" json:"flag,omitempty"`
	Reserve int64 `protobuf:"varint,2,opt,name=reserve" json:"reserve,omitempty"`
}

func (m *MinerFlag) Reset()                    { *m = MinerFlag{} }
func (m *MinerFlag) String() string            { return proto.CompactTextString(m) }
func (*MinerFlag) ProtoMessage()               {}
func (*MinerFlag) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{15} }

func (m *MinerFlag) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *MinerFlag) GetReserve() int64 {
	if m != nil {
		return m.Reserve
	}
	return 0
}

// 获取钱包交易的详细信息
// 	 fromTx : []byte( Sprintf("%018d", height*100000 + index)，
// 				表示从高度 height 中的 index 开始获取交易列表；
// 			    第一次传参为空，获取最新的交易。)
// 	 count :获取交易列表的个数。
// 	 direction :查找方式；0，上一页；1，下一页。
type ReqWalletTransactionList struct {
	FromTx    []byte `protobuf:"bytes,1,opt,name=fromTx,proto3" json:"fromTx,omitempty"`
	Count     int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Direction int32  `protobuf:"varint,3,opt,name=direction" json:"direction,omitempty"`
	Isprivacy bool   `protobuf:"varint,4,opt,name=isprivacy" json:"isprivacy,omitempty"`
}

func (m *ReqWalletTransactionList) Reset()                    { *m = ReqWalletTransactionList{} }
func (m *ReqWalletTransactionList) String() string            { return proto.CompactTextString(m) }
func (*ReqWalletTransactionList) ProtoMessage()               {}
func (*ReqWalletTransactionList) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{16} }

func (m *ReqWalletTransactionList) GetFromTx() []byte {
	if m != nil {
		return m.FromTx
	}
	return nil
}

func (m *ReqWalletTransactionList) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqWalletTransactionList) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqWalletTransactionList) GetIsprivacy() bool {
	if m != nil {
		return m.Isprivacy
	}
	return false
}

type ReqWalletImportPrivKey struct {
	// bitcoin 的私钥格式
	Privkey string `protobuf:"bytes,1,opt,name=privkey" json:"privkey,omitempty"`
	Label   string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *ReqWalletImportPrivKey) Reset()                    { *m = ReqWalletImportPrivKey{} }
func (m *ReqWalletImportPrivKey) String() string            { return proto.CompactTextString(m) }
func (*ReqWalletImportPrivKey) ProtoMessage()               {}
func (*ReqWalletImportPrivKey) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{17} }

func (m *ReqWalletImportPrivKey) GetPrivkey() string {
	if m != nil {
		return m.Privkey
	}
	return ""
}

func (m *ReqWalletImportPrivKey) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

// 发送交易
// 	 from : 打出地址
// 	 to :接受地址
// 	 amount : 转账额度
// 	 note :转账备注
type ReqWalletSendToAddress struct {
	From        string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To          string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Amount      int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Note        string `protobuf:"bytes,4,opt,name=note" json:"note,omitempty"`
	IsToken     bool   `protobuf:"varint,5,opt,name=isToken" json:"isToken,omitempty"`
	TokenSymbol string `protobuf:"bytes,6,opt,name=tokenSymbol" json:"tokenSymbol,omitempty"`
}

func (m *ReqWalletSendToAddress) Reset()                    { *m = ReqWalletSendToAddress{} }
func (m *ReqWalletSendToAddress) String() string            { return proto.CompactTextString(m) }
func (*ReqWalletSendToAddress) ProtoMessage()               {}
func (*ReqWalletSendToAddress) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{18} }

func (m *ReqWalletSendToAddress) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ReqWalletSendToAddress) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ReqWalletSendToAddress) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReqWalletSendToAddress) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *ReqWalletSendToAddress) GetIsToken() bool {
	if m != nil {
		return m.IsToken
	}
	return false
}

func (m *ReqWalletSendToAddress) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

type ReqWalletSetFee struct {
	Amount int64 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
}

func (m *ReqWalletSetFee) Reset()                    { *m = ReqWalletSetFee{} }
func (m *ReqWalletSetFee) String() string            { return proto.CompactTextString(m) }
func (*ReqWalletSetFee) ProtoMessage()               {}
func (*ReqWalletSetFee) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{19} }

func (m *ReqWalletSetFee) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type ReqWalletSetLabel struct {
	Addr  string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *ReqWalletSetLabel) Reset()                    { *m = ReqWalletSetLabel{} }
func (m *ReqWalletSetLabel) String() string            { return proto.CompactTextString(m) }
func (*ReqWalletSetLabel) ProtoMessage()               {}
func (*ReqWalletSetLabel) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{20} }

func (m *ReqWalletSetLabel) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqWalletSetLabel) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type ReqWalletMergeBalance struct {
	To string `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
}

func (m *ReqWalletMergeBalance) Reset()                    { *m = ReqWalletMergeBalance{} }
func (m *ReqWalletMergeBalance) String() string            { return proto.CompactTextString(m) }
func (*ReqWalletMergeBalance) ProtoMessage()               {}
func (*ReqWalletMergeBalance) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{21} }

func (m *ReqWalletMergeBalance) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type ReqStr struct {
	ReqStr string `protobuf:"bytes,1,opt,name=reqStr" json:"reqStr,omitempty"`
}

func (m *ReqStr) Reset()                    { *m = ReqStr{} }
func (m *ReqStr) String() string            { return proto.CompactTextString(m) }
func (*ReqStr) ProtoMessage()               {}
func (*ReqStr) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{22} }

func (m *ReqStr) GetReqStr() string {
	if m != nil {
		return m.ReqStr
	}
	return ""
}

type ReplyStr struct {
	Replystr string `protobuf:"bytes,1,opt,name=replystr" json:"replystr,omitempty"`
}

func (m *ReplyStr) Reset()                    { *m = ReplyStr{} }
func (m *ReplyStr) String() string            { return proto.CompactTextString(m) }
func (*ReplyStr) ProtoMessage()               {}
func (*ReplyStr) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{23} }

func (m *ReplyStr) GetReplystr() string {
	if m != nil {
		return m.Replystr
	}
	return ""
}

type ReqTokenPreCreate struct {
	CreatorAddr  string `protobuf:"bytes,1,opt,name=creator_addr,json=creatorAddr" json:"creator_addr,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,3,opt,name=symbol" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,4,opt,name=introduction" json:"introduction,omitempty"`
	OwnerAddr    string `protobuf:"bytes,5,opt,name=owner_addr,json=ownerAddr" json:"owner_addr,omitempty"`
	Total        int64  `protobuf:"varint,6,opt,name=total" json:"total,omitempty"`
	Price        int64  `protobuf:"varint,7,opt,name=price" json:"price,omitempty"`
}

func (m *ReqTokenPreCreate) Reset()                    { *m = ReqTokenPreCreate{} }
func (m *ReqTokenPreCreate) String() string            { return proto.CompactTextString(m) }
func (*ReqTokenPreCreate) ProtoMessage()               {}
func (*ReqTokenPreCreate) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{24} }

func (m *ReqTokenPreCreate) GetCreatorAddr() string {
	if m != nil {
		return m.CreatorAddr
	}
	return ""
}

func (m *ReqTokenPreCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqTokenPreCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReqTokenPreCreate) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *ReqTokenPreCreate) GetOwnerAddr() string {
	if m != nil {
		return m.OwnerAddr
	}
	return ""
}

func (m *ReqTokenPreCreate) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ReqTokenPreCreate) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type ReqTokenFinishCreate struct {
	FinisherAddr string `protobuf:"bytes,1,opt,name=finisher_addr,json=finisherAddr" json:"finisher_addr,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	OwnerAddr    string `protobuf:"bytes,3,opt,name=owner_addr,json=ownerAddr" json:"owner_addr,omitempty"`
}

func (m *ReqTokenFinishCreate) Reset()                    { *m = ReqTokenFinishCreate{} }
func (m *ReqTokenFinishCreate) String() string            { return proto.CompactTextString(m) }
func (*ReqTokenFinishCreate) ProtoMessage()               {}
func (*ReqTokenFinishCreate) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{25} }

func (m *ReqTokenFinishCreate) GetFinisherAddr() string {
	if m != nil {
		return m.FinisherAddr
	}
	return ""
}

func (m *ReqTokenFinishCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReqTokenFinishCreate) GetOwnerAddr() string {
	if m != nil {
		return m.OwnerAddr
	}
	return ""
}

type ReqTokenRevokeCreate struct {
	RevokerAddr string `protobuf:"bytes,1,opt,name=revoker_addr,json=revokerAddr" json:"revoker_addr,omitempty"`
	Symbol      string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	OwnerAddr   string `protobuf:"bytes,3,opt,name=owner_addr,json=ownerAddr" json:"owner_addr,omitempty"`
}

func (m *ReqTokenRevokeCreate) Reset()                    { *m = ReqTokenRevokeCreate{} }
func (m *ReqTokenRevokeCreate) String() string            { return proto.CompactTextString(m) }
func (*ReqTokenRevokeCreate) ProtoMessage()               {}
func (*ReqTokenRevokeCreate) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{26} }

func (m *ReqTokenRevokeCreate) GetRevokerAddr() string {
	if m != nil {
		return m.RevokerAddr
	}
	return ""
}

func (m *ReqTokenRevokeCreate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReqTokenRevokeCreate) GetOwnerAddr() string {
	if m != nil {
		return m.OwnerAddr
	}
	return ""
}

type ReqSellToken struct {
	Sell  *TradeForSell `protobuf:"bytes,1,opt,name=sell" json:"sell,omitempty"`
	Owner string        `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *ReqSellToken) Reset()                    { *m = ReqSellToken{} }
func (m *ReqSellToken) String() string            { return proto.CompactTextString(m) }
func (*ReqSellToken) ProtoMessage()               {}
func (*ReqSellToken) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{27} }

func (m *ReqSellToken) GetSell() *TradeForSell {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (m *ReqSellToken) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type ReqBuyToken struct {
	Buy   *TradeForBuy `protobuf:"bytes,1,opt,name=buy" json:"buy,omitempty"`
	Buyer string       `protobuf:"bytes,2,opt,name=buyer" json:"buyer,omitempty"`
}

func (m *ReqBuyToken) Reset()                    { *m = ReqBuyToken{} }
func (m *ReqBuyToken) String() string            { return proto.CompactTextString(m) }
func (*ReqBuyToken) ProtoMessage()               {}
func (*ReqBuyToken) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{28} }

func (m *ReqBuyToken) GetBuy() *TradeForBuy {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *ReqBuyToken) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

type ReqRevokeSell struct {
	Revoke *TradeForRevokeSell `protobuf:"bytes,1,opt,name=revoke" json:"revoke,omitempty"`
	Owner  string              `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *ReqRevokeSell) Reset()                    { *m = ReqRevokeSell{} }
func (m *ReqRevokeSell) String() string            { return proto.CompactTextString(m) }
func (*ReqRevokeSell) ProtoMessage()               {}
func (*ReqRevokeSell) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{29} }

func (m *ReqRevokeSell) GetRevoke() *TradeForRevokeSell {
	if m != nil {
		return m.Revoke
	}
	return nil
}

func (m *ReqRevokeSell) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type ReqModifyConfig struct {
	Key      string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Op       string `protobuf:"bytes,2,opt,name=op" json:"op,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Modifier string `protobuf:"bytes,4,opt,name=modifier" json:"modifier,omitempty"`
}

func (m *ReqModifyConfig) Reset()                    { *m = ReqModifyConfig{} }
func (m *ReqModifyConfig) String() string            { return proto.CompactTextString(m) }
func (*ReqModifyConfig) ProtoMessage()               {}
func (*ReqModifyConfig) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{30} }

func (m *ReqModifyConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReqModifyConfig) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *ReqModifyConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ReqModifyConfig) GetModifier() string {
	if m != nil {
		return m.Modifier
	}
	return ""
}

type ReqSignRawTx struct {
	Addr    string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Privkey string `protobuf:"bytes,2,opt,name=privkey" json:"privkey,omitempty"`
	TxHex   string `protobuf:"bytes,3,opt,name=txHex" json:"txHex,omitempty"`
	Expire  string `protobuf:"bytes,4,opt,name=expire" json:"expire,omitempty"`
	Index   int32  `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
}

func (m *ReqSignRawTx) Reset()                    { *m = ReqSignRawTx{} }
func (m *ReqSignRawTx) String() string            { return proto.CompactTextString(m) }
func (*ReqSignRawTx) ProtoMessage()               {}
func (*ReqSignRawTx) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{31} }

func (m *ReqSignRawTx) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqSignRawTx) GetPrivkey() string {
	if m != nil {
		return m.Privkey
	}
	return ""
}

func (m *ReqSignRawTx) GetTxHex() string {
	if m != nil {
		return m.TxHex
	}
	return ""
}

func (m *ReqSignRawTx) GetExpire() string {
	if m != nil {
		return m.Expire
	}
	return ""
}

func (m *ReqSignRawTx) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ReplySignRawTx struct {
	TxHex string `protobuf:"bytes,1,opt,name=txHex" json:"txHex,omitempty"`
}

func (m *ReplySignRawTx) Reset()                    { *m = ReplySignRawTx{} }
func (m *ReplySignRawTx) String() string            { return proto.CompactTextString(m) }
func (*ReplySignRawTx) ProtoMessage()               {}
func (*ReplySignRawTx) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{32} }

func (m *ReplySignRawTx) GetTxHex() string {
	if m != nil {
		return m.TxHex
	}
	return ""
}

type ReportErrEvent struct {
	Frommodule string `protobuf:"bytes,1,opt,name=frommodule" json:"frommodule,omitempty"`
	Tomodule   string `protobuf:"bytes,2,opt,name=tomodule" json:"tomodule,omitempty"`
	Error      string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *ReportErrEvent) Reset()                    { *m = ReportErrEvent{} }
func (m *ReportErrEvent) String() string            { return proto.CompactTextString(m) }
func (*ReportErrEvent) ProtoMessage()               {}
func (*ReportErrEvent) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{33} }

func (m *ReportErrEvent) GetFrommodule() string {
	if m != nil {
		return m.Frommodule
	}
	return ""
}

func (m *ReportErrEvent) GetTomodule() string {
	if m != nil {
		return m.Tomodule
	}
	return ""
}

func (m *ReportErrEvent) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Int32 struct {
	Data int32 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *Int32) Reset()                    { *m = Int32{} }
func (m *Int32) String() string            { return proto.CompactTextString(m) }
func (*Int32) ProtoMessage()               {}
func (*Int32) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{34} }

func (m *Int32) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

type ReqPub2Pri struct {
	// 接收人可见公钥A
	// string viewPublic  = 1;
	// 接收人花费公钥B
	// string spendPublic = 2;
	Tokenname string `protobuf:"bytes,3,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64  `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	// 发送人地址
	Sender     string `protobuf:"bytes,6,opt,name=sender" json:"sender,omitempty"`
	Mixin      int32  `protobuf:"varint,7,opt,name=mixin" json:"mixin,omitempty"`
	Pubkeypair string `protobuf:"bytes,8,opt,name=pubkeypair" json:"pubkeypair,omitempty"`
}

func (m *ReqPub2Pri) Reset()                    { *m = ReqPub2Pri{} }
func (m *ReqPub2Pri) String() string            { return proto.CompactTextString(m) }
func (*ReqPub2Pri) ProtoMessage()               {}
func (*ReqPub2Pri) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{35} }

func (m *ReqPub2Pri) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *ReqPub2Pri) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReqPub2Pri) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *ReqPub2Pri) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *ReqPub2Pri) GetMixin() int32 {
	if m != nil {
		return m.Mixin
	}
	return 0
}

func (m *ReqPub2Pri) GetPubkeypair() string {
	if m != nil {
		return m.Pubkeypair
	}
	return ""
}

type ReqPri2Pri struct {
	// 接收人可见公钥A
	// string viewPublic  = 1; //A
	// 接收人花费公钥B
	// string spendPublic = 2; //B
	Tokenname string `protobuf:"bytes,3,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64  `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	// 隐私交易发起人地址
	Sender string `protobuf:"bytes,6,opt,name=sender" json:"sender,omitempty"`
	Mixin  int32  `protobuf:"varint,7,opt,name=mixin" json:"mixin,omitempty"`
	// 	string txhash      = 7;
	Pubkeypair string `protobuf:"bytes,8,opt,name=pubkeypair" json:"pubkeypair,omitempty"`
}

func (m *ReqPri2Pri) Reset()                    { *m = ReqPri2Pri{} }
func (m *ReqPri2Pri) String() string            { return proto.CompactTextString(m) }
func (*ReqPri2Pri) ProtoMessage()               {}
func (*ReqPri2Pri) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{36} }

func (m *ReqPri2Pri) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *ReqPri2Pri) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReqPri2Pri) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *ReqPri2Pri) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *ReqPri2Pri) GetMixin() int32 {
	if m != nil {
		return m.Mixin
	}
	return 0
}

func (m *ReqPri2Pri) GetPubkeypair() string {
	if m != nil {
		return m.Pubkeypair
	}
	return ""
}

type ReqPri2Pub struct {
	Receiver  string `protobuf:"bytes,1,opt,name=receiver" json:"receiver,omitempty"`
	Tokenname string `protobuf:"bytes,2,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount    int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Note      string `protobuf:"bytes,4,opt,name=note" json:"note,omitempty"`
	// 隐私交易发起人地址
	Sender string `protobuf:"bytes,5,opt,name=sender" json:"sender,omitempty"`
	Mixin  int32  `protobuf:"varint,6,opt,name=mixin" json:"mixin,omitempty"`
}

func (m *ReqPri2Pub) Reset()                    { *m = ReqPri2Pub{} }
func (m *ReqPri2Pub) String() string            { return proto.CompactTextString(m) }
func (*ReqPri2Pub) ProtoMessage()               {}
func (*ReqPri2Pub) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{37} }

func (m *ReqPri2Pub) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *ReqPri2Pub) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *ReqPri2Pub) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReqPri2Pub) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *ReqPri2Pub) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *ReqPri2Pub) GetMixin() int32 {
	if m != nil {
		return m.Mixin
	}
	return 0
}

type ReqCreateUTXOs struct {
	// string viewPublic  = 1; //接收人可见公钥A
	// string spendPublic = 2; //接收人花费公钥B
	Tokenname  string `protobuf:"bytes,3,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount     int64  `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Note       string `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
	Sender     string `protobuf:"bytes,6,opt,name=sender" json:"sender,omitempty"`
	Count      int32  `protobuf:"varint,7,opt,name=count" json:"count,omitempty"`
	Pubkeypair string `protobuf:"bytes,8,opt,name=pubkeypair" json:"pubkeypair,omitempty"`
}

func (m *ReqCreateUTXOs) Reset()                    { *m = ReqCreateUTXOs{} }
func (m *ReqCreateUTXOs) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateUTXOs) ProtoMessage()               {}
func (*ReqCreateUTXOs) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{38} }

func (m *ReqCreateUTXOs) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *ReqCreateUTXOs) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReqCreateUTXOs) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *ReqCreateUTXOs) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *ReqCreateUTXOs) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqCreateUTXOs) GetPubkeypair() string {
	if m != nil {
		return m.Pubkeypair
	}
	return ""
}

type ReplyPrivacyPkPair struct {
	ShowSuccessful bool `protobuf:"varint,1,opt,name=showSuccessful" json:"showSuccessful,omitempty"`
	// string viewPub       = 2;
	// string spendPub      = 3;
	Pubkeypair string `protobuf:"bytes,4,opt,name=pubkeypair" json:"pubkeypair,omitempty"`
}

func (m *ReplyPrivacyPkPair) Reset()                    { *m = ReplyPrivacyPkPair{} }
func (m *ReplyPrivacyPkPair) String() string            { return proto.CompactTextString(m) }
func (*ReplyPrivacyPkPair) ProtoMessage()               {}
func (*ReplyPrivacyPkPair) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{39} }

func (m *ReplyPrivacyPkPair) GetShowSuccessful() bool {
	if m != nil {
		return m.ShowSuccessful
	}
	return false
}

func (m *ReplyPrivacyPkPair) GetPubkeypair() string {
	if m != nil {
		return m.Pubkeypair
	}
	return ""
}

type ReqPrivBal4AddrToken struct {
	Addr  string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *ReqPrivBal4AddrToken) Reset()                    { *m = ReqPrivBal4AddrToken{} }
func (m *ReqPrivBal4AddrToken) String() string            { return proto.CompactTextString(m) }
func (*ReqPrivBal4AddrToken) ProtoMessage()               {}
func (*ReqPrivBal4AddrToken) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{40} }

func (m *ReqPrivBal4AddrToken) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqPrivBal4AddrToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ReplyPrivacyBalance struct {
	Onetimeaddr string `protobuf:"bytes,1,opt,name=onetimeaddr" json:"onetimeaddr,omitempty"`
	Balance     int64  `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
}

func (m *ReplyPrivacyBalance) Reset()                    { *m = ReplyPrivacyBalance{} }
func (m *ReplyPrivacyBalance) String() string            { return proto.CompactTextString(m) }
func (*ReplyPrivacyBalance) ProtoMessage()               {}
func (*ReplyPrivacyBalance) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{41} }

func (m *ReplyPrivacyBalance) GetOnetimeaddr() string {
	if m != nil {
		return m.Onetimeaddr
	}
	return ""
}

func (m *ReplyPrivacyBalance) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type PrivacyDBStore struct {
	Txhash           []byte `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Tokenname        string `protobuf:"bytes,2,opt,name=tokenname" json:"tokenname,omitempty"`
	Amount           int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	OutIndex         int32  `protobuf:"varint,4,opt,name=outIndex" json:"outIndex,omitempty"`
	TxPublicKeyR     []byte `protobuf:"bytes,5,opt,name=txPublicKeyR,proto3" json:"txPublicKeyR,omitempty"`
	OnetimePublicKey []byte `protobuf:"bytes,6,opt,name=onetimePublicKey,proto3" json:"onetimePublicKey,omitempty"`
	Owner            string `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	Height           int64  `protobuf:"varint,8,opt,name=height" json:"height,omitempty"`
	Txindex          int32  `protobuf:"varint,9,opt,name=txindex" json:"txindex,omitempty"`
	Blockhash        []byte `protobuf:"bytes,10,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
}

func (m *PrivacyDBStore) Reset()                    { *m = PrivacyDBStore{} }
func (m *PrivacyDBStore) String() string            { return proto.CompactTextString(m) }
func (*PrivacyDBStore) ProtoMessage()               {}
func (*PrivacyDBStore) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{42} }

func (m *PrivacyDBStore) GetTxhash() []byte {
	if m != nil {
		return m.Txhash
	}
	return nil
}

func (m *PrivacyDBStore) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *PrivacyDBStore) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PrivacyDBStore) GetOutIndex() int32 {
	if m != nil {
		return m.OutIndex
	}
	return 0
}

func (m *PrivacyDBStore) GetTxPublicKeyR() []byte {
	if m != nil {
		return m.TxPublicKeyR
	}
	return nil
}

func (m *PrivacyDBStore) GetOnetimePublicKey() []byte {
	if m != nil {
		return m.OnetimePublicKey
	}
	return nil
}

func (m *PrivacyDBStore) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *PrivacyDBStore) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PrivacyDBStore) GetTxindex() int32 {
	if m != nil {
		return m.Txindex
	}
	return 0
}

func (m *PrivacyDBStore) GetBlockhash() []byte {
	if m != nil {
		return m.Blockhash
	}
	return nil
}

type UTXO struct {
	Amount    int64      `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	UtxoBasic *UTXOBasic `protobuf:"bytes,2,opt,name=utxoBasic" json:"utxoBasic,omitempty"`
}

func (m *UTXO) Reset()                    { *m = UTXO{} }
func (m *UTXO) String() string            { return proto.CompactTextString(m) }
func (*UTXO) ProtoMessage()               {}
func (*UTXO) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{43} }

func (m *UTXO) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *UTXO) GetUtxoBasic() *UTXOBasic {
	if m != nil {
		return m.UtxoBasic
	}
	return nil
}

type UTXOs struct {
	Utxos []*UTXO `protobuf:"bytes,1,rep,name=utxos" json:"utxos,omitempty"`
}

func (m *UTXOs) Reset()                    { *m = UTXOs{} }
func (m *UTXOs) String() string            { return proto.CompactTextString(m) }
func (*UTXOs) ProtoMessage()               {}
func (*UTXOs) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{44} }

func (m *UTXOs) GetUtxos() []*UTXO {
	if m != nil {
		return m.Utxos
	}
	return nil
}

type ReqUTXOGlobalIndex struct {
	Tokenname string  `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	MixCount  int32   `protobuf:"varint,2,opt,name=mixCount" json:"mixCount,omitempty"`
	Amount    []int64 `protobuf:"varint,3,rep,packed,name=amount" json:"amount,omitempty"`
}

func (m *ReqUTXOGlobalIndex) Reset()                    { *m = ReqUTXOGlobalIndex{} }
func (m *ReqUTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*ReqUTXOGlobalIndex) ProtoMessage()               {}
func (*ReqUTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{45} }

func (m *ReqUTXOGlobalIndex) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *ReqUTXOGlobalIndex) GetMixCount() int32 {
	if m != nil {
		return m.MixCount
	}
	return 0
}

func (m *ReqUTXOGlobalIndex) GetAmount() []int64 {
	if m != nil {
		return m.Amount
	}
	return nil
}

type UTXOBasic struct {
	UtxoGlobalIndex *UTXOGlobalIndex `protobuf:"bytes,1,opt,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
	OnetimePubkey   []byte           `protobuf:"bytes,2,opt,name=onetimePubkey,proto3" json:"onetimePubkey,omitempty"`
}

func (m *UTXOBasic) Reset()                    { *m = UTXOBasic{} }
func (m *UTXOBasic) String() string            { return proto.CompactTextString(m) }
func (*UTXOBasic) ProtoMessage()               {}
func (*UTXOBasic) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{46} }

func (m *UTXOBasic) GetUtxoGlobalIndex() *UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

func (m *UTXOBasic) GetOnetimePubkey() []byte {
	if m != nil {
		return m.OnetimePubkey
	}
	return nil
}

type UTXOIndex4Amount struct {
	Amount int64        `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Utxos  []*UTXOBasic `protobuf:"bytes,2,rep,name=utxos" json:"utxos,omitempty"`
}

func (m *UTXOIndex4Amount) Reset()                    { *m = UTXOIndex4Amount{} }
func (m *UTXOIndex4Amount) String() string            { return proto.CompactTextString(m) }
func (*UTXOIndex4Amount) ProtoMessage()               {}
func (*UTXOIndex4Amount) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{47} }

func (m *UTXOIndex4Amount) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *UTXOIndex4Amount) GetUtxos() []*UTXOBasic {
	if m != nil {
		return m.Utxos
	}
	return nil
}

type ResUTXOGlobalIndex struct {
	Tokenname        string              `protobuf:"bytes,1,opt,name=tokenname" json:"tokenname,omitempty"`
	MixCount         int32               `protobuf:"varint,2,opt,name=mixCount" json:"mixCount,omitempty"`
	UtxoIndex4Amount []*UTXOIndex4Amount `protobuf:"bytes,3,rep,name=utxoIndex4Amount" json:"utxoIndex4Amount,omitempty"`
}

func (m *ResUTXOGlobalIndex) Reset()                    { *m = ResUTXOGlobalIndex{} }
func (m *ResUTXOGlobalIndex) String() string            { return proto.CompactTextString(m) }
func (*ResUTXOGlobalIndex) ProtoMessage()               {}
func (*ResUTXOGlobalIndex) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{48} }

func (m *ResUTXOGlobalIndex) GetTokenname() string {
	if m != nil {
		return m.Tokenname
	}
	return ""
}

func (m *ResUTXOGlobalIndex) GetMixCount() int32 {
	if m != nil {
		return m.MixCount
	}
	return 0
}

func (m *ResUTXOGlobalIndex) GetUtxoIndex4Amount() []*UTXOIndex4Amount {
	if m != nil {
		return m.UtxoIndex4Amount
	}
	return nil
}

type FTXOsSTXOsInOneTx struct {
	UtxoGlobalIndex []*UTXOGlobalIndex `protobuf:"bytes,1,rep,name=utxoGlobalIndex" json:"utxoGlobalIndex,omitempty"`
}

func (m *FTXOsSTXOsInOneTx) Reset()                    { *m = FTXOsSTXOsInOneTx{} }
func (m *FTXOsSTXOsInOneTx) String() string            { return proto.CompactTextString(m) }
func (*FTXOsSTXOsInOneTx) ProtoMessage()               {}
func (*FTXOsSTXOsInOneTx) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{49} }

func (m *FTXOsSTXOsInOneTx) GetUtxoGlobalIndex() []*UTXOGlobalIndex {
	if m != nil {
		return m.UtxoGlobalIndex
	}
	return nil
}

func init() {
	proto.RegisterType((*WalletTxDetail)(nil), "types.WalletTxDetail")
	proto.RegisterType((*WalletTxDetails)(nil), "types.WalletTxDetails")
	proto.RegisterType((*WalletAccountStore)(nil), "types.WalletAccountStore")
	proto.RegisterType((*WalletAccountPrivacy)(nil), "types.WalletAccountPrivacy")
	proto.RegisterType((*WalletPwHash)(nil), "types.WalletPwHash")
	proto.RegisterType((*WalletStatus)(nil), "types.WalletStatus")
	proto.RegisterType((*WalletAccounts)(nil), "types.WalletAccounts")
	proto.RegisterType((*WalletAccount)(nil), "types.WalletAccount")
	proto.RegisterType((*WalletUnLock)(nil), "types.WalletUnLock")
	proto.RegisterType((*GenSeedLang)(nil), "types.GenSeedLang")
	proto.RegisterType((*GetSeedByPw)(nil), "types.GetSeedByPw")
	proto.RegisterType((*SaveSeedByPw)(nil), "types.SaveSeedByPw")
	proto.RegisterType((*ReplySeed)(nil), "types.ReplySeed")
	proto.RegisterType((*ReqWalletSetPasswd)(nil), "types.ReqWalletSetPasswd")
	proto.RegisterType((*ReqNewAccount)(nil), "types.ReqNewAccount")
	proto.RegisterType((*MinerFlag)(nil), "types.MinerFlag")
	proto.RegisterType((*ReqWalletTransactionList)(nil), "types.ReqWalletTransactionList")
	proto.RegisterType((*ReqWalletImportPrivKey)(nil), "types.ReqWalletImportPrivKey")
	proto.RegisterType((*ReqWalletSendToAddress)(nil), "types.ReqWalletSendToAddress")
	proto.RegisterType((*ReqWalletSetFee)(nil), "types.ReqWalletSetFee")
	proto.RegisterType((*ReqWalletSetLabel)(nil), "types.ReqWalletSetLabel")
	proto.RegisterType((*ReqWalletMergeBalance)(nil), "types.ReqWalletMergeBalance")
	proto.RegisterType((*ReqStr)(nil), "types.ReqStr")
	proto.RegisterType((*ReplyStr)(nil), "types.ReplyStr")
	proto.RegisterType((*ReqTokenPreCreate)(nil), "types.ReqTokenPreCreate")
	proto.RegisterType((*ReqTokenFinishCreate)(nil), "types.ReqTokenFinishCreate")
	proto.RegisterType((*ReqTokenRevokeCreate)(nil), "types.ReqTokenRevokeCreate")
	proto.RegisterType((*ReqSellToken)(nil), "types.ReqSellToken")
	proto.RegisterType((*ReqBuyToken)(nil), "types.ReqBuyToken")
	proto.RegisterType((*ReqRevokeSell)(nil), "types.ReqRevokeSell")
	proto.RegisterType((*ReqModifyConfig)(nil), "types.ReqModifyConfig")
	proto.RegisterType((*ReqSignRawTx)(nil), "types.ReqSignRawTx")
	proto.RegisterType((*ReplySignRawTx)(nil), "types.ReplySignRawTx")
	proto.RegisterType((*ReportErrEvent)(nil), "types.ReportErrEvent")
	proto.RegisterType((*Int32)(nil), "types.Int32")
	proto.RegisterType((*ReqPub2Pri)(nil), "types.ReqPub2Pri")
	proto.RegisterType((*ReqPri2Pri)(nil), "types.ReqPri2Pri")
	proto.RegisterType((*ReqPri2Pub)(nil), "types.ReqPri2Pub")
	proto.RegisterType((*ReqCreateUTXOs)(nil), "types.ReqCreateUTXOs")
	proto.RegisterType((*ReplyPrivacyPkPair)(nil), "types.ReplyPrivacyPkPair")
	proto.RegisterType((*ReqPrivBal4AddrToken)(nil), "types.ReqPrivBal4AddrToken")
	proto.RegisterType((*ReplyPrivacyBalance)(nil), "types.ReplyPrivacyBalance")
	proto.RegisterType((*PrivacyDBStore)(nil), "types.PrivacyDBStore")
	proto.RegisterType((*UTXO)(nil), "types.UTXO")
	proto.RegisterType((*UTXOs)(nil), "types.UTXOs")
	proto.RegisterType((*ReqUTXOGlobalIndex)(nil), "types.ReqUTXOGlobalIndex")
	proto.RegisterType((*UTXOBasic)(nil), "types.UTXOBasic")
	proto.RegisterType((*UTXOIndex4Amount)(nil), "types.UTXOIndex4Amount")
	proto.RegisterType((*ResUTXOGlobalIndex)(nil), "types.ResUTXOGlobalIndex")
	proto.RegisterType((*FTXOsSTXOsInOneTx)(nil), "types.FTXOsSTXOsInOneTx")
}

func init() { proto.RegisterFile("wallet.proto", fileDescriptor13) }

var fileDescriptor13 = []byte{
	// 1859 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4d, 0x6f, 0x1c, 0xb9,
	0xd1, 0x46, 0xcf, 0x68, 0x24, 0x0d, 0x35, 0x92, 0xe5, 0xb6, 0xd7, 0xef, 0xbc, 0xca, 0xd7, 0x98,
	0xd9, 0xf5, 0x2a, 0x8b, 0x40, 0x40, 0xe4, 0xbd, 0x24, 0x40, 0x00, 0x4b, 0xf6, 0xca, 0x12, 0xd6,
	0xb2, 0x27, 0x9c, 0x31, 0xb2, 0x87, 0x00, 0x01, 0xa7, 0x9b, 0x92, 0x08, 0xf5, 0x34, 0x47, 0x6c,
	0xf6, 0x7c, 0xdc, 0x72, 0xc8, 0x3f, 0xc8, 0x25, 0xc8, 0x21, 0xc8, 0x21, 0x87, 0x1c, 0xf3, 0x57,
	0xf2, 0x8f, 0x82, 0x2a, 0x92, 0xdd, 0x6c, 0x7d, 0x60, 0xb1, 0x49, 0x10, 0xe4, 0x32, 0xe0, 0x53,
	0x2c, 0x16, 0xab, 0x1e, 0x16, 0xab, 0xd8, 0x43, 0x7a, 0x0b, 0x9e, 0x65, 0xc2, 0x1c, 0xcc, 0xb4,
	0x32, 0x2a, 0xee, 0x98, 0xd5, 0x4c, 0x14, 0x7b, 0x8f, 0x8d, 0xe6, 0x79, 0xc1, 0x13, 0x23, 0x55,
	0x6e, 0x67, 0xf6, 0x76, 0x27, 0x99, 0x4a, 0xae, 0x93, 0x2b, 0x2e, 0xbd, 0x64, 0x9b, 0x27, 0x89,
	0x2a, 0x73, 0xb7, 0x74, 0x6f, 0x47, 0x2c, 0x45, 0x52, 0x1a, 0xa5, 0x1d, 0x7e, 0xe2, 0xf1, 0x58,
	0xf3, 0x54, 0x58, 0x21, 0xfd, 0x53, 0x8b, 0xec, 0xfc, 0x1a, 0x37, 0x1c, 0x2f, 0xdf, 0x08, 0xc3,
	0x65, 0x16, 0x53, 0xd2, 0x32, 0xcb, 0x7e, 0x34, 0x88, 0xf6, 0xb7, 0x0e, 0xe3, 0x03, 0xdc, 0xff,
	0x60, 0x5c, 0x6f, 0xcf, 0x5a, 0x66, 0x19, 0xff, 0x94, 0x6c, 0x68, 0x91, 0x08, 0x39, 0x33, 0xfd,
	0x56, 0x43, 0x91, 0x59, 0xe9, 0x1b, 0x6e, 0x38, 0xf3, 0x2a, 0xf1, 0x33, 0xb2, 0x7e, 0x25, 0xe4,
	0xe5, 0x95, 0xe9, 0xb7, 0x07, 0xd1, 0x7e, 0x9b, 0x39, 0x14, 0x3f, 0x25, 0x1d, 0x99, 0xa7, 0x62,
	0xd9, 0x5f, 0x43, 0xb1, 0x05, 0xf1, 0xf7, 0x49, 0x17, 0x43, 0x33, 0x72, 0x2a, 0xfa, 0x1d, 0x9c,
	0xa9, 0x05, 0x60, 0x8b, 0x4f, 0x21, 0xca, 0xfe, 0xba, 0xb5, 0x65, 0x51, 0xbc, 0x47, 0x36, 0x2f,
	0xb4, 0x9a, 0xf2, 0x34, 0xd5, 0xfd, 0x8d, 0x41, 0xb4, 0xdf, 0x65, 0x15, 0x86, 0x35, 0x66, 0x79,
	0xc5, 0x8b, 0xab, 0xfe, 0xe6, 0x20, 0xda, 0xef, 0x31, 0x87, 0xe2, 0x1f, 0x12, 0x62, 0x63, 0x7a,
	0xcf, 0xa7, 0xa2, 0xdf, 0xc5, 0x55, 0x81, 0x84, 0x9e, 0x90, 0x47, 0x4d, 0x6e, 0x8a, 0xf8, 0x25,
	0xe9, 0x1a, 0x0f, 0xfa, 0xd1, 0xa0, 0xbd, 0xbf, 0x75, 0xf8, 0x89, 0x0b, 0xbd, 0xa9, 0xca, 0x6a,
	0x3d, 0x3a, 0x27, 0xb1, 0x9d, 0x3c, 0xb2, 0x07, 0x34, 0x32, 0x4a, 0x8b, 0xb8, 0x4f, 0x36, 0x66,
	0x5a, 0xce, 0xaf, 0xc5, 0x0a, 0xc9, 0xee, 0x32, 0x0f, 0x81, 0x97, 0x8c, 0x4f, 0x44, 0x86, 0xdc,
	0x76, 0x99, 0x05, 0x71, 0x4c, 0xd6, 0x30, 0xba, 0x36, 0x0a, 0x71, 0x0c, 0x5c, 0x01, 0x2b, 0x23,
	0xc3, 0xa7, 0x33, 0x64, 0xb1, 0xcb, 0x6a, 0x01, 0xfd, 0x73, 0x44, 0x9e, 0x36, 0x36, 0x1e, 0x6a,
	0x39, 0xe7, 0xc9, 0x0a, 0x02, 0x9f, 0x4b, 0xb1, 0x18, 0x96, 0x13, 0xbf, 0x7b, 0x8f, 0x05, 0x92,
	0x78, 0x40, 0xb6, 0x10, 0x69, 0x39, 0xff, 0x5a, 0xac, 0xd0, 0x8d, 0x1e, 0x0b, 0x45, 0xa0, 0x51,
	0xcc, 0x44, 0x9e, 0x3a, 0x13, 0x6d, 0xab, 0x11, 0x88, 0x62, 0x4a, 0x7a, 0x16, 0x3a, 0x23, 0x6b,
	0xa8, 0xd2, 0x90, 0xd1, 0x57, 0xa4, 0x67, 0xfd, 0x1b, 0x2e, 0x4e, 0xe1, 0x40, 0x9e, 0x91, 0xf5,
	0x19, 0x8e, 0x9c, 0x4f, 0x0e, 0x01, 0x55, 0x9a, 0xe7, 0x69, 0x61, 0xb4, 0xa3, 0xc4, 0x43, 0xfa,
	0xc7, 0xc8, 0x9b, 0x18, 0x19, 0x6e, 0xca, 0x02, 0xb6, 0x95, 0x85, 0x95, 0xbc, 0x53, 0xc9, 0x35,
	0x1a, 0xda, 0x64, 0x0d, 0x99, 0xd5, 0x39, 0x2a, 0x8d, 0x3a, 0x97, 0xb9, 0xcc, 0x2f, 0xd1, 0x26,
	0xea, 0xd4, 0x32, 0x60, 0x56, 0x16, 0xa7, 0xbc, 0x18, 0x09, 0x91, 0x62, 0x78, 0x9b, 0xac, 0x16,
	0x58, 0x0b, 0x63, 0x99, 0x5c, 0xbb, 0x5d, 0xd6, 0xbc, 0x85, 0x5a, 0x46, 0x5f, 0xf9, 0x9b, 0xe5,
	0xc8, 0x2f, 0xe2, 0x03, 0xb2, 0x61, 0x2f, 0xb7, 0x4f, 0x9d, 0xa7, 0x8d, 0xd4, 0x71, 0x7a, 0xcc,
	0x2b, 0xd1, 0xb7, 0x64, 0xbb, 0x31, 0x13, 0x0f, 0x48, 0x9b, 0x27, 0x89, 0xbb, 0x9b, 0x3b, 0x6e,
	0xb1, 0x5f, 0x06, 0x53, 0xf7, 0xa7, 0x0e, 0xbd, 0xf2, 0x24, 0x7d, 0xcc, 0x91, 0x00, 0xe0, 0x99,
	0x17, 0xc5, 0x22, 0x75, 0x99, 0xe7, 0x10, 0xf0, 0x0c, 0xd9, 0xa3, 0x4a, 0x7b, 0xad, 0xdb, 0xcc,
	0xc3, 0xf8, 0x05, 0xd9, 0xb1, 0x5e, 0x7d, 0xd0, 0x36, 0x44, 0xc7, 0xc9, 0x2d, 0x29, 0x7d, 0x4e,
	0xb6, 0xde, 0x8a, 0x1c, 0x38, 0x7a, 0xc7, 0xf3, 0x4b, 0xc8, 0xd9, 0x8c, 0xe7, 0x97, 0xb8, 0x4d,
	0x87, 0xe1, 0x98, 0x7e, 0x06, 0x2a, 0x06, 0x54, 0x8e, 0x57, 0xc3, 0xc5, 0x43, 0xbe, 0xd0, 0x5f,
	0x90, 0xde, 0x88, 0xcf, 0x45, 0xa5, 0x17, 0x93, 0xb5, 0x02, 0xce, 0xc2, 0x6a, 0xe1, 0x38, 0x58,
	0xdb, 0x6a, 0xac, 0xfd, 0x11, 0xe9, 0x32, 0x31, 0xcb, 0x56, 0x78, 0x56, 0xf7, 0x2c, 0xa4, 0xa7,
	0x24, 0x66, 0xe2, 0xc6, 0x25, 0x8e, 0x30, 0xc3, 0x2a, 0x7c, 0x95, 0xa5, 0x60, 0xc3, 0xdf, 0x48,
	0x07, 0x61, 0x26, 0x17, 0x0b, 0x9c, 0x71, 0x09, 0xe8, 0x20, 0xfd, 0x8c, 0x6c, 0x33, 0x71, 0xf3,
	0x5e, 0x2c, 0xfc, 0x19, 0x55, 0x27, 0x10, 0x85, 0x27, 0xf0, 0x73, 0xd2, 0x3d, 0x97, 0xb9, 0xd0,
	0x27, 0x19, 0x47, 0x56, 0x2e, 0x32, 0x5e, 0xb1, 0x02, 0x63, 0x4c, 0x71, 0x51, 0x08, 0x3d, 0x17,
	0x9e, 0x7a, 0x07, 0xe9, 0xef, 0x23, 0xd2, 0xaf, 0x9c, 0x0d, 0x0a, 0xf1, 0x3b, 0x59, 0x60, 0x69,
	0x85, 0x32, 0x37, 0x5e, 0xfa, 0x1b, 0x63, 0x11, 0x78, 0x81, 0xee, 0xa0, 0xb1, 0x0e, 0xb3, 0x00,
	0x92, 0x3a, 0x95, 0x5a, 0xe0, 0x72, 0x3c, 0xc0, 0x0e, 0xab, 0x05, 0x36, 0xe5, 0x67, 0xb6, 0x44,
	0xb8, 0x8c, 0xae, 0x05, 0xf4, 0x94, 0x3c, 0xab, 0xbc, 0x38, 0x9b, 0xce, 0x94, 0x36, 0xbe, 0x16,
	0x7c, 0xc7, 0x42, 0x46, 0xff, 0x1a, 0x05, 0xa6, 0x46, 0x22, 0x4f, 0xc7, 0xea, 0x28, 0x4d, 0xb5,
	0x28, 0x0a, 0x64, 0x46, 0xab, 0xa9, 0x3f, 0x2b, 0x18, 0xc7, 0x3b, 0xa4, 0x65, 0x94, 0xb3, 0xd0,
	0x32, 0x2a, 0xe8, 0x00, 0xed, 0x46, 0x07, 0x88, 0xc9, 0x5a, 0xae, 0x8c, 0x70, 0x65, 0x10, 0xc7,
	0xe0, 0x9a, 0x2c, 0xc6, 0xea, 0x5a, 0xe4, 0xd8, 0x49, 0x36, 0x99, 0x87, 0x50, 0xc0, 0x0c, 0x0c,
	0x46, 0xab, 0xe9, 0x44, 0x65, 0xd8, 0x4c, 0xba, 0x2c, 0x14, 0xd1, 0x9f, 0x90, 0x47, 0x61, 0x8e,
	0x9c, 0x88, 0xb0, 0xf9, 0x44, 0xe1, 0xd6, 0xf4, 0x97, 0xe4, 0x71, 0xa8, 0xfa, 0xae, 0x51, 0xaf,
	0xa3, 0xa0, 0x5e, 0xdf, 0x4f, 0xc8, 0xe7, 0xe4, 0x93, 0x6a, 0xf9, 0xb9, 0xd0, 0x97, 0xe2, 0x98,
	0x67, 0x3c, 0x4f, 0x84, 0x0b, 0x3d, 0xf2, 0xa1, 0xd3, 0x01, 0x59, 0x67, 0xe2, 0x66, 0x64, 0xb0,
	0xa5, 0x69, 0x1c, 0xf9, 0x5b, 0x63, 0x11, 0x7d, 0x41, 0x36, 0x6d, 0xe6, 0x1b, 0x0d, 0x2d, 0x51,
	0xc3, 0xb8, 0xa8, 0xb4, 0x2a, 0x4c, 0xff, 0x11, 0xa1, 0xcb, 0xc8, 0xc5, 0x50, 0x8b, 0xd7, 0x5a,
	0x70, 0x23, 0xe2, 0xe7, 0xa4, 0x97, 0xc0, 0x48, 0xe9, 0xdf, 0x06, 0xae, 0x6f, 0x39, 0x19, 0x1c,
	0x12, 0xb2, 0x0c, 0xdd, 0xb2, 0xe5, 0x58, 0xe6, 0xb6, 0x27, 0x17, 0x96, 0x46, 0xdb, 0x9b, 0x1c,
	0xc2, 0x2a, 0x99, 0x1b, 0xad, 0xd2, 0xd2, 0x66, 0x9c, 0x3d, 0x99, 0x86, 0x2c, 0xfe, 0x01, 0x21,
	0x6a, 0x91, 0x0b, 0xb7, 0x61, 0xc7, 0xb6, 0x30, 0x94, 0x1c, 0x39, 0xc2, 0x8c, 0x32, 0x3c, 0x73,
	0xdd, 0xde, 0x02, 0x90, 0xce, 0xb4, 0x4c, 0x04, 0x76, 0xfa, 0x36, 0xb3, 0x80, 0x6a, 0xf2, 0xd4,
	0x87, 0x74, 0x22, 0x73, 0x59, 0x5c, 0xb9, 0xa8, 0x7e, 0x4c, 0xb6, 0x2f, 0x10, 0x8b, 0x46, 0x58,
	0x3d, 0x2f, 0x3c, 0x72, 0x6f, 0x04, 0x17, 0x43, 0xab, 0x11, 0x43, 0xd3, 0xbf, 0xf6, 0x2d, 0xff,
	0xe8, 0xac, 0xde, 0x93, 0x89, 0xb9, 0xba, 0x0e, 0x98, 0xd4, 0x88, 0x9b, 0x4c, 0x3a, 0xd9, 0xbf,
	0xb3, 0xe3, 0x39, 0xe9, 0x41, 0x0e, 0x88, 0x2c, 0xb3, 0x89, 0xfc, 0x39, 0x94, 0xb7, 0x2c, 0x73,
	0x4d, 0xe1, 0x49, 0xfd, 0x60, 0x4b, 0xc5, 0x89, 0xd2, 0xa0, 0xc7, 0x50, 0x01, 0x48, 0x43, 0x2b,
	0x3e, 0xf7, 0x10, 0xd0, 0x33, 0xb2, 0xc5, 0xc4, 0xcd, 0x71, 0xb9, 0xb2, 0xd6, 0x3e, 0x25, 0xed,
	0x49, 0xb9, 0xba, 0xfb, 0xfa, 0x43, 0x63, 0xc7, 0xe5, 0x8a, 0xc1, 0x34, 0x98, 0x9a, 0x94, 0xab,
	0xda, 0x14, 0x02, 0xfa, 0x0d, 0x96, 0x42, 0x4b, 0x03, 0xec, 0x1b, 0xff, 0x0c, 0x92, 0x14, 0x90,
	0xb3, 0xf7, 0xff, 0xb7, 0xec, 0xd5, 0xaa, 0xcc, 0x29, 0x3e, 0xe0, 0xa4, 0xc0, 0xab, 0x78, 0xae,
	0x52, 0x79, 0xb1, 0x7a, 0xad, 0xf2, 0x0b, 0x79, 0x19, 0xef, 0x92, 0x76, 0x5d, 0x70, 0x60, 0x08,
	0x97, 0x45, 0xcd, 0x7c, 0x9d, 0x50, 0x33, 0x30, 0x35, 0xe7, 0x59, 0x29, 0x1c, 0x85, 0x16, 0xc0,
	0xa5, 0x98, 0x82, 0x1d, 0x29, 0xb4, 0xcb, 0xc7, 0x0a, 0xd3, 0xdf, 0x45, 0x96, 0x5b, 0x79, 0x99,
	0x33, 0xbe, 0x18, 0x2f, 0xef, 0xbd, 0xc2, 0x41, 0xb5, 0x6b, 0xdd, 0xa9, 0x76, 0x66, 0x79, 0x2a,
	0x96, 0x7e, 0x43, 0x04, 0x70, 0xcc, 0x62, 0x39, 0x93, 0xda, 0x17, 0x26, 0x87, 0xea, 0xc7, 0x6f,
	0xc7, 0x56, 0x68, 0x04, 0xf4, 0x05, 0xd9, 0xb1, 0xf7, 0xb7, 0xf2, 0xa1, 0xb2, 0x1a, 0x05, 0x56,
	0xe9, 0x04, 0xf5, 0x94, 0x36, 0x5f, 0x69, 0xfd, 0xd5, 0x5c, 0xe4, 0x06, 0xde, 0x74, 0x50, 0x2e,
	0xa7, 0x2a, 0x2d, 0x33, 0xe1, 0x94, 0x03, 0x09, 0x04, 0x6e, 0x94, 0x9b, 0xb5, 0x8e, 0x57, 0x18,
	0xf6, 0x10, 0x5a, 0x2b, 0x9f, 0x6d, 0x16, 0xd0, 0xef, 0x91, 0xce, 0x59, 0x6e, 0x5e, 0x1e, 0x02,
	0x0d, 0x29, 0x37, 0xdc, 0xf7, 0x2b, 0x18, 0x43, 0x11, 0x27, 0x4c, 0xdc, 0x0c, 0xcb, 0xc9, 0xe1,
	0x50, 0x4b, 0x7c, 0x88, 0x42, 0x02, 0x61, 0x6d, 0x70, 0x39, 0x5b, 0x09, 0x82, 0xba, 0xb9, 0x76,
	0x6f, 0xc9, 0xee, 0x04, 0x25, 0x1b, 0xae, 0x85, 0xc8, 0x53, 0xa1, 0x5d, 0x4d, 0x76, 0x08, 0x7c,
	0x9c, 0xca, 0xa5, 0xcc, 0xf1, 0xce, 0x77, 0x98, 0x05, 0x10, 0xf5, 0x0c, 0xdf, 0x9b, 0x33, 0x2e,
	0x35, 0x3e, 0xef, 0xbb, 0x2c, 0x90, 0x54, 0x6e, 0x6a, 0xf9, 0x3f, 0xed, 0xe6, 0x5f, 0x02, 0x37,
	0xcb, 0x89, 0xad, 0xdc, 0x89, 0x90, 0x73, 0x11, 0x54, 0x6e, 0x8b, 0x9b, 0x21, 0xb4, 0x1e, 0x0e,
	0xe1, 0xdb, 0x9b, 0x63, 0x1d, 0x42, 0xe7, 0xfe, 0x10, 0xd6, 0x83, 0x10, 0xe8, 0xdf, 0x22, 0x48,
	0xb9, 0x1b, 0x5b, 0xdf, 0x3e, 0x8e, 0xbf, 0xf9, 0x50, 0xfc, 0x77, 0xd8, 0xb4, 0xcf, 0x98, 0x8d,
	0xf0, 0x19, 0xf3, 0x6d, 0x6c, 0xfe, 0x06, 0x5e, 0x77, 0xb3, 0x6c, 0xe5, 0x3e, 0x77, 0x86, 0xd7,
	0x43, 0x2e, 0x35, 0x3c, 0x61, 0x8b, 0x2b, 0xb5, 0x18, 0x95, 0x49, 0x22, 0x8a, 0xe2, 0xa2, 0xcc,
	0xdc, 0xb7, 0xc1, 0x2d, 0xe9, 0x2d, 0xeb, 0x6b, 0x77, 0xac, 0xbf, 0xc2, 0x92, 0x0f, 0xb6, 0x8f,
	0x79, 0xf6, 0x25, 0xd4, 0x64, 0x5b, 0x3a, 0x1f, 0xe8, 0xf7, 0x48, 0x88, 0x2f, 0x67, 0x08, 0xe8,
	0xaf, 0xc8, 0x93, 0xd0, 0x3f, 0xdf, 0xed, 0x07, 0x64, 0x4b, 0xe5, 0x02, 0x5e, 0xdc, 0x61, 0xcb,
	0x08, 0x44, 0x50, 0x7b, 0x26, 0x56, 0xd9, 0x3f, 0x12, 0x1d, 0xa4, 0x7f, 0x6f, 0x91, 0x1d, 0x67,
	0xee, 0xcd, 0xb1, 0xfd, 0xbe, 0xac, 0xbf, 0x7a, 0xa3, 0xc6, 0x57, 0xef, 0xbf, 0x96, 0x40, 0x7b,
	0x64, 0x53, 0x95, 0xe6, 0xac, 0xfa, 0x5c, 0xef, 0xb0, 0x0a, 0x43, 0x9f, 0x37, 0xcb, 0x61, 0x39,
	0xc9, 0x64, 0xf2, 0xb5, 0x58, 0x31, 0x3c, 0xd9, 0x1e, 0x6b, 0xc8, 0xe2, 0x2f, 0xc8, 0xae, 0x8b,
	0xa4, 0x12, 0xe2, 0x59, 0xf7, 0xd8, 0x1d, 0x79, 0xdd, 0x04, 0x36, 0x82, 0x26, 0x10, 0xfc, 0x8b,
	0xb0, 0xd9, 0xf8, 0x17, 0x01, 0x3e, 0x5a, 0x96, 0xb6, 0x94, 0x76, 0xd1, 0x31, 0x0f, 0xab, 0x7f,
	0x12, 0x90, 0x04, 0x82, 0x9b, 0xd5, 0x02, 0xfa, 0x9e, 0xac, 0x41, 0x1a, 0x3f, 0xf4, 0xa8, 0x8b,
	0x0f, 0x48, 0xb7, 0x34, 0x4b, 0x75, 0xcc, 0x0b, 0x99, 0xb8, 0x7f, 0x39, 0x76, 0x5d, 0x03, 0x83,
	0x75, 0x28, 0x67, 0xb5, 0x0a, 0xfd, 0x82, 0x74, 0xec, 0xb5, 0x78, 0x4e, 0x3a, 0x20, 0xf5, 0x1f,
	0x79, 0x5b, 0xc1, 0x22, 0x66, 0x67, 0xe8, 0x05, 0x7e, 0x7f, 0x80, 0xe4, 0x6d, 0xa6, 0x26, 0x3c,
	0x3b, 0xf3, 0xfe, 0xd6, 0x27, 0x13, 0xdd, 0x3e, 0x19, 0xe8, 0x5c, 0x72, 0xf9, 0x3a, 0x78, 0xd5,
	0x57, 0xb8, 0x71, 0x6a, 0xed, 0xe0, 0x61, 0x5a, 0x90, 0x6e, 0xe5, 0x6b, 0xfc, 0x8a, 0x3c, 0x82,
	0xdd, 0x83, 0x1d, 0x5d, 0x5f, 0x7e, 0x16, 0x78, 0x18, 0xcc, 0xb2, 0xdb, 0xea, 0xf1, 0xa7, 0x64,
	0xbb, 0x3e, 0xac, 0xeb, 0xea, 0x9f, 0x81, 0xa6, 0x90, 0x32, 0xb2, 0x0b, 0x96, 0x70, 0xc9, 0x97,
	0x47, 0xd3, 0x5b, 0x0e, 0x36, 0x49, 0x7e, 0xe1, 0xb9, 0x6a, 0x21, 0x57, 0x77, 0x09, 0x76, 0x84,
	0xfd, 0x21, 0x02, 0xc6, 0x8a, 0xff, 0x1c, 0x63, 0xaf, 0xc9, 0x2e, 0x58, 0x0e, 0x9d, 0x44, 0xee,
	0xb6, 0x0e, 0xff, 0x2f, 0xf0, 0x21, 0x9c, 0x66, 0x77, 0x16, 0xd0, 0x8f, 0xe4, 0xf1, 0x09, 0x1c,
	0xf9, 0x08, 0x7e, 0xce, 0xf2, 0x0f, 0xb9, 0x18, 0x2f, 0xef, 0xa7, 0xb9, 0xfd, 0x1d, 0x68, 0x9e,
	0xac, 0xe3, 0x7f, 0x73, 0x2f, 0xff, 0x19, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x02, 0x2e, 0xfb, 0x0b,
	0x14, 0x00, 0x00,
}
