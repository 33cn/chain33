// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.9.1
// source: snowman.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SnowChits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID        uint32 `protobuf:"varint,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	PeerName         string `protobuf:"bytes,2,opt,name=peerName,proto3" json:"peerName,omitempty"`
	PreferredBlkHash []byte `protobuf:"bytes,3,opt,name=preferredBlkHash,proto3" json:"preferredBlkHash,omitempty"`
	AcceptedBlkHash  []byte `protobuf:"bytes,4,opt,name=acceptedBlkHash,proto3" json:"acceptedBlkHash,omitempty"`
}

func (x *SnowChits) Reset() {
	*x = SnowChits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowman_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowChits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowChits) ProtoMessage() {}

func (x *SnowChits) ProtoReflect() protoreflect.Message {
	mi := &file_snowman_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowChits.ProtoReflect.Descriptor instead.
func (*SnowChits) Descriptor() ([]byte, []int) {
	return file_snowman_proto_rawDescGZIP(), []int{0}
}

func (x *SnowChits) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *SnowChits) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *SnowChits) GetPreferredBlkHash() []byte {
	if x != nil {
		return x.PreferredBlkHash
	}
	return nil
}

func (x *SnowChits) GetAcceptedBlkHash() []byte {
	if x != nil {
		return x.AcceptedBlkHash
	}
	return nil
}

type SnowGetBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID uint32 `protobuf:"varint,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	PeerName  string `protobuf:"bytes,2,opt,name=peerName,proto3" json:"peerName,omitempty"`
	BlockHash []byte `protobuf:"bytes,3,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (x *SnowGetBlock) Reset() {
	*x = SnowGetBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowman_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowGetBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowGetBlock) ProtoMessage() {}

func (x *SnowGetBlock) ProtoReflect() protoreflect.Message {
	mi := &file_snowman_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowGetBlock.ProtoReflect.Descriptor instead.
func (*SnowGetBlock) Descriptor() ([]byte, []int) {
	return file_snowman_proto_rawDescGZIP(), []int{1}
}

func (x *SnowGetBlock) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *SnowGetBlock) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *SnowGetBlock) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type SnowPutBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID uint32 `protobuf:"varint,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	PeerName  string `protobuf:"bytes,2,opt,name=peerName,proto3" json:"peerName,omitempty"`
	BlockData []byte `protobuf:"bytes,3,opt,name=blockData,proto3" json:"blockData,omitempty"`
}

func (x *SnowPutBlock) Reset() {
	*x = SnowPutBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowman_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowPutBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowPutBlock) ProtoMessage() {}

func (x *SnowPutBlock) ProtoReflect() protoreflect.Message {
	mi := &file_snowman_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowPutBlock.ProtoReflect.Descriptor instead.
func (*SnowPutBlock) Descriptor() ([]byte, []int) {
	return file_snowman_proto_rawDescGZIP(), []int{2}
}

func (x *SnowPutBlock) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *SnowPutBlock) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *SnowPutBlock) GetBlockData() []byte {
	if x != nil {
		return x.BlockData
	}
	return nil
}

type SnowPullQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID uint32 `protobuf:"varint,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	PeerName  string `protobuf:"bytes,2,opt,name=peerName,proto3" json:"peerName,omitempty"`
	BlockHash []byte `protobuf:"bytes,3,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (x *SnowPullQuery) Reset() {
	*x = SnowPullQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowman_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowPullQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowPullQuery) ProtoMessage() {}

func (x *SnowPullQuery) ProtoReflect() protoreflect.Message {
	mi := &file_snowman_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowPullQuery.ProtoReflect.Descriptor instead.
func (*SnowPullQuery) Descriptor() ([]byte, []int) {
	return file_snowman_proto_rawDescGZIP(), []int{3}
}

func (x *SnowPullQuery) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *SnowPullQuery) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *SnowPullQuery) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type SnowPushQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID uint32 `protobuf:"varint,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	PeerName  string `protobuf:"bytes,2,opt,name=peerName,proto3" json:"peerName,omitempty"`
	BlockData []byte `protobuf:"bytes,3,opt,name=blockData,proto3" json:"blockData,omitempty"`
}

func (x *SnowPushQuery) Reset() {
	*x = SnowPushQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowman_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowPushQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowPushQuery) ProtoMessage() {}

func (x *SnowPushQuery) ProtoReflect() protoreflect.Message {
	mi := &file_snowman_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowPushQuery.ProtoReflect.Descriptor instead.
func (*SnowPushQuery) Descriptor() ([]byte, []int) {
	return file_snowman_proto_rawDescGZIP(), []int{4}
}

func (x *SnowPushQuery) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *SnowPushQuery) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *SnowPushQuery) GetBlockData() []byte {
	if x != nil {
		return x.BlockData
	}
	return nil
}

type SnowFailedQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID uint32 `protobuf:"varint,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	PeerName  string `protobuf:"bytes,2,opt,name=peerName,proto3" json:"peerName,omitempty"`
}

func (x *SnowFailedQuery) Reset() {
	*x = SnowFailedQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowman_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowFailedQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowFailedQuery) ProtoMessage() {}

func (x *SnowFailedQuery) ProtoReflect() protoreflect.Message {
	mi := &file_snowman_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowFailedQuery.ProtoReflect.Descriptor instead.
func (*SnowFailedQuery) Descriptor() ([]byte, []int) {
	return file_snowman_proto_rawDescGZIP(), []int{5}
}

func (x *SnowFailedQuery) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *SnowFailedQuery) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

type SnowChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash   []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *SnowChoice) Reset() {
	*x = SnowChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snowman_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnowChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowChoice) ProtoMessage() {}

func (x *SnowChoice) ProtoReflect() protoreflect.Message {
	mi := &file_snowman_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowChoice.ProtoReflect.Descriptor instead.
func (*SnowChoice) Descriptor() ([]byte, []int) {
	return file_snowman_proto_rawDescGZIP(), []int{6}
}

func (x *SnowChoice) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SnowChoice) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

var File_snowman_proto protoreflect.FileDescriptor

var file_snowman_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x6e, 0x6f, 0x77, 0x6d, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x43,
	0x68, 0x69, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x42, 0x6c, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x22, 0x66, 0x0a, 0x0c, 0x73, 0x6e, 0x6f, 0x77, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0x66, 0x0a, 0x0c,
	0x73, 0x6e, 0x6f, 0x77, 0x50, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x0d, 0x73, 0x6e, 0x6f, 0x77, 0x50, 0x75, 0x6c, 0x6c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0x67, 0x0a,
	0x0d, 0x73, 0x6e, 0x6f, 0x77, 0x50, 0x75, 0x73, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x0f, 0x73, 0x6e, 0x6f, 0x77, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x73, 0x6e, 0x6f, 0x77, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x1f, 0x5a,
	0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x33, 0x33, 0x63, 0x6e,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snowman_proto_rawDescOnce sync.Once
	file_snowman_proto_rawDescData = file_snowman_proto_rawDesc
)

func file_snowman_proto_rawDescGZIP() []byte {
	file_snowman_proto_rawDescOnce.Do(func() {
		file_snowman_proto_rawDescData = protoimpl.X.CompressGZIP(file_snowman_proto_rawDescData)
	})
	return file_snowman_proto_rawDescData
}

var file_snowman_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_snowman_proto_goTypes = []interface{}{
	(*SnowChits)(nil),       // 0: types.snowChits
	(*SnowGetBlock)(nil),    // 1: types.snowGetBlock
	(*SnowPutBlock)(nil),    // 2: types.snowPutBlock
	(*SnowPullQuery)(nil),   // 3: types.snowPullQuery
	(*SnowPushQuery)(nil),   // 4: types.snowPushQuery
	(*SnowFailedQuery)(nil), // 5: types.snowFailedQuery
	(*SnowChoice)(nil),      // 6: types.snowChoice
}
var file_snowman_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_snowman_proto_init() }
func file_snowman_proto_init() {
	if File_snowman_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snowman_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowChits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowman_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowGetBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowman_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowPutBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowman_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowPullQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowman_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowPushQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowman_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowFailedQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snowman_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnowChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snowman_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snowman_proto_goTypes,
		DependencyIndexes: file_snowman_proto_depIdxs,
		MessageInfos:      file_snowman_proto_msgTypes,
	}.Build()
	File_snowman_proto = out.File
	file_snowman_proto_rawDesc = nil
	file_snowman_proto_goTypes = nil
	file_snowman_proto_depIdxs = nil
}
