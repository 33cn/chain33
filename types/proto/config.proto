syntax = "proto3";

package types;

message Config {
    string     title      = 1;
    Log        log        = 2;
    Store      store      = 3;
    Consensus  consensus  = 5;
    MemPool    memPool    = 6;
    BlockChain blockChain = 7;
    Wallet     wallet     = 8;
    P2P        p2p        = 9;
    Rpc        rpc        = 10;
    Exec       exec       = 11;
    bool       testNet    = 12;
    bool       fixTime    = 13;
    Pprof      pprof      = 14;
    Authority  auth       = 15;
}

message Log {
    // 日志级别，支持debug(dbug)/info/warn/error(eror)/crit
    string loglevel        = 1;
    string logConsoleLevel = 2;
    // 日志文件名，可带目录，所有生成的日志文件都放到此目录下
    string logFile = 3;
    // 单个日志文件的最大值（单位：兆）
    uint32 maxFileSize = 4;
    // 最多保存的历史日志文件个数
    uint32 maxBackups = 5;
    // 最多保存的历史日志消息（单位：天）
    uint32 maxAge = 6;
    // 日志文件名是否使用本地事件（否则使用UTC时间）
    bool localTime = 7;
    // 历史日志文件是否压缩（压缩格式为gz）
    bool compress = 8;
    // 是否打印调用源文件和行号
    bool callerFile = 9;
    // 是否打印调用方法
    bool callerFunction = 10;
}
message MemPool {
    int64 poolCacheSize = 1;
    int64 minTxFee      = 2;
    bool  forceAccept   = 3;
}

message Consensus {
    string name                 = 1;
    string genesis              = 2;
    bool   minerstart           = 3;
    int64  genesisBlockTime     = 4;
    string hotkeyAddr           = 5;
    bool   forceMining          = 6;
    int64  NodeId               = 7;
    string PeersURL             = 8;
    string ClientAddr           = 9;
    int64  raftApiPort          = 15;
    bool   isNewJoinNode        = 16;
    string readOnlyPeersURL     = 17;
    string addPeersURL          = 18;
    int64  defaultSnapCount     = 19;
    int64  writeBlockSeconds    = 20;
    int32  heartbeatTick        = 21;
    string paraRemoteGrpcClient = 22;
    int64  startHeight          = 23;
    int64  emptyBlockInterval   = 24;
}

message Wallet {
    int64    minFee                = 1;
    string   driver                = 2;
    string   dbPath                = 3;
    int32    dbCache               = 4;
    string   signType              = 5;
    bool     forceMining           = 6;
    bool     minerdisable          = 7;
    repeated string minerwhitelist = 8;
}

message Store {
    string name    = 1;
    string driver  = 2;
    string dbPath  = 3;
    int32  dbCache = 4;
}

message BlockChain {
    int64  defCacheSize          = 1;
    int64  maxFetchBlockNum      = 2;
    int64  timeoutSeconds        = 3;
    int64  batchBlockNum         = 4;
    string driver                = 5;
    string dbPath                = 6;
    int32  dbCache               = 7;
    bool   isStrongConsistency   = 8;
    bool   singleMode            = 9;
    bool   batchsync             = 10;
    bool   isRecordBlockSequence = 11;
    bool   isParaChain           = 12;
}

message P2P {
    int32    seedPort               = 1;
    string   driver                 = 2;
    string   dbPath                 = 3;
    int32    dbCache                = 4;
    string   grpcLogFile            = 5;
    bool     isSeed                 = 6;
    bool     serverStart            = 7;
    repeated string seeds           = 8;
    bool            enable          = 9;
    int32           msgCacheSize    = 10;
    int32           version         = 11;
    int32           verMix          = 12;
    int32           verMax          = 13;
    bool            innerSeedEnable = 14;
    int32           innerBounds     = 15;
    bool            useGithub       = 16;
}

message Rpc {
    string   jrpcBindAddr             = 1;
    string   grpcBindAddr             = 2;
    repeated string whitlist          = 3;
    repeated string whitelist         = 4;
    repeated string jrpcFuncWhitelist = 5;
    repeated string grpcFuncWhitelist = 6;
    repeated string jrpcFuncBlacklist = 7;
    repeated string grpcFuncBlacklist = 8;
    string          mainnetJrpcAddr   = 9; //仅用于平行链向主链转发数据
}

message Exec {
    int64 minExecFee = 1;
    bool  isFree     = 2;
    bool  enableStat = 3;
    bool  enableMVCC = 4;
}

message Authority {
    bool   enable     = 1;
    string cryptoPath = 2;
    string  signType   = 3;
}

message Pprof {
    string listenAddr = 1;
}
