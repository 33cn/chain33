syntax = "proto3";

package types;

message AddressResult {
    string addr = 1;
    int64  amount = 2;
    repeated bytes hashValues = 3;
    repeated bool isBlack = 4;
    string showSecret = 5;
}

// order
message BlackwhiteRound {
    // txhash
    string gameID = 1;
    // create -> play -> show -> done(timeout done)
    int32 status = 2;
    // 游戏押金可大于
    int64 playAmount =3;
    // 游戏人数
    int32 playerCount = 4;
    // 当前游戏人数
    int32 curPlayerCount = 5;
    // 游戏需要比对次数
    int32 loop = 6;
    // 当前出示密钥人数
    int32 curShowCount = 7;
    // 创建游戏时间
    int64 createTime = 8;
    // 出示密钥开始时间
    int64 showTime = 9;
    // 超时时间
    int64 timeout = 14;
    // 创建游戏地址
    string createAddr = 10;
    // 游戏名称
    string gameName = 11;
    // 游戏加密结果
    repeated AddressResult addrResult = 12;
    // 游戏赢家
    repeated string winner = 13;
}

// actions
message BlackwhiteAction {
    oneof value {
        BlackwhiteCreate create = 1;
        BlackwhiteCancel cancel = 2;
        BlackwhitePlay play = 3;
        BlackwhiteShow show = 4;
        BlackwhiteTimeoutDone timeoutDone = 5;
    }
    int32 ty = 6;
}

message BlackwhiteCreate {
    int64 playAmount = 1;
    int32 playerCount = 2;
    int64 timeout = 3;
    string gameName = 4;
}

message BlackwhiteCancel {
    string gameID = 1;
}

message BlackwhitePlay {
    string gameID = 1;
    int64 amount = 2;
    repeated bool isBlack = 3;
}

message BlackwhiteShow {
    string gameID = 1;
    string secret = 2;
}

message BlackwhiteTimeoutDone {
    string gameID = 1;
}

// logs
message ReceiptBlackwhite {
    BlackwhiteRound round = 1;
}

message ReceiptBlackwhiteStatus {
    string gameID = 1;
    int32  status = 2;
    //记录上一次状态
    int32  prevStatus = 4;
    string addr       = 5;
}

message ReqBlackwhiteRoundInfo {
    string gameID = 1;
}

message ReplyBlackwhiteRoundInfo {
    BlackwhiteRound round = 1;
}

message ReqBlackwhiteRoundList {
    //优先根据status查询,status不可为空
    int32 status = 1;
    //二级搜索，如果要查询一个地址下的所有game信息，可以根据status，分多次查询，这样规避存储数据时的臃余情况
    string address = 2;
}

message ReplyBlackwhiteRoundList {
    repeated BlackwhiteRound round = 1;
}